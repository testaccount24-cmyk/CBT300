 TITLE 'L I S T L P A   S E R V I C E   A I D'
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*   CHANGE LOG:                                              *
*                                                            *
*   1 - JUL 14 2013 - S.GOLOB                                *
*           Fixed to display 31-bit addresses properly.      *
*           Added help on how to use this command, to        *
*             the comments here.                             *
*                                                            *
*   2 - JUL 14 2013 - S.GOLOB                                *
*           Added title to explain the meaning of the        *
*             columns.  Sorry that I don't understand        *
*             how to imitate the program's PUTLINE,          *
*             but at least I got some more PUTLINEs          *
*             to work.                                       *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*   LISTLPA IS A SERVICE AID FOR LISTING THE CONTENTS OF :   *
*                                                            *
*      (1)  THE PAGEABLE LINK PACK AREA (LPDE CHAIN)         *
*      (2)  THE MODIFIED, FIXED, AND ACTIVE LPA (CDE CHAIN)  *
*                                                            *
*   FOR AN OS/SVS SYSTEM.  LISTED, FOR EACH ENTRY, ARE :     *
*                                                            *
*      (1)  THE ENTRY POINT NAME                             *
*      (2)  THE ENTRY POINT ADDRESS                          *
*      (3)  THE LOAD ADDRESS                                 *
*      (4)  THE MODULE LENGTH                                *
*      (5)  THE MODULE ATTRIBUTES                            *
*                                                            *
*   LISTLPA MAY BE INVOKED AS A TSO COMMAND VIA A TERMINAL   *
*      OR THE OPERATOR'S CONSOLE (USING THE TMP PROCEDURE)   *
*                                                            *
*   LISTLPA ALLOWS THE OPTION OF LISTING ANY OR ALL OF THE   *
*      ABOVE AND ALSO OF FINDING SPECIFIC ENTRIES IN LPA.    *
*      ALSO, CDE'S NOT IN USE MAY BE (OPTIONALLY) EXCLUDED   *
*      WHEN THE ACTIVE QUEUE IS BEING DISPLAYED (TYPE 2).    *
*                                                            *
* ---------------------------------------------------------- *
*                                                            *
*   HELP FOR LISTLPA :                                       *
*                                                            *
*  )F FUNCTION -                                             *
*     THE LISTLPA COMMAND LISTS ENTRIES IN THE SEVERAL       *
*     SYSTEM LINK PACK AREAS, AS FOLLOWS :                   *
*       (1)  ACTIVE LINK PACK AREA (LPAQ CDE CHAIN)          *
*       (2)  PAGEABLE LINK PACK AREA (LPDE CHAIN)            *
*     AND MAY SELECT ANY OR ALL OF THE ABOVE AND ALSO :      *
*       (1)  A GIVEN ENTRY IN LPA                            *
*       (2)  A RANGE OF ENTRY NAMES IN LPA                   *
*       (3)  A LIST OF NAMES AND / OR RANGES OF NAMES        *
*     LISTLPA MAY BE USED UNDER TSO, RUN IN BATCH, OR USED   *
*     IN A CATALOGED PROCEDURE STARTED FROM AN OPERATOR'S    *
*     CONSOLE.                                               *
*  )X SYNTAX -                                               *
*     LISTLPA                                                *
*               ALL / ALPA / PLPA                            *
*               USED                                         *
*               FIND('NAME' / 'RANGE' ...)                   *
*        DEFAULTS - ALL                                      *
*  )O OPERANDS -                                             *
*  ))ALL      - LIST ALPA, AND PLPA                          *
*  ))ALPA     - LIST LPAQ CDE CHAIN.  INCLUDES MLPA, FLPA,   *
*               LOD, AND IN-USE MEMBERS OF PLPA (LPALIB).    *
*  ))PLPA     - LIST LPDE CHAIN.  INCLUDES ALL MEMBERS OF    *
*               LPALIB.                                      *
*  ))USED     - FOR USE WITH ALPA.  EXCLUDES FROM LISTING    *
*               CDE'S WITH USE COUNT ZERO (DELETED           *
*               MODULES).                                    *
*  ))FIND(..) - LOOK UP THE DESIGNATED MEMBER(S) AND / OR    *
*               RANGE(S) OF ENTRY NAMES IN ALL LPA.  IF      *
*               RANGES ARE SPECIFIED, THEY INDICATE A SET    *
*               OF NAMES BOUNDED BY THE LEADING SUBSTRINGS   *
*               SPECIFIED IN THE RANGE.                      *
*                                                            *
*      Example:   LISTLPA FIND(IGE)                          *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         MACRO
.*     --------------------------------------
.*     DISPLAY HEX VALUES IN CHARACTER FORMAT
.*     --------------------------------------
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R7,SAVER7A               Save area for BAL register
         STM   R15,R1,HEXSAVE           Save work registers
         LA    R1,&FROM                 Load from address
         LA    R0,&LEN                  Load number of chars to move
         LA    R15,&TO                  Load to address
         BAL   R7,HEX                   Go to routine - do the work
         LM    R15,R1,HEXSAVE           Restore work registers
         L     R7,SAVER7A               Restore BAL register
         MEND
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         SPACE 2
LISTLPA  CSECT
LISTLPA  RMODE 24
LISTLPA  AMODE 31
         SPACE
         USING LISTLPA,R12
         USING CPPL,R1
         USING PDL,R2
         USING UPT,R3
         USING PSCB,R4
         USING ECT,R5
         USING CDENTRY,R6
         USING CVTMAP,R8
         USING XTLST,R9
         USING DSAWRK,R10
         EJECT
         JVDENTER DSA=(DSAEND-DSAWRK),BASE=(R12),VERSION=&SYSPARM
         SPACE
         LR    R10,R13
         LM    R2,R5,CPPL
         L     R8,CVTPTR
         L     R6,CVTQLPAQ
         XC    ECB,ECB
         STM   R0,R15,UWA
         L     R11,PCLA
         EJECT
         LINK  EP=IKJPARS,DCB=0,VL=1,SF=(E,LINK),MF=(E,PPL),           +
               PARAM=(UPT,ECT,ECB,(11),ANS,(2),UWA)
         SPACE
         L     R2,ANS
         EJECT
* ----------------------------- *
*   P R I N T   H E A D E R S   *
* ----------------------------- *
         APUT  MSGHDR,L'MSGHDR
         APUT  MSGHDU,L'MSGHDU
         APUT  MSGTITL1,L'MSGTITL1
         APUT  MSGTITL2,L'MSGTITL2
         APUT  MSGTITLU,L'MSGTITLU
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*     IF NOT THE FIND OPTION, FORMAT THE REQUESTED QUEUES    *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
CHKALPA  CLI   ALPA+1,0
         BE    CHKPLPA
         LA    R6,MSGALPA
         ST    R6,LPATYPE
         L     R6,CVTQLPAQ
FRMALPA  DS    0H
         ICM   R6,B'1111',CDCHAIN
         BZ    CHKPLPA
         CLI   USED+1,0
         BE    SELALPA
         TM    CDRRBP,X'0F'
         BNZ   SELALPA
         CLC   CDUSE,=H'0'
         BE    FRMALPA
SELALPA  BAL   R11,SELECT
         B     FRMALPA
         SPACE
CHKPLPA  CLI   PLPA+1,0
         BE    RETURN
         LA    R6,MSGPLPA
         ST    R6,LPATYPE
         L     R6,CVTLPDIA
FRMPLPA  CLC   CDNAME,FOXES
         BE    RETURN
         BAL   R11,SELECT
         LA    R6,LPDEEND-LPDE+CDENTRY
         B     FRMPLPA
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*   WHEN ALL REQUESTED FUNCTIONS HAVE BEEN SERVICED, LEAVE   *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
RETURN   EQU   *
         SPACE
         IKJRLSA  ANS
         SPACE
         JVDLEAVE RC=0
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*     NAME / RANGE SELECT ROUTINE (EXIT FROM CHAIN SCAN)     *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
SELECT   EQU   *
         SPACE
         CLI   FIND+1,0
         BE    FORMAT
         LA    R15,NAME
         USING LRIPDE,R15
         SPACE
SELLOOP  EQU   *
         TM    LRISF1,X'80'
         BO    SELCHKF
         SPACE
SELCHKE  MVC   ENAME,BLANKS
         L     R14,LRIFAD
         LH    R1,LRIFLN
         BCTR  R1,0
         MVC   ENAME(*-*),0(R14)
         EX    R1,*-6
         CLC   ENAME(*-*),CDNAME
         EX    R1,*-6
         BE    FORMAT
         BNE   SELBUMP
         SPACE
SELCHKF  L     R14,LRIFAD
         LH    R1,LRIFLN
         BCTR  R1,0
         CLC   CDNAME(*-*),0(R14)
         EX    R1,*-6
         BL    SELBUMP
         SPACE
SELCHKS  L     R14,LRISAD
         LH    R1,LRISLN
         BCTR  R1,0
         CLC   CDNAME(*-*),0(R14)
         EX    R1,*-6
         BNH   FORMAT
         SPACE
SELBUMP  EQU   *
         L     R15,LRILNK
         CL    R15,NULL
         BNE   SELLOOP
         BR    R11
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*       NAME / RANGE LOOKUP ROUTINE (EXIT FROM PARSE)        *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
VERNAME  EQU   *
         SPACE
         SAVE (14,12),,VERNAME
         SPACE
         L     R2,0(R1)
         L     R1,4(R1)
         LM    R3,R10,12(R1)
         ST    R13,VSA+4
         LA    R1,VSA
         ST    R1,8(R13)
         LR    R13,R1
         SPACE 5
         SPACE 5
         L     R13,4(R13)
         RETURN (14,12),RC=0
         SPACE
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*      CDE / LPDE OUTPUT LINE FORMAT AND DISPLAY ROUTINE     *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
FORMAT   DS    0H
         SPACE
         MVC   MSGS,OUTMSGS
         LA    R14,MSGNAME
         LA    R15,MSGEPA
         LA    R0,MSGLOAD
         LA    R1,MSGLEN
         STM   R14,R1,OLD+4
         SPACE
FORMTYPE MVC   OLD+4*(1+1+1+1+1),LPATYPE
         LA    R1,OLD+4*(1+1+1+1+1+1)
FORMBASE MVC   MSGNAME+4+1(L'CDNAME),CDNAME
         HEX   MSGEPA+2+4,4,CDENTPT
FORMXT   DS    0H
         XR    R9,R9
         ICM   R9,B'1111',CDXLMJP
         BNZ   FORMLDLN
         LA    R9,LPDEXTLN-LPDE+CDENTRY-XTLMSBLA+XTLST
FORMLDLN TM    CDATTR,CDMIN
         BO    FORMATTR
         HEX   MSGLEN+4+1,3,XTLMSBLN
         HEX   MSGLOAD+4+1,4,XTLMSBAD
FORMATTR TM    CDATTR,CDNLR
         BO    FORMRENT
         LA    R15,MSGOL
         ST    R15,0(R1)
         LA    R1,4(R1)
FORMRENT TM    CDATTR,CDREN
         BNO   FORMREUS
         LA    R15,MSGRENT
         ST    R15,0(R1)
         LA    R1,4(R1)
FORMREUS TM    CDATTR,CDSER
         BNO   FORMOUT
         LA    R15,MSGREUS
         ST    R15,0(R1)
         LA    R1,4(R1)
         EJECT
FORMOUT  EQU   *
         SPACE 2
         LA    R0,OLD+4
         SR    R1,R0
         SRA   R1,2
         ST    R1,OLD
         SPACE
         PUTLINE                                                       +
               PARM=PUTLINE,ECT=ECT,UPT=UPT,ECB=ECB,MF=(E,IOPLST),     +
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     +
               OUTPUT=(OLD,TERM,SINGLE,INFOR)
         SPACE 2
         BR    R11
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*        CONSTANTS AND OTHER STATIC DATA FOR COMMAND         *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
PCLA     DC    A(LPAPCL)
BLANKS   DC    CL16' '
FOXES    DC    8X'FF'
NULL     DC    X'FF',AL3(0)
TRHEX    EQU   *-240
         DC    C'0123456789ABCDEF'
         SPACE
OUTMSGS  DS    0F
         MSGLPA   '         ',0
         MSGLPA   '          ',9
         MSGLPA   '       ',9
         MSGLPA   '         ',9
OUTMSGND EQU   *
         SPACE
MSGRENT  MSGLPA   ' RENT',9
MSGREUS  MSGLPA   ' REUS',9
MSGOL    MSGLPA   ' OL',9
MSGFLPA  MSGLPA   ' FLPA',9
MSGALPA  MSGLPA   ' ALPA',9
MSGPLPA  MSGLPA   ' PLPA',9
MSGNOTF  MSGLPA   ' NOT FOUND IN',9
MSGHDR   DC    C'            LISTLPA  -  Version 1.2 '
MSGHDU   DC    C'            -------  -  ----------- '
MSGTITL1 DC    C'Entry Pt  Entry Pt Load Pt  Module    Module '
MSGTITL2 DC    C'Name      Address  Address  Length  Attributes'
MSGTITLU DC    C'--------  -------- -------- ------ --------------'
         SPACE
         LTORG
         PRINT GEN,DATA
PATCH    DC    64S(*)
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)         Move byte
         UNPK  0(3,R15),1(2,R15)      Unpack
         TR    0(2,R15),HEXTAB-240    Translate
         LA    R15,2(,R15)            Increment output pointer
         LA    R1,1(,R1)              Increment input pointer
         BCT   R0,HEX                 Decrement length, then loop
         MVI   0(R15),C' '            Blank the trailing byte
         BR    R7                     Return to caller
HEXTAB   DC    C'0123456789ABCDEF'    Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*         PARSE CONTROL LIST FOR COMMAND PARAMETERS          *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
LPAPCL   IKJPARM DSECT=PDL
         SPACE 2
FIND     IKJKEYWD
         SPACE
         IKJNAME  'FIND',SUBFLD=NAMES,INSERT='ALL'
         SPACE 2
ALL      IKJKEYWD
         SPACE
         IKJNAME  'ALL',INSERT='ALPA,PLPA'
         SPACE 2
ALPA     IKJKEYWD
         SPACE
         IKJNAME  'ALPA'
         IKJNAME  'MLPA'
         SPACE 2
PLPA     IKJKEYWD
         SPACE
         IKJNAME  'PLPA'
         SPACE 2
USED     IKJKEYWD
         SPACE
         IKJNAME  'USED'
         SPACE 2
NAMES    IKJSUBF
         SPACE
NAME     IKJIDENT                                                      +
               'ENTRY NAME',LIST,RANGE,MAXLNTH=8,                      +
               FIRST=ALPHA,OTHER=ALPHANUM,                             +
               PROMPT='NAME OR RANGE+',                                +
               HELP='ENTRY NAME OR RANGE OF ENTRY NAMES TO BE FOUND'
*              VALIDCK=VERNAME
         SPACE 2
         IKJENDP
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*            DECLARE COMMAND DYNAMIC WORK AREAS              *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
DSAWRK   DSECT
         SPACE
SSA      DS    18F
VSA      DS    18F
DXD      DS    0DL2
DWD      DS    01D
DWD2     DS    01D
ANS      DS    01A
PARC     DS    01F
ECB      DS    01F
UWA      DS    16F
OLD      DS    10F
IOPLST   DS    05F
LPATYPE  DS    01A
ENAME    DS    CL8
         SPACE
         PRINT GEN,DATA
         SPACE
MSGS     DS    0XL(OUTMSGND-OUTMSGS)
MSGNAME  MSGLPA   ' NNNNNNNN',0
MSGEPA   MSGLPA   '    EEEEEE',9
MSGLEN   MSGLPA   ' LLLLLL',9
MSGLOAD  MSGLPA   ' AAAAAAAA',9
         EJECT
LINK     LINK  SF=L
         SPACE
PUTLINE  PUTLINE MF=L
         SPACE
PPL      CALL  ,(UPT,ECT,ECB,LPAPCL,ANS,CPPLCBUF,UWA),MF=L
         SPACE
HEXSAVE  DS    3F
SAVER7A  DS    F
DSAEND   DS    0D
         SPACE 2
LRIPDE   DSECT  ,  LIST / RANGE IDENT PARSE DESCRIPTOR ELEMENT
         SPACE
LRIFAD   DS    A       FIRST - ADDRESS OF STRING
LRIFLN   DS    H       FIRST - LENGTH OF STRING
LRIFF1   DS    B       FIRST - PRESENCE FLAG
LRIFF2   DS    B       FIRST - RESERVED FLAG
LRISAD   DS    A       SECOND - ADDRESS OF STRING
LRISLN   DS    H       SECOND - LENGTH OF STRING
LRISF1   DS    B       SECOND - PRESENCE FLAG
LRISF2   DS    B       SECOND - RESERVED FLAG
LRILNK   DS    A       LINK TO NEXT PDE
         EJECT
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                            *
*         SYSTEM CONTROL BLOCK FORMAT DECLARATIONS           *
*                                                            *
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         SPACE 2
         IHACDE
         EJECT
         IHALPDE
LPDEEND  EQU   *
         EJECT
         IHAXTLST
         EJECT
         CVT   LIST=YES,DSECT=YES
         EJECT
         IKJCPPL
         EJECT
         IKJUPT
         EJECT
         IKJECT
         EJECT
         IKJPSCB
         EJECT
         IKJIOPL
         EJECT
         IKJPTPB
         EJECT
         JVDEQU
         SPACE 2
         END   LISTLPA
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
