         TITLE '    F I N D  -  S U B C O M M A N D   O F   T E S T  '
***********************************************************************
*                                                                     *
*     'FIND' SUBCOMMAND OF TEST                                       *
*                                                                     *
*     THIS BLOCK OF COMMENTS IS FOR THE MINOR CHANGES MADE AT         *
*     AIR FORCE DATA SERVICES CENTER, THE PENTAGON,                   *
*     TO THIS CODE, WHICH WAS OBTAINED FROM THE MVS MODS TAPE         *
*     DISTRIBUTED BY CONNECTICUT BANK AND TRUST. THE CODE IS FROM     *
*     FLORIDA POWER AND LIGHT COMPANY.                                *
*                                                                     *
*     CHANGES FOR 01MAY81:                                            *
*     .  USER MACROS $ENTRY AND $RTRN HAVE BEEN REPLACED WITH         *
*        EQUIVALENT INLINE CODE AND REGISTER EQUATES.                 *
*     .  USER MACRO #TSOMSG HAS BEEN COPIED INTO THIS CODE.           *
*     .  THUS, ONLY IBM MACRO LIBRARIES (MACLIB AND PRIVMACS)         *
*        ARE REQUIRED FOR ASSEMBLY.                                   *
*     .  CSECT NAME SS0812 IS CHANGED TO IKJEG9FI.                    *
*                                                                     *
***********************************************************************
         TITLE 'UPDATES FOR Z/OS'
***********************************************************************
*                                                                     *
*     ONCE THE MVS VERSION OF THIS PROGRAM WAS ENABLED FOR AMODE31    *
*     IT CONTINUED TO WORK ON LATER OPERATING SYSTEM RELEASES.        *
*     IT WAS KNOWN TO WORK ON OS/390 2.7, AND KNOWN TO NO LONGER      *
*     WORK ON OS/390 2.9 - PROBABLY BECAUSE OF CHANGES TO THE         *
*     INTERNAL TEST TERMINAL I/O INTERFACE.                           *
*                                                                     *
*     AS A RESULT, THE FOLLOWING POINTS APPLY TO THIS Z/OS VERSION:   *
*       - THE IKJEGSIO I/O INTERFACE HAS BEEN REMOVED,                *
*         AND WITH IT WENT THE '&OPSYSTM' LOCAL SYMBOL.               *
*       - A STANDARD PUTLINE INTERFACE IS USED TO DISPLAY OUTPUT.     *
*         USING TPUT WOULD HAVE BEEN SIMPLER, BUT AS SOON AS YOU      *
*         DO THAT SOMETHING WILL OCCUR WHICH WILL MAKE YOU WISH       *
*         THAT PUTLINE HAD BEEN EMPLOYED.                             *
*       - 'TCOMTAB' , 'BRKELEM' AND 'IKJPARMA' ARE SHIPPED IN         *
*         SYS1.MACLIB BY Z/OS.                                        *
*       - THE SPM STUFF - A RELIC DUE TO THE 24-BIT BEHAVIOUR OF      *
*         BAL/BALR IT WOULD SEEM - HAS BEEN COMMENTED OUT.            *
*                                                                     *
*     TO ACTIVATE ONCE INSTALLED, USE                                 *
*                                                                     *
*       TEST SUBCMD((F,IKJT9FIZ),(FIND,IKJT9FIZ))                     *
*                                                                     *
*     IN THE RELEVANT IKJTSOXX MEMBER OF PARMLIB, WHERE 'F' AND       *
*     'FIND' ARE THE NAMES YOU HAVE CHOSEN TO GIVE THIS               *
*     SUBCOMMAND, AND 'IKJT9FIZ' IS THE NAME YOU HAVE GIVEN THE       *
*     LOAD MODULE OF THIS PROGRAM.                                    *
*                                                                     *
*     CHANGED LINES ARE MARKED WITH A '01' IN COLUMNS 79-80,          *
*     THANKS TO ISPF STATISTICS.                                      *
*                                               GP@P6 - FEBRUARY 2016 *
*                                                                     *
***********************************************************************
         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*              ASSEMBLY OF THIS ROUTINE REQUIRES SEVERAL MACROS       *
*              FROM THE PRIVATE MACROS WHICH ARE PART OF THE          *
*              OPTIONAL MATERIAL AVAILABLE WITH THE OPERATING         *
*              SYSTEM.  SEE MACROS USED.                              *
*                                                                     *
*              SUBCOMMANDS TO BE ADDED TO TEST MUST BE ADDED TO       *
*              THE USER SUBCOMMAND TABLE (IKJEGSCU).  THE ENTRY       *
*              MUST DEFINE THE NAME OF THE SUBCOMMAND, THE            *
*              ABBREVIATION (IF ANY), THE NAME OF THE LOAD MODULE     *
*              TO BE INVOKED, AND AN ID CHARACTER.  INFORMATION       *
*              ON THE SUBCOMMAND TABLE MAY BE FOUND IN THE ABOVE      *
*              MANUAL.  A MACRO, IKJEGSUB, IN PRIVATE MACROS IS       *
*              AVAILABLE TO CONSTRUCT THE USER SUBCOMMAND TABLE       *
*              MODULE.  USING IKJEGSUB, THE ENTRY FOR FIND WOULD BE:  *
*                                                                     *
*                   IKJEGSUB  (FIND,F,IKJEG9FI),CSECT=USER            *
*                                                                     *
*              THE IKJEGSCU CSECT MUST BE LINKED INTO THE TEST        *
*              MAINLINE MODULE, IKJEGMNL.                             *
*                                                                     *
*              TO ADD TSO COMMANDS AS TEST SUBCOMMANDS, SPECIFY       *
*              IKJEGCIV AS THE LOAD MODULE NAME.                      *
*                                                                     *
***********************************************************************
IKJEG9FI TITLE 'FIND SUBCOMMAND OF TEST'
         MACRO
&NAME    #TSOMSG &MSG,&OFFSET=0,&LENGTH=
.* FUNCTION        GENERATE A MESSAGE LINE IN PUTLINE FORMAT WITH
.*                 LENGTH AND OFFSET HEADERS.
.*                 THE LENGTH OF THE MESSAGE IS ROUNDED UP TO THE
.*                 NEXT FULLWORD MULTIPLE.
         LCLA  &LEN,&LEN2
         AIF   ('&LENGTH' EQ '').CALCLEN
&LEN     SETA  &LENGTH
         AGO   .GETLEN2
.CALCLEN ANOP
&LEN     SETA  K'&MSG-2
&LEN     SETA  ((&LEN-1)/4+1)*4
.GETLEN2 ANOP
&LEN2    SETA  &LEN+4
&NAME    DC    H'&LEN2,&OFFSET',CL&LEN.&MSG
         MEND

         MACRO
         VALUPDE
***********************************************************************
*                                                                     *
*        MAPPING DSECT FOR PDES FOR VALUES                            *
*                                                                     *
*        STATUS --  VERSION NO. 02                                    *
*                                                                     *
*        CHANGE LEVEL -- 00 - DATE 03/09/72                           *
*                                                                     *
***********************************************************************
VALUPDE  DSECT
VALUPTR  DS    F -                      POINTER TO CHARACTER STRING,
*                                       FIRST BYTE AFTER QUOTE
VALULNH  DS    H -                      LENGTH OF CHARACTER STRING,
*                                       EXCLUDING QUOTES
VALUFLG  DS    XL1 -                    FLAG
VALUBIT  EQU   B'10000000' -            BIT ON MEANS VALUE PRESENT
VALUTYPE DS    CL1 -                    TYPE CHARACTER (CHARACTER
*                                       PRECEDING QUOTE)
VALUCHAI DS    F -                      ADDRESS OF NEXT VALUE
*                                       PDE ON CHAIN
VALUPDL  EQU   *-VALUPDE -              LENGTH OF VALUE PDE
         MEND
         EJECT
***********************************************************************
*                                                                     *
* NAME         IKJT9FI  (ALIAS FIND, F)                               *
*              SUBCOMMAND OF TEST                                     *
*                                                                     *
* FUNCTION     SEARCH AN ADDRESS RANGE FOR A SPECIFIED VALUE AND      *
*              DISPLAY THE LOCATION OF THE FIRST CHARACTER OF THE     *
*              STRING.                                                *
*                                                                     *
* DESCRIPTION  THE FIND SUBCOMMAND OF TEST MAY BE USED TO LOCATE A    *
*              SPECIFIC DATA STRING IN A PROGRAM BEING TESTED.  THE   *
*              USER MUST SPECIFY AN ADDRESS RANGE WHERE THE STRING IS *
*              TO BE LOCATED AND A STRING OF DATA TO BE FOUND.  THE   *
*              ADDRESS RANGE MAY BE SPECIFIED IN ANY FORM ACCEPTABLE  *
*              TO TEST.  THE STRING TO BE LOCATED MUST BE SPECIFIED   *
*              AS A DATA-TYPE AND VALUE.                              *
*                                                                     *
* RESTRICTIONS AND LIMITATIONS                                        *
*                                                                     *
*              THE ADDRESS RETURNED IS ALWAYS AN ABSOLUTE ADDRESS.    *
*                                                                     *
*              THE ENTIRE STRING MUST BE CONTAINED WITHIN THE ADDRESS *
*              RANGE SPECIFIED.                                       *
*                                                                     *
* SYNTAX       FIND  ADDRESS-RANGE  DATA-TYPE'VALUE'  ALL             *
*                                                                     *
*              DEFAULTS - NONE                                        *
*              REQUIRED - ADDRESS-RANGE, DATA-TYPE'VALUE'             *
*                                                                     *
*              ALIAS    - F                                           *
*                                                                     *
* OPERANDS     ADDRESS-RANGE                                          *
*                   SPECIFIES THE ADDRESSES BETWEEN WHICH THE SEARCH  *
*                   IS TO BE PERFORMED.  SEE DESCRIPTION OF THE TEST  *
*                   COMMAND FOR VALID ADDRESS FORMATS.  THIS OPERAND  *
*                   MUST BE ENTERED AS A RANGE.                       *
*                                                                     *
*              DATA-TYPE'VALUE'                                       *
*                   SPECIFIES THE TYPE OF DATA AND THE VALUE THAT IS  *
*                   TO BE FOUND.  THE TYPE OF DATA IS INDICATED BY A  *
*                   TYPE CODE CHARACTER.                              *
*                                                                     *
*                   THE VALUE IS ENTERED FOLLOWING THE CODE.  THE     *
*                   DATA MUST BE ENCLOSED WITHIN APOSTROPHES.  ANY    *
*                   SINGLE APOSTROPHES WITHIN THE DATA MUST BE CODED  *
*                   AS TWO SINGLE APOSTROPHES.  CHARACTER DATA IS     *
*                   ENTERED AS IS; ALL OTHER DATA TYPES WILL BE       *
*                   TRANSLATED TO UPPERCASE (IF NECESSARY).           *
*                                                                     *
*                   VALID DATA TYPES, TYPE CODES, MAXIMUM LENGTH,     *
*                   LIMIT VALUES, AND ALLOWABLE CHARACTERS ARE        *
*                   DEFINED BY THE FOLLOWING TABLE:                   *
*                                                                     *
*    --------------------------------------------------------------   *
*   |DATA TYPE       |TYPE|MAX|   MAX    |    MIN    |VALID| VALID |  *
*   |                |CODE|LEN|  VALUE   |   VALUE   |SIGNS| CHARS |  *
*   |--------------------------------------------------------------|  *
*   |CHARACTER       |  C | 64|   N/A    |    N/A    | N/A |  ALL  |  *
*   |HEXADECIMAL     |  X | 64|   N/A    |    N/A    | NONE|0-9,A-F|  *
*   |BINARY          |  B | 64|   N/A    |    N/A    | NONE|  0-1  |  *
*   |HALFWORD        |  H | 6 |     32767|     -32768| +,- |  0-9  |  *
*   |FULLWORD        |  F | 11|2147483647|-2147483648| +,- |  0-9  |  *
*   |PACKED DECIMAL  |  P | 32|1*10**32-1|-1*10**32-1| +,- |  0-9  |  *
*   |ADDRESS CONSTANT|  A | 11|2147483647|          0|  +  |  0-9  |  *
*   |ADDRESS CONSTANT|  V | 11|2147483647|          0|  +  |  0-9  |  *
*   |HALFWORD ADDRESS|  Y | 6 |     32767|          0|  +  |  0-9  |  *
*    --------------------------------------------------------------   *
*                                                                     *
*                   MAXIMUM LENGTH INCLUDES ONE CHARACTER FOR A SIGN  *
*                   FOR DATA TYPES WHERE A SIGN IS VALID.  THE        *
*                   NUMERIC PORTION HAS A MAXIMUM LENGTH OF ONE LESS  *
*                   THAN THE VALUE SHOWN.                             *
*                                                                     *
*              ALL                                                    *
*                   SPECIFIES THAT ALL OCCURRENCES OF THE SEARCH      *
*                   STRING WITHIN THE SPECIFIED RANGE ARE TO BE       *
*                   IDENTIFIED.  IF ALL IS NOT SPECIFIED, PROCESSING  *
*                   TERMINATES AFTER THE FIRST OCCURRENCE IS FOUND.   *
*                                                                     *
* SUBCOMMANDS  FIND HAS NO SUBCOMMANDS.                               *
*                                                                     *
* EXAMPLES                                                            *
*                                                                     *
*              FIND ALL OCCURRENCES OF "IKJDAIR" IN A DSAT            *
*              SUBROUTINE.                                            *
*                                                                     *
*              FIND .DSATPDS:.DSATPDS.RTRN C'IKJDAIR' ALL             *
*                                                                     *
*              STRING FOUND AT 0998F8.                                *
*              STRING FOUND AT 099928.                                *
*              STRING FOUND AT 099950.                                *
*              STRING FOUND AT 099AA8.                                *
*                                                                     *
*              FIND THE FIRST GETMAIN SVC IN A PROGRAM.               *
*                                                                     *
*              F +0:+1000 X'0A0A'                                     *
*                                                                     *
*              STRING FOUND AT 097F58.                                *
*                                                                     *
* RETURN CODES  0 - COMPLETION OF SUBCOMMAND (WITH OR WITHOUT ERROR)  *
*              16 - ATTENTION ENTERED DURING SUBCOMMAND PROCESSING    *
*                                                                     *
* REFERENCES   SY35-0004  OS/VS2 COMMAND PROCESSOR LOGIC              *
*                         VOLUME III: TEST                            *
*                                                                     *
* FPL MACROS USED                                                     *
*              $ENTER        ENTRY LINKAGE                            *
*              $RTRN         RETURN LINKAGE                           *
*              #TSOMSG       CONSTRUCT A MESSAGE IN PUTLINE FORMAT    *
*                                                                     *
* IBM MACROS USED                                                     *
*              FREEMAIN      FREE STORAGE                             *
*              GETMAIN       OBTAIN STORAGE                           *
*              IKJPARM       DEFINE PARSE PARAMETER CONTROL LIST      *
*              IKJPOSIT      DEFINE POSITIONAL PARAMETER              *
*              IKJKEYWD      DEFINE KEYWORD PARAMETER                 *
*              IKJNAME       DEFINE KEYWORD VALUE                     *
*              IKJENDP       END PARAMETER LIST                       *
*              STAX          CONTROL ATTENTION PROCESSING             *
*                                                                     *
* TEST MACROS USED  (THESE MACROS ARE AMONG THE PRIVATE MACROS WHICH  *
*                    ARE PART OF THE SYSTEM OPTIONAL MATERIAL)        *
*              BRKELEM       MAP BREAKPOINT ELEMENT                   *
*              IKJPARMA      MAP ADDRESS PDE                          *
*              TCOMTAB       MAP TEST COMMUNICATIONS TABLE            *
*                                                                     *
* TSO SERVICE ROUTINES USED                                           *
*              IKJPARS       PROCESS SUBCOMMAND OPERANDS              *
*                                                                     *
* TEST SERVICE ROUTINES USED                                          *
*              IKJEGCVT      CONVERT INPUT VALUES TO BINARY           *
*              IKJEGIO       DISPLAY OUTPUT TO TERMINAL               *
*                                                                     *
* REGISTERS    ON ENTRY -                                             *
*                 R9  - TEST COMMUNICATIONS TABLE (TCOMTAB)           *
*                 R13 - SAVE AREA                                     *
*                 R14 - RETURN ADDRESS                                *
*                 R15 - ENTRY POINT ADDRESS                           *
*                                                                     *
*              USAGE -                                                *
*                 R0  - PARAMETER AND WORK REGISTER                   *
*                 R1  - PARAMETER AND WORK REGISTER                   *
*                 R2  - WORK                                          *
*                 R3  - WORK                                          *
*                 R4  - WORK                                          *
*                 R5  - WORK                                          *
*                 R6  - WORK                                          *
*                 R7  - WORK                                          *
*                 R8  - WORK                                          *
*                 R9  - TEST COMMUNICATIONS AREA BASE REGISTER        *
*                 R10 - PDL BASE REGISTER                             *
*                 R11 - WORK AREA BASE REGISTER                       *
*                 R12 - PROGRAM BASE REGISTER                         *
*                 R13 - SAVE AREA ADDRESS                             *
*                 R14 - LINKAGE AND WORK REGISTER                     *
*                 R15 - LINKAGE AND WORK REGISTER                     *
*                                                                     *
* AUTHOR          RICHARD GOLDNER                                     *
*                                                                     *
* MODIFICATIONS   MODIFIED BY GORDON P. WEST TO INTERFACE WITH        *
*                 MVS VERSIONS OF THE TEST I/O SUBROUTINES, TO        *
*                 USE MAPPING MACROS, ADDITIONAL ERROR MESSAGES,      *
*                 AND PERFORM MORE EXTENSIVE PARAMETER VALIDATION     *
*                 (ADAPTED FROM IKJEGPCH - FIRST LOAD OF ASSIGNMENT   *
*                 FUNCTION).                                          *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
IKJEG9FI RSECT
IKJEG9FI AMODE 31
IKJEG9FI RMODE ANY
         USING *,R12
         B     32(,R15)
         DC    AL1(11),CL11'IKJEG9FI'
         DC    CL16' &SYSDATE &SYSTIME '
         STM   14,12,12(R13)
         LR    R12,R15                 BASE REGISTER
***      LA    R15,15                  LOAD PGM MASK SETTING
***      SLA   R15,24                  SHIFT TO BITS 4-7
***      SPM   R15                     SET PGM MASK AND COND

*--------CHAIN SAVE AREAS
         USING TCOMTAB,R9              TEST COMMUNICATIONS TABLE
         L     R10,REGSAVE2            GET ADDR OF SAVEAREA FOR SUBCMDS
         ST    R10,8(R13)              CHAIN SAVE AREAS
         ST    R13,4(R10)
         LR    R13,R10
*--------OBTAIN WORKING STORAGE
         GETMAIN R,LV=ENDDSECT-WORK    OBTAIN STORAGE
         LR    R11,R1                  SAVE ADDRESS
         USING WORK,R11                WORK AREA ADDRESSABILITY
***      MVI   FLAGS,X'00'             CLEAR INDICATORS
         XC    SAVE(ENDDSECT-WORK-256),SAVE

         TITLE 'PARSE SUBCOMMAND OPERANDS'
***********************************************************************
*                                                                     *
*        PARSE SUBCOMMAND OPERANDS                                    *
*                                                                     *
***********************************************************************

         LM    R2,R3,PARMLIST          GET ADDR OF UPT AND ECT
         LA    R4,MYECB                GET ADDR OF ECB
         L     R5,=A(PCL)
         LA    R6,MYANS                ADDR OF ANSWER PLACE
         L     R7,INBUF                ADDR OF INPUT BUFFER
         LR    R8,R11                  ADDR OF WORKAREA
         STM   R2,R8,FINDPPL           SET UP PARSE PARM LIST
         ST    R9,ATCOMTAB             SAVE TCOMTAB ADDRESS
         LA    R1,FINDPPL              ADDR OF PARSE PARM LIST
         L     R15,CVTPTR(,0)          POINT TO THE CVT
         L     R15,CVTPARS-CVT(,R15)   GET IKJPARS EP
         BALR  R14,R15                 CALL IKJPARS
         LTR   R15,R15                 TEST FOR ERROR
         BNZ   ERRPARSE
         L     R10,MYANS               LOAD PARSE ANSWER AREA ADDRESS
         USING IKJPARMD,R10            PDL ADDRESSABILITY

         TITLE 'CONVERT SEARCH STRING TO BINARY'
***********************************************************************
*                                                                     *
*        CONVERT THE CHARACTER STRING ENTERED BY THE USER TO          *
*        BINARY.  THE TEST SERVICE ROUTINE IKJEGCVT IS USED FOR       *
*        THE CONVERSION OF ALL DATA TYPES EXCEPT CHARACTER.           *
*                                                                     *
*        SINCE THE CONVERSION WORK AREA USED BY IKJEGCVT IS           *
*        ONLY 32 BYTES LONG, CONVERSION OF HEXADECIMAL STRINGS        *
*        MUST BE PERFORMED IN GROUPS OF 8.                            *
*                                                                     *
*        THE DATA TYPE CODE IN THE PDE HAS ALREADY BEEN CONVERTED     *
*        TO THE IKJEGCVT CONVERSION CODE BY THE VALIDITY CHECK        *
*        EXIT ROUTINE.                                                *
*                                                                     *
*             R0  - PARAMETER REGISTER AND TOTAL LENGTH OF STRING     *
*             R1  - PARAMETER REGISTER                                *
*             R2  - POINTER TO NEXT CHARACTER TO BE CONVERTED         *
*             R3  - LENGTH OF STRING REMAINING TO BE CONVERTED        *
*             R4  - POINTER TO NEXT CHARACTER FOR CONVERTED STRING    *
*             R5  - LENGTH OF SECTION JUST CONVERTED                  *
*             R6  - ADDRESS OF CONVERSION WORK AREA                   *
*             R7  - NOT USED                                          *
*             R8  - NOT USED                                          *
*                                                                     *
***********************************************************************

         MVC   MAX,XMAX                SET MAX LENGTH
         CLI   STRING+7,X'04'          IKJEGCVT CODE INDICATE HEX?
         BL    CHAR1                   CHARACTER
         BH    MOVROUT                 NOT HEX
         MVC   MAX,=H'8'               MAX NO. OF HEX DIGITS TO CONVERT
MOVROUT  L     R2,STRING               LOAD ADDRESS OF STRING
         LH    R3,STRING+4             LOAD LENGTH OF STRING
         L     R4,WORKAREA             LOAD WORK AREA ADDRESS
         LA    R4,CWORKCMD(R4)         ADDRESS OF FIND WORK AREA
         L     R6,CONAREA              ADDRESS OF IKJEGCVT WORK AREA
         XC    STRNGLEN,STRNGLEN       ZERO CONVERTED STRING LENGTH

AGAIN    STH   R3,STRING+4             STORE LENGTH TO BE CONVERTED
         CH    R3,MAX                  TEST FOR MORE THAN MAX
         BNH   CONVERT
         MVC   STRING+4(2),MAX         RESET LENGTH TO MAX
CONVERT  SR    R0,R0                   ZERO PARAMETER REGISTER
         LA    R1,STRING               ADDRESS OF PDE
         L     R15,TSTCONVT            ADDR OF IKJEGCVT
         BALR  R14,R15
         LTR   R15,R15                 TEST FOR ERROR
         BNZ   ERREGCVT
         LH    R0,STRNGLEN             LOAD LENGTH ALREADY CONVERTED
         SR    R5,R5                   LOAD LENGTH JUST CONVERTED
         IC    R5,0(R6)
         AR    R0,R5                   ADD TO TOTAL
         STH   R0,STRNGLEN             SAVE NEW LENGTH
         BCTR  R5,0                    DECREMENT FOR EXECUTE
         EX    R5,MOVE                 MOVE TO WORK AREA
         LA    R4,1(R5,R4)             UPDATE POINTER TO NEXT SECTION
         LH    R0,STRING+4             LOAD LENGTH OF LAST INPUT SECT
         AR    R2,R0                   UPDATE INPUT POINTER
         ST    R2,STRING               STORE IN PDE
         SR    R3,R0                   SUBTRACT LENGTH FROM TOTAL
         BP    AGAIN
         L     R8,WORKAREA             ADDR OF WORKAREA
         LA    R8,CWORKCMD(R8)         ADDR OF STRING
         B     COMPLOOP

MOVE     MVC   0(0,R4),1(R6)           << EXECUTED INSTRUCTION >>

         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE PROCESSES CHARACTER SEARCH STRINGS.             *
*                                                                     *
*        DOUBLE QUOTES ARE CHANGED TO SINGLE QUOTES.                  *
*                                                                     *
***********************************************************************

CHAR1    L     R3,STRING               ADDR OF STRING
         LR    R1,R3
         LH    R4,STRING+4             LENGTH OF STRING
         LR    R5,R4                   LENGTH OF STRING
         BCTR  R5,0                    LENGTH OF STRING - 1
TRTX     EX    R5,TRT                  SEARCH FOR QUOTE
         BZ    END
         LR    R6,R1                   QUOTE DETECTED AT R1
         LR    R5,R4                   TOTAL LENGTH OF STRING
         BCTR  R4,0                    MINUS ONE FOR DELETED QUOTE
         SR    R6,R3                   LENGTH TRANSLATED
         SR    R5,R6                   LENGTH REMAINING
         AHI   R5,-2                   DELETED QUOTE AND EXECUTE
         EX    R5,MOVE1                MOVE UP TO OVERLAY FIRST QUOTE
         CHI   R5,2                    ARE WE AT END OF STRING?
         BL    END                     YES
         BCTR  R5,0                    DECREMENT FOR EXECUTE
         LA    R1,1(R1)                ADDR TO RESUME TRT
         B     TRTX

TRT      TRT   0(0,R1),TABLE1          << EXECUTED INSTRUCTION >>
MOVE1    MVC   0(0,R1),1(R1)           << EXECUTED INSTRUCTION >>

END      STH   R4,STRNGLEN             STORE NEW LENGTH
         LR    R8,R3                   ADDRESS OF STRING

         TITLE 'SEARCH FOR STRING IN SPECIFIED RANGE'
***********************************************************************
*                                                                     *
*        SEARCH FOR STRING IN SPECIFIED RANGE                         *
*                                                                     *
*        R0  - NOT USED                                               *
*        R1  - START OF RANGE / ADDR OF FIRST CHAR FOUND              *
*        R2  - USED BY TRT INSTRUCTION                                *
*        R3  - STRING LENGTH                                          *
*        R4  - START OF RANGE                                         *
*        R5  - END OF RANGE                                           *
*        R6  - WORK REGISTER / BAL REGISTER                           *
*        R7  - NOT USED                                               *
*        R8  - ADDRESS OF STRING                                      *
*                                                                     *
***********************************************************************


COMPLOOP LA    R1,ADDR                 LOAD PDE ADDRESS
         USING IKJPARMA,R1             USE IT AS BASE
         L     R4,PDEUSER              LOAD BEGIN ADDRESS
         TM    PDEUSER,PDESIB          TEST FOR SIB POINTER
         BZ    GETENDAD
         L     R4,0(R4)                GET RESOLVED ADDRESS FROM SIB
GETENDAD L     R5,PDE2USER             LOAD END ADDRESS
         TM    PDE2USER,PDESIB         TEST FOR SIB POINTER
         BZ    PROCESS
         L     R5,0(R5)                GET RESOLVED ADDRESS FROM SIB
         DROP  R1
PROCESS  LA    R4,0(R4)                CLEAR HIGH ORDER BYTES
         LA    R5,0(R5)
         LH    R3,STRNGLEN             LENGTH OF STRING
         SR    R5,R3                   REDUCE END ADDRESS BY STRING LEN
         LA    R5,1(R5)                LAST ADDRESS TO COMPARE
         XC    TABLE3,TABLE3           CLEAR TO X'00'
         SR    R1,R1
         IC    R1,0(R8)                GET FIRST CHARACTER OF STRING
         LA    R1,TABLE3(R1)           TABLE ENTRY FOR FIRST CHARACTER
         MVI   0(R1),X'FF'             SET IT TO X'FF'
GOT      BAL   R6,OFFBREAK             GO TO REMOVE BREAKPOINTS
         LR    R1,R4                   START ADDR IN R1
AGAIN1   LR    R6,R5                   END ADDRESS
         SR    R6,R1                   LENGTH OF RANGE - 1
         CHI   R6,255                  LESS THAN MAX?
         BNH   EXTRT                   YES
         LA    R6,255                  SET LIMIT
EXTRT    EX    R6,TRT1                 LOOK FOR FIRST CHARACTER
         BNZ   CMORE                   GO TO COMPARE REST OF STRING
         LA    R1,1(R6,R1)             INCREMENT START ADDR
         CR    R1,R5                   END OF RANGE REACHED
         BH    NOTFOUND                YES
         B     AGAIN1
CMORE    CHI   R3,1                    ONLY ONE CHARACTER TO COMPARE?
         BE    FOUND                   YES
         LR    R6,R3                   LENGTH OF STRING
         BCTR  R6,0                    REDUCE BY 1
         EX    R6,COMP                 COMPARE ENTIRE STRING
         BE    FOUND
         LA    R1,1(R1)                INCREMENT STARTING POSITION
         CR    R1,R5                   TEST FOR END OF RANGE REACHED
         BH    NOTFOUND
         B     AGAIN1

COMP     CLC   0(0,R1),0(R8)           << EXECUTED INSTRUCTION >>
TRT1     TRT   0(0,R1),TABLE3          << EXECUTED INSTRUCTION >>
         TITLE 'DISPLAY ADDRESS OF STRING'
***********************************************************************
*                                                                     *
*        SEARCH STRING HAS BEEN FOUND.                                *
*                                                                     *
*        DISPLAY ABSOLUTE ADDRESS OF START OF STRING.                 *
*                                                                     *
***********************************************************************

FOUND    STM   R0,R15,SAVE             SAVE REGS
         BAL   R6,ONBREAK              TURN BREAKPOINTS BACK ON
         MVC   MSG1(MSG1LEN),MDL1      MOVE IN MODEL MESSAGE
         UNPK  FNDADDR(9),SAVE+4(5)
         TR    FNDADDR(8),TABLE2       TRANSLATE ADDR
         CLI   SAVE+4,0                IS ADDRESS BELOW THE LINE?
         BNE   HAVEADDR                NO
         MVC   FNDADDR(2),=C'  '       YES, SHOW AS 24-BIT ADDRESS
HAVEADDR MVI   FNDADDR+8,C'.'          ADD .
         OI    FLAGS,$FOUND            INDICATE STRING FOUND
         LA    R2,MSG1                 LOAD MESSAGE ADDRESS
         BAL   R6,PUT
         NC    ALL,ALL                 IS ALL SPECIFIED?
         BZ    RETURN                  NO
         LM    R0,R15,SAVE             RESTORE REGS
         LA    R4,1(R1)                NEW START ADDR
         B     GOT

         TITLE 'END OF ADDRESS RANGE REACHED'
***********************************************************************
*                                                                     *
*        END OF ADDRESS RANGE REACHED                                 *
*                                                                     *
***********************************************************************

NOTFOUND BAL   R6,ONBREAK              TURN BREAKPOINTS ON
         TM    FLAGS,$FOUND            SEE IF STRING HAS BEEN FOUND
         BO    RETURN
         LA    R2,MSG2                 LOAD MESSAGE ADDRESS
         BAL   R6,PUT
         B     RETURN

         TITLE 'ERROR ROUTINES'
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************

*--------ERROR IN PARSE
ERRPARSE CHI   R15,8                   TEST FOR ATTENTION
         BE    RETURN
         MVC   MSG4(MSG4LEN),MDL4      MOVE IN MODEL MESSAGE
         STC   R15,WORK
         UNPK  MSG4+MSG4RCOF(3),WORK(2)
         TR    MSG4+MSG4RCOF(2),TABLE2
         MVI   MSG4+MSG4RCOF+2,QUOTE
         LA    R2,MSG4                 LOAD MESSAGE ADDRESS
         BAL   R6,PUT                  DISPLAY MESSAGE
         B     RETURN


***********************************************************************
*                                                                     *
*        ERROR IN IKJEGCVT PROCESSING STRING VARIABLE.                *
*        THIS INDICATES A FLAW IN THE STRING VALIDITY CHECK           *
*             ROUTINE SINCE IT IS SUPPOSED TO DETECT ALL INVALID      *
*             STRING DATA.                                            *
*                                                                     *
***********************************************************************

ERREGCVT CHI   R15,4
         BH    RETURN
         LA    R2,MSG5                 LOAD MESSAGE ADDRESS
         BAL   R6,PUT                  DISPLAY MESSAGE
         TITLE 'RETURN LINKAGE'
***********************************************************************
*                                                                     *
*        RETURN TO TEST MAIN PROGRAM                                  *
*                                                                     *
***********************************************************************

RETURN   ICM   R0,15,MYANS             ANY PARSE STORAGE TO FREE?
         BZ    RLSAOK                  NO
         IKJRLSA MYANS                 YES, SO FREE IT
RLSAOK   FREEMAIN R,A=(R11),LV=ENDDSECT-WORK  RELEASE STORAGE
         L     R13,4(,R13)             POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         SR    R15,R15                 MUST HAVE RC=0
***      SPM   R14                     RESTORE ORIGINAL PGM MASK
         BR    R14                     RETURN TO CALLER

         TITLE 'DISPLAY A MESSAGE AT THE TSO TERMINAL'
***********************************************************************
*                                                                     *
*        THIS ROUTINE USES PUTLINE TO DISPLAY MESSAGES ON THE         *
*        TERMINAL.  *** LINKAGE TO IKJEGIO HAS CHANGED IN Z/OS        *
*        TOO MUCH TO CONTINUE USING IT ***                            *
*                                                                     *
*        TSTPRINT BIT IN TSTFLGS1 MUST BE OFF TO DISPLAY TO TERMINAL. *
*                                                                     *
*        REGISTER 2 CONTAINS THE ADDRESS OF THE MESSAGE TO BE         *
*        DISPLAYED.                                                   *
*                                                                     *
***********************************************************************

PUT      NI    TSTFLGS1,X'FF'-TSTPRINT OUTPUT TO TERMINAL
***      XC    TSTIOPRM,TSTIOPRM       ZERO PARAMETER LIST
         XC    MYECB,MYECB             RESET ECB
         L     R7,TSTUPT               GET UPT ADDRESS
         L     R0,TSTECT               GET ECT ADDRESS
         L     R15,CVTPTR(,0)
         L     R15,CVTPUTL-CVT(,R15)   LOAD IKJPUTL EP
         PUTLINE PARM=MYPTPB,UPT=(7),ECT=(0),ECB=MYECB,                +
               OUTPUT=((2),TERM,SINGLE,DATA),                          +
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     +
               ENTRY=(15),MF=(E,MYIOPL)
         LTR   R15,R15                 SUCCESS?
         BZR   R6                      YES
         CHI   R15,4                   ATTENTION INTERRUPT?
         BE    RETURN                  YES, GO TERMINATE
         STC   R15,WORK
         UNPK  WORK+3(3),WORK(2)
         TR    WORK+3(2),TABLE2
         MVC   WORK+6(2),WORK+3
         MVC   WORK(6),=C'PL RC='
         LA    R1,WORK
         LA    R0,8
         TPUT  (1),(0),R
         B     RETURN

         TITLE 'TURN BREAKPOINTS ON OR OFF'
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL TURN BREAKPOINTS OFF (BY RESTORING THE     *
*        FIRST 2 BYTES OF THE ORIGINAL INSTRUCTION) OR ON (BY         *
*        INSERTING THE BREAKPOINT SVC).                               *
*                                                                     *
*        ATTENTIONS WILL BE INHIBITED WHILE BREAKPOINTS ARE OFF.      *
*                                                                     *
*        ENTRY AT OFFBREAK TO REMOVE BREAKPOINTS.                     *
*        ENTRY AT ONBREAK TO RESTORE BREAKPOINTS.                     *
*                                                                     *
***********************************************************************

OFFBREAK STAX  DEFER=YES               DISABLE ATTENTIONS
         LA    R1,0                    OFFSET TO ORIGINAL INSTRUCTION
         B     GOBRK
ONBREAK  LA    R1,6                    OFFSET TO SVC
GOBRK    L     R2,BREAKTAB             GET ADDR OF FIRST BREAK ELEMENT
         USING BRKELEM,R2              BREAK ELEMENT ADDRESSABILITY
         LR    R15,R4
         N     R15,MASK                MAKE ADDR HALF WORD BOUNDARY
TESTBRK  LTR   R2,R2                   ANY BREAKPOINTS?
         BZ    BREAKRTN                NO
         TM    BRKADDR,X'01'           IS IT A VALID BREAK ELEMENT?
         BNZ   NEXT                    NO
         C     R15,BRKADDR             ADDR OF BREAK HIGHER THAN START?
         BH    NEXT                    NO
         C     R5,BRKADDR              ADDR OF BREAK LOWER THAN END?
         BL    NEXT
         LA    R14,BRKINST(R1)         ADDR OF SVC OR INSTRUCTION
         L     R15,BRKADDR             ADDR OF BREAKPOINT
         MVC   0(2,R15),0(R14)
NEXT     L     R2,BRKLINK              ADDR OF NEXT BREAK ELEMENT
         B     TESTBRK
BREAKRTN LTR   R1,R1                   TEST FOR OFFBREAK
         BZR   R6                      IF SO, RETURN
         STAX  DEFER=NO                ENABLE ATTENTIONS
         BR    R6                      RETURN
         SPACE 2
         DROP  R2
         SPACE 2
         DROP  R9,R10,R11,R12

         TITLE 'PARSE VALIDITY CHECK ROUTINES'
***********************************************************************
*                                                                     *
*        PARSE VALIDITY CHECK EXIT FOR ADDRESS OPERAND.               *
*                                                                     *
*        IKJEGCVT IS USED TO CONVERT THE ADDRESS FORM SPECIFIED       *
*        BY THE USER TO AN ABSOLUTE ADDRESS AND PLACE IT IN THE       *
*        USER WORD OF THE PDE.                                        *
*                                                                     *
***********************************************************************

ADDRCHK  STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 COPY ENTRY ADDRESS
         USING ADDRCHK,R12             ESTABLISH BASE REGISTER
         L     R11,4(R1)               WORK AREA ADDR FROM USER WORD
         USING WORK,R11                WORK AREA ADDRESSABILITY
         L     R9,ATCOMTAB             TEST COMMUNICATIONS AREA ADDR
         USING TCOMTAB,R9
         L     R10,REGSAVE3            VALIDITY CHECK SAVE AREA
         ST    R10,8(R13)              CHAIN SAVE AREAS
         ST    R13,4(R10)
         LR    R13,R10
         OI    TSTFLGS4,TSTVALCK       INDICATE VALIDITY CHECK ROUTINE
         SR    R0,R0                   R0 POSITIVE IS CONVERT TO BIN.
         LR    R2,R1                   SAVE R1
         L     R3,0(R1)                ADDR OF ADDRESS PDE
         USING IKJPARMA,R3
         NC    PDECHAIN(28),PDECHAIN   TEST FOR RANGE
         BZ    MESSAGE1                NO
         LCR   R1,R3                   MAKE NEG. FOR CONVERT OF ADDR
         OI    TSTFLGS1,RANGESW        INDICATE MAY BE RANGE
         L     R15,OUTBUF              LOAD OUTPUT BUFFER ADDRESS
         XC    0(4,R15),0(R15)         ZERO FIRST WORD OF BUFFER
         L     R15,TSTCONVT            GET ADDR OF IKJEGCVT
         BALR  R14,R15
         CHI   R15,4                   BAD CONVERT?
         BE    CVTERROR                YES                 RC =  4
         BH    VALIDATN                ATTENTION DETECTED  RC = 16
         L     R1,PDE2USER             END ADDRESS
         TM    PDE2USER,PDESIB         TEST FOR SYMBOL BLOCK PTR
         BZ    GETADDR2
         L     R1,0(R1)                LOAD ADDRESS FROM SIB
GETADDR2 L     R15,PDEUSER             START ADDRESS
         TM    PDEUSER,PDESIB          TEST FOR SYMBOL BLOCK PTR
         BZ    CLEARTOP
         L     R15,0(R15)              LOAD ADDRESS FROM SIB
CLEARTOP LA    R1,0(R1)                CLEAR HIGH ORDER BYTES FOR SUB
         LA    R15,0(R15)
         SR    R1,R15                  GET RANGE LENGTH
         BM    MESSAGE2
         AHI   R1,1                    LENGTH = END - START + 1
         ST    R1,RANGELEN             SAVE FOR STRING VALIDITY ROUTINE
         B     VALIDOK
MESSAGE2 LA    R1,FPL02002             LOAD MESSAGE ADDRESS
         B     VALIDERR
MESSAGE1 LA    R1,FPL02001             LOAD MESSAGE ADDRESS
         B     VALIDERR
VALIDERR ST    R1,8(R2)                STORE MSG ADDRESS IN PARM LIST
         LA    R15,4                   SET RC = 4
         B     ADDRRTRN
VALIDATN LA    R15,16                  ATTENTION DETECTED, RC = 16
         B     ADDRRTRN

***********************************************************************
*                                                                     *
*        ERROR IN IKJEGCVT.                                           *
*                                                                     *
*        A FIRST LEVEL MESSAGE HAS BEEN ISSUED.  A SECOND LEVEL       *
*        MESSAGE (IF ANY) IS IN THE OUTPUT BUFFER.                    *
*                                                                     *
***********************************************************************

CVTERROR L     R1,OUTBUF               LOAD SECOND LEVEL MSG ADDRESS
         NC    0(4,R1),0(R1)           TEST IT FOR ZERO
         BZ    MSGISSUD
         ST    R1,8(R2)                STORE MSG ADDRESS IN PARM LIST
MSGISSUD LA    R15,8                   SET RC = 8
         B     ADDRRTRN
VALIDOK  SR    R15,R15                 SET R15 = 0
ADDRRTRN NI    TSTFLGS4,X'FF'-TSTVALCK TURN OFF VALIDITY CHECK IND
*        $RTRN RC=(R15)                RETURN TO PARSE
         L     R13,4(,R13)             POINT TO OLD SAVEAREA
         LM    0,12,20(R13)            RESTORE REGISTERS
         L     R14,12(,R13)            RESTORE RETURN ADDRESS
***      SPM   R14                     RESTORE ORIGINAL PGM MASK
         BR    R14                     RETURN
         DROP  R3,R9,R11,R12

         EJECT
***********************************************************************
*                                                                     *
*        PARSE VALIDITY CHECK ROUTINE FOR STRING OPERAND.             *
*                                                                     *
*        THE TYPE CODE (+7 INTO PDE) IS CHANGED FROM THE              *
*        CHARACTER CODE ENTERED BY THE USER TO THE CONVERSION         *
*        CODE REQUIRED BY IKJEGCVT BY THIS ROUTINE.                   *
*                                                                     *
*        R0  -                                                        *
*        R1  -                                                        *
*        R2  - POINTER TO PARM LIST                                   *
*        R3  - POINTER TO VALUE PDE                                   *
*        R4  - POINTER TO STRING                                      *
*        R5  - LENGTH OF STRING                                       *
*        R6  - POINTER TO TYPE DEPENDENT DATA                         *
*        R7  - WORK - POINTER TO STRING                               *
*        R8  - WORK - LENGTH OF STRING                                *
*        R9  - TEST COMMMUNICATIONS AREA ADDRESS                      *
*        R10 - WORK                                                   *
*        R11 - WORK AREA ADDRESS                                      *
*        R12 - BASE REGISTER FOR VALIDITY CHECK ROUTINE               *
*                                                                     *
***********************************************************************

STRCHK   STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 COPY ENTRY ADDRESS
         USING STRCHK,R12              ESTABLISH BASE REGISTER
         L     R11,4(R1)               WORK AREA ADDR FROM USER WORD
         USING WORK,R11                WORK AREA ADDRESSABILITY
         L     R9,ATCOMTAB             TEST COMMUNICATIONS AREA ADDR
         USING TCOMTAB,R9
         L     R10,REGSAVE3            VALIDITY CHECK SAVE AREA
         ST    R10,8(R13)              CHAIN SAVE AREAS
         ST    R13,4(R10)
         LR    R13,R10
         LR    R2,R1                   SAVE PARM LIST ADDRESS
         L     R3,0(R2)                ADDR OF PDE
         USING VALUPDE,R3              PDE ADDRESSABILITY
*--------VALIDATE TYPE CHARACTER
         SR    R1,R1                   LOAD TYPE CHARACTER
         IC    R1,VALUTYPE             LOAD TYPE CHARACTER
         LA    R15,TABLE(R1)           LOAD ADDRESS OF IKJEGCVT CODE
         CLI   0(R15),X'FF'            TEST FOR INVALID INDICATOR
         BE    INVTYPE
         IC    R1,0(R15)               LOAD IKJEGCVT CODE
         STC   R1,VALUTYPE             STORE IT IN PDE
         L     R4,VALUPTR              LOAD ADDRESS OF STRING
         LR    R7,R4                   ALSO TO WORK REGISTER
         LH    R5,VALULNH              LOAD STRING LENGTH
         LTR   R8,R5                   ALSO TO WORK REGISTER
         BZ    NULLSTR
         B     BRTABLE(R1)             BRANCH TO VALIDATION ROUTINE
*                                           BASED ON DATA TYPE
BRTABLE  B     CVAL                    X'00' C   CHARACTER TYPE
         B     XVAL                    X'04' X   HEXADECIMAL TYPE
         B     BVAL                    X'08' B   BINARY TYPE
         B     VALOK                   X'0C' I   NOT USED
         B     FVAL                    X'10' F   FULLWORD TYPE
         B     HVAL                    X'14' H   HALFWORD TYPE
         B     VALOK                   X'18' E   NOT USED
         B     VALOK                   X'1C' D   NOT USED
         B     AQVAL                   X'20' A,Q FULLWORD ADDRESS
         B     YVAL                    X'24' Y   HALFWORD ADDRESS
         B     VALOK                   X'28' S   BASE + DISPLACEMENT
         B     AQVAL                   X'2C' V   FULLWORD ADDRESS
         B     PVAL                    X'30' P   PACKED DECIMAL
         B     VALOK                   X'34' Z   NOT USED

*--------CHARACTER VALUE - ADJUST LENGTH FOR DOUBLE QUOTES
CVAL     CLI   0(R7),C''''             TEST FOR QUOTE
         BNE   NOTQUOTE
         LA    R7,1(R7)                BUMP TO SECOND QUOTE
         BCTR  R8,0                    REDUCE COUNTER
         BCTR  R5,0                    ADJUST STRING LENGTH
NOTQUOTE LA    R7,1(R7)                BUMP TO NEXT CHARACTER
         BCT   R8,CVAL                 DECREMENT COUNTER
         CH    R5,XMAX                 TEST ADJUSTED LENGTH
         BH    TOOLONG
         STH   R5,STRNGLEN             SAVE STRING LENGTH
         B     CHECKLEN

*--------HEXADECIMAL
XVAL     CH    R5,XMAX                 TEST STRING LENGTH
         BH    TOOLONG
         BCTR  R5,0                    REDUCE LENGTH FOR EXECUTE
         EX    R5,TSTHEX               VALIDATE HEX CHARACTERS
         BNZ   INVCHAR
         TM    VALULNH+1,X'01'         TEST FOR ODD COUNT
         BO    COUNTODD
         LA    R5,1(R5)                ADD BACK THE 1
         SRA   R5,1                    DIVIDE BY 2
         STH   R5,STRNGLEN             SAVE STRING LENGTH
         B     CHECKLEN
         SPACE
TSTHEX   TRT   0(0,R4),HEXTABLE        << EXECUTED INSTRUCTION >>

*--------BINARY
BVAL     CH    R5,XMAX                 TEST LENGTH
         BH    TOOLONG
BINCHECK CLI   0(R7),C'0'              TEST FOR 0
         BL    INVCHAR
         CLI   0(R7),C'1'              TEST FOR 1
         BH    INVCHAR
         LA    R7,1(R7)                INCREMENT POINTER
         BCT   R8,BINCHECK             DECREMENT COUNTER
         TM    VALULNH+1,X'07'         TEST FOR A MULTIPLE OF 8
         BNZ   NOT8
         SRA   R5,3                    DIVIDE BY 8
         STH   R5,STRNGLEN             SAVE STRING LENGTH
         B     CHECKLEN

*--------A, Q, OR V
AQVAL    CLI   0(R4),C'-'              TEST FOR MINUS
         BE    INVCHAR                 NOT VALID FOR ADDRESSES
*--------A, Q, V, AND F
FVAL     LA    R6,FMAX                 POINTER TO TYPE DEPENDENT DATA
         MVC   STRNGLEN,=H'4'          SET LENGTH TO 4
         B     VALNUM
*--------Y
YVAL     CLI   0(R4),C'-'              TEST FOR MINUS
         BE    INVCHAR                 NOT VALID FOR ADDRESSES
*--------Y AND H
HVAL     LA    R6,HMAX                 POINTER TO TYPE DEPENDENT DATA
         MVC   STRNGLEN,=H'2'          SET LENGTH TO 2
*--------VALIDATE NUMERICS
VALNUM   CLI   0(R7),C'-'              TEST FOR SIGNS
         BE    SIGNTEST
         CLI   0(R7),C'+'
         BNE   DIGITTST
SIGNTEST LA    R7,1(R7)                BUMP PAST SIGN
         BCTR  R8,0                    DECREMENT LENGTH
         BCTR  R5,0                    DECREMENT LENGTH
DIGITTST BAL   R14,NUMSCAN             VALID NUMERICS
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   INVCHAR
         CH    R5,0(R6)                TEST LENGTH
         BL    CHECKLEN
         BH    TOOLONG
*--------IF MAX LENGTH, CHECK MAX VALUE
         BCTR  R5,0                    DECREMENT FOR EXECUTE
         EX    R5,COMPMAX              TEST MAX VALUE
         BL    CHECKLEN                OK IF SMALLER
         BH    TOOBIG                  BAD IF BIGGER
         L     R4,VALUPTR              LOAD ADDRESS OF STRING AGAIN
         CLI   0(R4),C'-'              TEST FOR MINUS
         BE    CHECKLEN                IF YES, VALUE IS OK
         B     TOOBIG                  IF NOT, VALUE IS TOO BIG

COMPMAX  CLC   0(0,R4),2(R6)           << EXECUTED INSTRUCTION >>
*--------P
PVAL     LA    R6,PMAX                 LOAD TYPE DEPENDENT DATA
         CLI   0(R4),C'-'              TEST FOR SIGN
         BE    SIGN
         CLI   0(R4),C'+'
         BNE   DIGIT
SIGN     LA    R7,1(R7)
         BCTR  R8,0
DIGIT    CH    R8,0(R6)
         BH    TOOLONG
         BAL   R14,NUMSCAN
         LTR   R15,R15
         BZ    CHECKLEN
         B     INVCHAR

*--------VALIDATE NUMERICS
NUMSCAN  CLI   0(R7),C'0'              IF LESS THAN 0, BAD
         BL    BADCHAR
         CLI   0(R7),C'9'              IF GREATER THAN 9, BAD
         BH    BADCHAR
         LA    R7,1(R7)                INCREMENT TO NEXT CHARACTER
         BCT   R8,NUMSCAN              DECREMENT COUNT
         SR    R15,R15                 ALL OK, SET RC = 0
         BR    R14                     RETURN
BADCHAR  LA    R15,4                   INVALID CHAR, SET RC = 4
         BR    R14                     RETURN

*--------SEE IF ADDRESS RANGE IS LONG ENOUGH TO CONTAIN STRING
CHECKLEN LH    R1,STRNGLEN             LOAD STRING LENGTH
         C     R1,RANGELEN             COMPARE TO RANGE LENGTH
         BNH   VALOK

*--------ERRORS
         LA    R1,FPL02003
         B     STOREMSG
INVTYPE  LA    R1,FPL02004
         B     STOREMSG
NULLSTR  LA    R1,FPL02005
         B     STOREMSG
INVCHAR  LA    R1,FPL02006
         B     STOREMSG
TOOLONG  LA    R1,FPL02007
         B     STOREMSG
TOOBIG   LA    R1,FPL02008
         B     STOREMSG
COUNTODD LA    R1,FPL02009
         B     STOREMSG
NOT8     LA    R1,FPL02010
STOREMSG ST    R1,8(R2)                STORE MSG ADDRESS IN PARM LIST
         LA    R15,4                   SET RC = 4
         B     STRNGRTN

VALOK    SR    R15,R15                 SET RC = 0
STRNGRTN L     R13,4(,R13)             POINT TO OLD SAVEAREA
         LM    0,12,20(R13)            RESTORE REGISTERS
         L     R14,12(,R13)            RESTORE RETURN ADDRESS
***      SPM   R14                     RESTORE ORIGINAL PGM MASK
         BR    R14                     RETURN
*--------TYPE DEPENDENT DATA
FMAX     DC    H'10'                   MAX LENGTH (EXCLUDING SIGN)
         DC    C'2147483648'           MAX VALUE
HMAX     DC    H'5'
         DC    C'32768'
XMAX     DC    H'64'
PMAX     DC    H'31'

         DROP  R3,R9,R11,R12

         TITLE 'CONSTANT DATA AREAS'
***********************************************************************
*                                                                     *
*        LITERAL POOL                                                 *
*                                                                     *
***********************************************************************

         LTORG


***********************************************************************
*                                                                     *
*        TABLE TO TRANSLATE TYPE CHARACTER TO IKJEGCVT CONVERSION     *
*        CODE.                                                        *
*                                                                     *
*        TABLE CONSISTS OF X'FF' ENTRIES FOR EACH INVALID TYPE        *
*        CHARACTER AND THE IKJEGCVT CONVERSION CODE FOR EACH          *
*        VALID TYPE CHARACTER.                                        *
*                                                                     *
***********************************************************************

TABLE    DC    256X'FF'                TYPE CHARACTER TABLE
         SPACE
         ORG   TABLE+C'C'              CHAR
         DC    X'00'                      CONVERT CODE
         SPACE
         ORG   TABLE+C'X'              HEX
         DC    X'04'                      CONVERT CODE
         SPACE
         ORG   TABLE+C'B'              BINARY
         DC    X'08'                      CONVERT CODE
         SPACE
         ORG   TABLE+C'F'              FULLWORD
         DC    X'10'                      CONVERT CODE

         ORG   TABLE+C'H'              HALFWORD
         DC    X'14'                      CONVERT CODE

         ORG   TABLE+C'A'              A TYPE CONSTANT
         DC    X'20'                      CONVERT CODE

         ORG   TABLE+C'Y'              Y TYPE CONSTANT
         DC    X'24'                      CONVERT CODE

         ORG   TABLE+C'V'              V TYPE CONSTANT
         DC    X'2C'                      CONVERT CODE

         ORG   TABLE+C'S'              S TYPE CONSTANT
         DC    X'28'                      CONVERT CODE

         ORG   TABLE+C'P'              PACKED DECIMAL
         DC    X'30'                      CONVERT CODE

         ORG


***********************************************************************
*                                                                     *
*        TABLE TO DETECT QUOTE                                        *
*                                                                     *
***********************************************************************

TABLE1   DC    256X'00'
         ORG   TABLE1+C''''
         DC    X'FF'
         ORG
TABLE2   EQU   *-C'0'                  EBCDIC TRANSLATE TABLE
         DC    C'0123456789ABCDEF'


***********************************************************************
*                                                                     *
*        TABLE TO VALIDATE HEX CHARACTERS                             *
*                                                                     *
***********************************************************************

HEXTABLE DC    256X'01'            NON-ZERO VALUE FOR NON-HEX DIGITS
         ORG   HEXTABLE+C'A'-C' '  POSITION FOR LOWER CASE 'ABCDEF'
         DC    6AL1(0)             DEFINE LOWER CASE ABCDEF
         ORG   HEXTABLE+C'A'       POSITION FOR UPPER CASE 'ABCDEF'
         DC    6AL1(0)             DEFINE UPPER CASE ABCDEF
         ORG   HEXTABLE+C'0'       POSITION FOR DECIMAL DIGITS 0-9
         DC    10AL1(0)            DEFINE DECIMAL DIGITS 0-9
         ORG


***********************************************************************
*                                                                     *
*        MESSAGES                                                     *
*                                                                     *
***********************************************************************

MDL1     #TSOMSG 'STRING FOUND AT XXXXXXXX.'
MSG1LEN  EQU   *-MDL1                  LENGTH OF MESSAGE
MSG2     #TSOMSG 'STRING NOT FOUND WITHIN SPECIFIED RANGE'
MDL4     #TSOMSG 'PARSE RC=X''XX'' - UNABLE TO INTERPRET COMMAND'
MSG4RCOF EQU   4+11
MSG4LEN  EQU   *-MDL4                  LENGTH OF MESSAGE
MSG5     #TSOMSG 'ERROR IN CONVERSION ROUTINE IKJEGCVT'


***********************************************************************
*                                                                     *
*        THE FOLLOWING MESSAGES MAY BE SUPPLIED AS SECOND LEVEL       *
*        MESSAGES TO PARSE BY VALIDITY CHECK ROUTINES.  IF THE        *
*        USER PROFILE SPECIFIES NOMSGID, THE IDENTIFICATION           *
*        NUMBERS WILL NOT BE DISPLAYED.                               *
*                                                                     *
***********************************************************************

FPL02001 #TSOMSG 'FPL02001A SEARCH LIMITS MUST BE SPECIFIED AS RANGE'
FPL02002 #TSOMSG 'FPL02002A ENDING ADDRESS MUST EXCEED START ADDRESS'
FPL02003 #TSOMSG 'FPL02003A STRING LENGTH EXCEEDS ADDRESS RANGE'
FPL02004 #TSOMSG 'FPL02004A INVALID TYPE CHARACTER'
FPL02005 #TSOMSG 'FPL02005A NULL STRING INVALID'
FPL02006 #TSOMSG 'FPL02006A STRING CONTAINS AN INVALID CHARACTER'
FPL02007 #TSOMSG 'FPL02007A STRING LENGTH EXCEEDS LIMIT FOR TYPE'
FPL02008 #TSOMSG 'FPL02008A VALUE EXCEEDS MAXIMUM'
FPL02009 #TSOMSG 'FPL02009A HEX VALUE LENGTH NOT A MULTIPLE OF 2'
FPL02010 #TSOMSG 'FPL02010A BINARY VALUE LENGTH NOT A MULTIPLE OF 8'
         DS    0F
MASK     DC    X'FFFFFFFE'

         DC    0D                      END OF RSECT

         TITLE 'PARSE CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*        PARSE CONTROL BLOCKS                                         *
*                                                                     *
***********************************************************************

PCL      IKJPARM

ADDR     IKJPOSIT ADDRESS,             PARAMETER TYPE                  +
               RANGE,                                                  +
               PROMPT='ADDRESS RANGE', PROMPTING MESSAGE               +
               VALIDCK=ADDRCHK         VALIDITY CHECK ROUTINE ADDR

STRING   IKJPOSIT VALUE,               PARAMETER TYPE                  +
               PROMPT='VALUE',         PROMPT MESSAGE                  +
               VALIDCK=STRCHK          VALIDITY CHECK ROUTINE

ALL      IKJKEYWD

         IKJNAME  'ALL'

         IKJENDP

PCL      CSECT
PCL      AMODE 31
PCL      RMODE ANY
         DC    0D                      END OF CSECT

         TITLE 'VARIABLE WORK AREA'
***********************************************************************
*                                                                     *
*        VARIABLE WORK AREA                                           *
*                                                                     *
***********************************************************************

WORK     DSECT
TABLE3   DS    XL256 TRANSLATE TABLE FOR FIRST CHARACTER OF STRING
SAVE     DS    16F
ATCOMTAB DS    A
FINDPPL  DS    8A

MYIOPL   DS    4F                      PUTLINE I/O PARAMETER LIST
MYECB    DS    F                       PUTLINE EVENT CONTROL BLOCK
MYANS    DS    F                       PARSE ANSWER AREA
MYPTPB   DS    3F                      PUTLINE PARAMETER BLOCK

RANGELEN DS    F                       LENGTH OF ADDRESS RANGE
STRNGLEN DS    H                       LENGTH OF CONVERTED STRING
MAX      DS    H                       MAX LENGTH CONVERTED AT A TIME
FLAGS    DS    X
$FOUND   EQU   X'80'
$FULLWD  EQU   X'40'
$HALFWD  EQU   X'20'
         DS    0H
MSG1     DS    XL(MSG1LEN)
         ORG   MSG1
         DS    H,H
         DS    C'STRING FOUND AT '
FNDADDR  DS    CL8                     ADDRESS
         ORG   MSG1
MSG4     DS    XL(MSG4LEN)
         ORG
         DS    0D
ENDDSECT EQU   *

R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15

QUOTE    EQU   X'7D'

         TITLE 'TEST CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*        TEST CONTROL BLOCKS                                          *
*                                                                     *
***********************************************************************

         VALUPDE
         EJECT
         IKJPARMA
         EJECT
         BRKELEM
         EJECT
         TCOMTAB
         SPACE 3
* THE FOLLOWING ARE OFFSETS INTO TEST WORK AREA (WORKAREA)
CWORKCMD EQU   64             WORK AREA FOR SUB COMD.
* THE ABOVE WORK AREA IS 168 BYTES LONG
         TITLE 'OTHER DATA AREAS'
         PRINT NOGEN

         CVT   DSECT=YES,LIST=NO

         END   IKJEG9FI
