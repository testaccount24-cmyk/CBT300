IKJT9LGZ TITLE '   L G  -  S U B C O M M A N D   O F   T E S T   '
***********************************************************************
*                                                                     *
*     'LG' - LIST 64-BIT GENERAL PURPOSE REGISTER CONTENTS            *
*                                                                     *
*     NOW THAT GENERAL PURPOSE REGISTERS HAVE 64 BITS, IT WOULD       *
*     BE NICE IF TEST HAD A SUBCOMMAND TO DISPLAY THEIR CONTENTS.     *
*                                                                     *
*     BUT IT DOESN'T.                                                 *
*                                                                     *
*     SO HERE IS AN ATTEMPT AT PROVIDING THAT FACILITY.               *
*                                                                     *
*                                                                     *
*                                                                     *
*     TO ACTIVATE ONCE INSTALLED, USE                                 *
*                                                                     *
*       TEST SUBCMD((LG,IKJT9LGZ))                                    *
*                                                                     *
*     IN THE RELEVANT IKJTSOXX MEMBER OF PARMLIB, WHERE 'LG' IS       *
*     THE NAME YOU HAVE CHOSEN TO GIVE THIS SUBCOMMAND, AND           *
*     'IKJT9LGZ' IS THE NAME YOU HAVE GIVEN THE LOAD MODULE OF        *
*     THIS PROGRAM.                                                   *
*                                                                     *
*                                                                     *
*                                                                     *
*     THIS SOFTWARE IS IN THE PUBLIC DOMAIN.  USE AT OWN RISK.        *
*                                                                     *
*                                               GP@P6 - FEBRUARY 2016 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* NAME         IKJT9LGZ                                               *
*              SUBCOMMAND OF TEST - REQUIRES Z/ARCHITECTURE           *
*                                                                     *
* FUNCTION     DISPLAY THE CONTENTS OF THE 64-BIT GENERAL PURPOSE     *
*              REGISTERS SELECTED BY THE USER.                        *
*                                                                     *
* DESCRIPTION  THE 'LG' SUBCOMMAND OF TEST MAY BE USED TO SHOW THE    *
*              CONTENTS OF SPECIFIC REGISTERS AS SET BY THE PROGRAM   *
*              BEING TESTED.  THE USER MUST SPECIFY THE REGISTER(S)   *
*              TO BE DISPLAYED AS ONE OR MORE ITEMS IN A LIST.  EACH  *
*              ITEM IN THE LIST MAY BE A SINGLE REGISTER NUMBER OR    *
*              A RANGE.  REGISTERS ARE SPECIFIED AS A DECIMAL NUMBER  *
*              IN THE RANGE OF 0 TO 15, WITH 15 WRAPPING AROUND TO 0. *
*                                                                     *
* RESTRICTIONS AND LIMITATIONS                                        *
*                                                                     *
*              WHILE THE INTENT IS TO MATCH THE BEHAVIOUR OF THE      *
*              'LIST' SUBCOMMAND WHEN REGISTERS ARE SPECIFIED, THE    *
*              'R' SUFFIX IS ALWAYS ASSUMED AND MUST NOT BE USED.     *
*                                                                     *
* SYNTAX       LG (REGISTER-SPECIFICATION) FD                         *
*                                                                     *
*              DEFAULTS - NONE                                        *
*              REQUIRED - REGISTER SPECIFICATION                      *
*              OPTIONAL - 'FD'                                        *
*                                                                     *
* OPERANDS     REGISTER-SPECIFICATION                                 *
*                   SPECIFIES A REGISTER NUMBER (DECIMAL 0->15), A    *
*                   REGISTER RANGE (M:N WHERE M AND N ARE NUMBERS     *
*                   IN THE 0->15 RANGE) OR A LIST IN PARENTHESES      *
*                   WHERE EACH LIST ELEMENT IS ONE OF THESE.          *
*                                                                     *
*              FD                                                     *
*                   SPECIFIES THE REGISTER VALUES ARE TO BE SHOWN AS  *
*                   SIGNED DECIMAL NUMBERS.  'FD' MAY BE ABBREVIATED  *
*                   TO 'F' WHICH MATCHES THE 'F' FORMAT OPERAND OF    *
*                   THIS 'LIST' SUBCOMMAND.                           *
*                                                                     *
*                                                                     *
* EXAMPLES     HERE ARE SOME 'LIST' SUBCOMMAND EXAMPLES WITH THEIR    *
*              'LG' 64-BIT ANALOGS:                                   *
*                                                                     *
*                    -------------------------------------------      *
*                   |   OLD 32-BIT FORM   |   NEW 64-BIT FORM   |     *
*                   |---------------------|---------------------|     *
*                   |                     |                     |     *
*                   |   L 3R              |   LG 3              |     *
*                   |   L 0R:15R          |   LG 0:15           |     *
*                   |   L (0R:3R,5R,7R)   |   LG (0:3,5,7)      |     *
*                   |   L 4R:11R F        |   LG 4:11 F         |     *
*                   |                     |                     |     *
*                    -------------------------------------------      *
*                                                                     *
*                                                                     *
* RETURN CODE  ALWAYS ZERO AS PER SA22-7783 TSO/E CUSTOMIZATION       *
*                                                                     *
*                                                                     *
* MACROS       ALL MACROS ARE SUPPLIED FROM SYS1.MACLIB AND           *
*              SYS1.MODGEN INCLUDING THOSE BELONGING TO THE           *
*              TSO/E TEST COMPONENT.                                  *
*                                                                     *
* TSO SERVICE ROUTINES USED                                           *
*              IKJPARS       PROCESS SUBCOMMAND OPERANDS              *
*              IKJPUTL       DISPLAY TERMINAL OUTPUT USING PUTLINE    *
*                                                                     *
* REGISTERS    ON ENTRY -                                             *
*                 R9  - TEST COMMUNICATIONS TABLE (TCOMTAB)           *
*                 R13 - SAVE AREA                                     *
*                 R14 - RETURN ADDRESS                                *
*                 R15 - ENTRY POINT ADDRESS                           *
*                                                                     *
*              USAGE -                                                *
*                 R0  - PARAMETER AND WORK REGISTER                   *
*                 R1  - PARAMETER AND WORK REGISTER                   *
*                 R2  - WORK                                          *
*                 R3  - WORK                                          *
*                 R4  - WORK                                          *
*                 R5  - WORK, SVRB POINTER                            *
*                 R6  - WORK, XSB POINTER, PUT ROUTINE LINKAGE        *
*                 R7  - WORK, CURRENT LIST ENTRY PDE POINTER          *
*                 R8  - WORK                                          *
*                 R9  - TEST COMMUNICATIONS AREA BASE REGISTER        *
*                 R10 - PDL BASE REGISTER                             *
*                 R11 - WORK AREA BASE REGISTER                       *
*                 R12 - PROGRAM BASE REGISTER                         *
*                 R13 - SAVE AREA ADDRESS                             *
*                 R14 - LINKAGE AND WORK REGISTER                     *
*                 R15 - LINKAGE AND WORK REGISTER                     *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
IKJT9LGZ RSECT
IKJT9LGZ AMODE 31
IKJT9LGZ RMODE ANY
         USING *,R12
         B     32(,R15)
         DC    AL1(11),CL11'IKJT9LGZ'
         DC    CL16' &SYSDATC &SYSTIME '
         STM   14,12,12(R13)
         LR    R12,R15                 BASE REGISTER
         USING TCOMTAB,R9              TEST COMMUNICATIONS TABLE

*------- CHAIN SAVE AREAS
         L     R10,REGSAVE2            GET ADDR OF SAVEAREA FOR SUBCMDS
         ST    R10,8(R13)              CHAIN SAVE AREAS
         ST    R13,4(R10)
         LR    R13,R10

*------- OBTAIN WORKING STORAGE
         GETMAIN R,LV=WORKLEN          OBTAIN STORAGE
         LR    R11,R1                  SAVE ADDRESS
         USING WORK,R11                WORK AREA ADDRESSABILITY
         LR    R14,R11                 POINT TO NEW STORAGE
         LA    R15,WORKLEN             GET ITS LENGTH
         SR    R3,R3                   ZERO PAD AND SOURCE LENGTH
         MVCL  R14,R2                  CLEAR WORKING STORAGE

*------- PARSE SUBCOMMAND OPERANDS
         LM    R2,R3,TSTUPT & TSTECT   GET ADDR OF UPT AND ECT
         LA    R4,MYECB                GET ADDR OF ECB
         L     R5,=A(PCL)
         LA    R6,MYANS                ADDR OF ANSWER PLACE
         L     R7,INBUF                ADDR OF INPUT BUFFER
         LR    R8,R11                  ADDR OF WORKAREA
         STM   R2,R8,LG_PPL            SET UP PARSE PARM LIST
         ST    R9,ATCOMTAB             SAVE TCOMTAB ADDRESS
         LA    R1,LG_PPL               ADDR OF PARSE PARM LIST
         L     R15,CVTPTR(,0)          POINT TO THE CVT
         L     R15,CVTPARS-CVT(,R15)   GET IKJPARS EP
         BALR  R14,R15                 CALL IKJPARS
         LTR   R15,R15                 TEST FOR ERROR
         BNZ   ERRPARSE
         L     R10,MYANS               LOAD PARSE ANSWER AREA ADDRESS
         USING IKJPARMD,R10            PDL ADDRESSABILITY

*------- DETERMINE THE TERMINAL'S LINE LENGTH
         GTSIZE
         STM   R0,R1,LINES & COLUMNS   SAVE SCREEN DIMENSIONS

*------- PREPARE FOR FIRST MESSAGE
         MVI   MSGTEXT-1,C' '          TO BE CLEARED BY PUT ROUTINE
         MVC   MSGTEXT,MSGTEXT-1       BLANK LINE AREA
         LHI   R0,4-1                  1ST CHAR IS ALWAYS A BLANK
         STH   R0,MSG                  SET LENGTH OF LINE SO FAR

*------- GET LOW AND HIGH REGISTER SAVE AREA ADDRESSES
         L     R5,ECBPP                POINT TO SVC 97 SVRB
         AHI   R5,RBPREFIX-RBSECT      BACK UP TO RB PREFIX
         USING RBPREFIX,R5
         L     R6,RBXSB                POINT TO SVC 97 XSB
         USING XSB,R6
         LA    R0,RBGRSAVE             POINT TO SVRB SAVE AREA
         ST    R0,LO_REGSA             SAVE ITS ADDRESS
         LA    R0,XSBG64H              POINT TO XSB R0 AREA
         ST    R0,HI_REGSA             SAVE ITS ADDRESS
         DROP  R5,R6                   (RBPREFIX,XSB)

*------- LOOP THROUGH EACH REGISTER-SPECIFYING PDE
         LA    R7,REGS                 POINT TO THE FIRST RANGE PDE
         USING RANGEPDE,R7
PDE_LOOP EQU   *
         ICM   R1,15,VALU1@            POINT TO RANGE START VALUE
         ICM   R1,15,0(R1)             GET RANGE START VALUE
         LA    R0,X'0F'
         NR    R1,R0                   FORCE VALID REGISTER NUMBER
         ST    R1,GPR_1ST              SAVE FIRST REGISTER
         ST    R1,GPR_LST              ALSO LAST IF NOT A RANGE
         ICM   R1,15,VALU2@            POINT TO RANGE END VALUE
         BZ    RANGE_OK                SINGLE ITEM - NOT A RANGE
         ICM   R1,15,0(R1)             GET RANGE END VALUE
         NR    R1,R0                   FORCE VALID REGISTER ID
         ST    R1,GPR_LST              SAVE LAST REGISTER

*------- APPEND A REGISTER'S DATA TO THE MESSAGE LINE
RANGE_OK EQU   *
         L     R3,GPR_1ST              GET THE REGISTER NUMBER
         CVD   R3,DBL
         LH    R2,MSG                  GET LINE LENGTH SO FAR
         LA    R2,MSG(R2)              POINT TO WHERE TO APPEND
         MVC   0(4,R2),=X'40202120'    LOAD EDIT MASK
         ED    0(4,R2),DBL+6           SHOW REGISTER NUMBER
         MVC   1(3,R2),2(R2)           ADJUST LOCATION
         MVI   3(R2),C'R'              INDICATE REGISTER
         LR    R4,R3                   COPY REGISTER NUMBER
         SLA   R4,2                    MULTIPLY BY 4 FOR INDEX
         A     R4,HI_REGSA             POINT TO REGISTER HIGH WORD
         MVC   DBL2(4),0(R4)           COPY IT
         LR    R4,R3                   COPY REGISTER NUMBER
         SLA   R4,2                    MULTIPLY BY 4 FOR INDEX
         A     R4,LO_REGSA             POINT TO REGISTER LOW WORD
         MVC   DBL2+4(4),0(R4)         COPY IT
         CLI   FD+1,1                  DECIMAL FORMAT REQUESTED?
         BE    DECIMAL                 YES
         UNPK  6(9,R2),DBL2(5)         NO, SHOW HEXADECIMAL
         UNPK  15(9,R2),DBL2+4(5)
         TR    6(17,R2),HEX
         MVI   14(R2),C'_'             LINK THE 2 WORDS
         MVI   23(R2),C' '             TIDY UP
         LA    R2,24(,R2)              POINT PAST FORMATTED DATA
         B     REG_DONE
DECIMAL  EQU   *
         LG    R0,DBL2                 LOAD REGISTER CONTENTS
         MVI   6(R2),C'+'              ASSUME POSITIVE
         LTGR  R0,R0                   IS THIS WRONG?
         BNM   SIGN_OK                 NO
         MVI   6(R2),C'-'              YES, SHOW NEGATIVE
SIGN_OK  EQU   *
         CVDG  R0,DBL                  GET DECIMAL VALUE
         OI    DBL+15,X'0F'            PREPARE SIGN FOR UNPACK
         UNPK  7(5,R2),DBL+6(3)        63 BITS IS 19 DIGITS AT MOST
         UNPK  11(15,R2),DBL2          BUT 16 IS MAXIMUM FOR UNPACK
         LGHI  R0,18                   RESET REGISTER HIGH HALF
ZERO_CHK CLI   7(R2),C'0'              LEADING ZERO?
         BNE   ZERO_OK                 NO, FORMATTING COMPLETE
         MVC   7(19,R2),8(R2)          YES, SUPPRESS IT
         BCT   R0,ZERO_CHK             SUPPRESS UP TO 18 ZEROS
ZERO_OK  EQU   *
         LA    R2,27(,R2)              POINT PAST FORMATTED DATA
REG_DONE EQU   *
         LA    R0,MSG
         SR    R2,R0                   GET NEW LINE LENGTH
         STH   R2,MSG                  SAVE IT

*------- DETERMINE IF RANGE HAS NOW BEEN PROCESSED
         C     R3,GPR_LST              REACHED END OF RANGE?
         BE    NXTRANGE                YES
         AHI   R3,1                    NO, INCREMENT REGISTER NUMBER
         CHI   R3,15                   GONE TOO HIGH?
         BNH   REG#OK                  NO
         SR    R3,R3                   YES, WRAP AROUND TO ZERO
REG#OK   ST    R3,GPR_1ST              SAVE NEW REGISTER NUMBER

*------- DETERMINE IF MORE CAN BE APPENDED TO THE CURRENT LINE
         CLI   COLUMNS+3,60            NARROW SCREEN?
         BL    OUTNOW                  YES, CAN ONLY FIT 1 UP
         CLI   MSG+1,45                GOT 2 UP YET?
         BL    RANGE_OK                NO, SO DO IT
         CLI   COLUMNS+3,120           WIDE ENOUGH FOR 4 UP?
         BL    OUTNOW                  NO, LEAVE IT AT 2 UP
         CLI   MSG+1,90                GOT 4 UP YET?
         BL    RANGE_OK                NO, SO KEEP GOING

*------- DISPLAY A NON-LAST LINE OF A RANGE
OUTNOW   EQU   *
         BAL   R6,PUT                  DISPLAY THE FULL LINE
         B     RANGE_OK                CONTINUE WITH THIS RANGE

*------- DISPLAY THE LAST LINE OF A RANGE
NXTRANGE EQU   *
         BAL   R6,PUT                  DISPLAY THE LAST LINE

*------- DETERMINE IF THE LAST RANGE HAS NOW BEEN PROCESSED
         ICM   R7,15,RANGECHN          POINT TO NEXT RANGE PDE
         BZ    RETURN                  SHOULD NOT HAPPEN, BUT IF...
         CL    R7,=XL4'FF000000'       END OF PDE CHAIN?
         BE    RETURN                  YES, ALL DONE

*------- PREPARE TO PROCESS THE NEXT RANGE
         MVI   MSG+1,5
         BAL   R6,PUT                  DISPLAY A BLANK LINE
         B     PDE_LOOP                GO SHOW NEXT RANGE

         DROP  R7                      (RANGEPDE)

         TITLE ' TERMINATION '
*------- ERROR IN PARSE
ERRPARSE CHI   R15,8                   TEST FOR ATTENTION
         BE    RETURN
         MVC   MSG(P_ERM_L),PARS_ERM   MOVE IN MODEL MESSAGE
         STC   R15,DBL
         UNPK  MSG+PARS_RCO(3),DBL(2)
         TR    MSG+PARS_RCO(2),HEX
         MVI   MSG+PARS_RCO+2,QUOTE
         BAL   R6,PUT                  DISPLAY MESSAGE
         B     RETURN


*------- NORMAL EXIT - RETURN TO TEST MAIN PROGRAM
RETURN   EQU   *
         ICM   R0,15,MYANS             ANY PARSE STORAGE TO FREE?
         BZ    RLSAOK                  NO
         IKJRLSA MYANS                 YES, SO FREE IT
RLSAOK   EQU   *
         FREEMAIN R,A=(R11),LV=WORKLEN RELEASE STORAGE
         L     R13,4(,R13)             POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         SR    R15,R15                 MUST HAVE RC=0
         BR    R14                     RETURN TO CALLER

         TITLE ' DISPLAY A MESSAGE AT THE TSO TERMINAL '
***********************************************************************
*                                                                     *
*        THIS ROUTINE USES PUTLINE TO DISPLAY MESSAGES ON THE         *
*        TERMINAL.                                                    *
*                                                                     *
*        TSTPRINT BIT IN TSTFLGS1 MUST BE OFF TO DISPLAY TO TERMINAL. *
*                                                                     *
*        'MSG' IS ASSUMED TO CONTAIN THE DATA TO DISPLAY.             *
*                                                                     *
***********************************************************************

PUT      NI    TSTFLGS1,X'FF'-TSTPRINT OUTPUT TO TERMINAL
         XC    MYECB,MYECB             RESET ECB
         LA    R2,MSG                  POINT TO THE DATA TO SHOW
         MVI   MSGTEXT-1,0             ZERO 2ND HALFWORD
         L     R3,TSTUPT               GET UPT ADDRESS
         L     R0,TSTECT               GET ECT ADDRESS
         L     R15,CVTPTR(,0)
         L     R15,CVTPUTL-CVT(,R15)   LOAD IKJPUTL EP
         PUTLINE PARM=MYPTPB,UPT=(7),ECT=(0),ECB=MYECB,                +
               OUTPUT=((2),TERM,SINGLE,DATA),                          +
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     +
               ENTRY=(15),MF=(E,MYIOPL)
         MVI   MSGTEXT-1,C' '          RESET LINE FOR REUSE
         MVC   MSGTEXT,MSGTEXT-1       BLANK LINE AREA
         LHI   R0,4-1                  1ST CHAR IS ALWAYS A BLANK
         STH   R0,MSG                  SET LENGTH OF LINE SO FAR
         LTR   R15,R15                 SUCCESS?
         BZR   R6                      YES
         CHI   R15,4                   ATTENTION INTERRUPT?
         BE    RETURN                  YES, GO TERMINATE
         STC   R15,DBL
         UNPK  DBL+3(3),DBL(2)
         TR    DBL+3(2),HEX
         MVC   DBL+6(2),DBL+3
         MVC   DBL(6),=C'PL RC='
         LA    R1,DBL
         LA    R0,8
         TPUT  (1),(0),R
         B     RETURN

         DROP

         TITLE ' CONSTANTS AND LITERALS '
         DC   0D

HEX      EQU  *-C'0'
         DC   CL16'0123456789ABCDEF'

         LTORG


PARS_ERM DC    Y(P_ERM_L,0)
         DC    C'PARSE RC=X''XX'' - UNABLE TO INTERPRET COMMAND'
PARS_RCO EQU   4+11
P_ERM_L  EQU   *-PARS_ERM              LENGTH OF MESSAGE

         DC    0D                      END OF RSECT

         TITLE ' PARSE CONTROL LIST '
PCL      IKJPARM

REGS     IKJIDENT 'REGISTER SPECIFICATION',                            +
               LIST,RANGE,                                             +
               PROMPT='REGISTER NUMBER (0-15) OR RANGE',               +
               INTEG,                                                  +
               HELP='ENTER A DECIMAL NUMBER IN THE 1 TO 15 RANGE, OR 2 +
               SUCH NUMBERS SEPARATED BY A COLON'

FD       IKJKEYWD
         IKJNAME  'FD'

         IKJENDP

PCL      CSECT
PCL      AMODE 31
PCL      RMODE ANY
         DC    0D                      END OF CSECT

         TITLE ' VARIABLE WORK AREA '
WORK     DSECT

DBL      DS    D                       DOUBLE/QUAD-WORD WORK AREA
DBL2     DS    D

LINES    DS    F                       TERMINAL DEPTH
COLUMNS  DS    F                       TERMINAL WIDTH

LO_REGSA DS    A                       LOW-ORDER FIRST SLOT
HI_REGSA DS    A                       HIGH-ORDER FIRST SLOT
GPR_1ST  DS    F                       REGISTER RANGE START
GPR_LST  DS    F                       REGISTER RANGE END

MSG      DS    H,H                     MESSAGE HEADER
MSGTEXT  DS    CL120                   MESSAGE TEXT

ATCOMTAB DS    A                       TEST COMM. TABLE ADDRESS
LG_PPL   DS    8A                      PARSE PARAMETER LIST

MYIOPL   DS    4F                      PUTLINE I/O PARAMETER LIST
MYECB    DS    F                       PUTLINE EVENT CONTROL BLOCK
MYANS    DS    F                       PARSE ANSWER AREA
MYPTPB   DS    3F                      PUTLINE PARAMETER BLOCK

WORKEND  DS    0D                      END OF DSECT
WORKLEN  EQU   WORKEND-WORK            SIZE OF DSECT

R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15

QUOTE    EQU   X'7D'

         TITLE ' TEST COMMUNICATION TABLE '
         TCOMTAB

         TITLE ' OTHER DATA AREAS '
RANGEPDE DSECT ,                        RANGE PDE FROM IKJIDENT
VALU1@   DS    F                        POINTER TO RANGE START VALUE
VALU1L   DS    H                        LENGTH OF RANGE START VALUE
VALU1F   DS    XL1                      FLAG
V1FLGBIT EQU   B'10000000'              BIT ON MEANS VALUE PRESENT
VALU1RES DS    XL1                      RESERVED
VALU2@   DS    F                        POINTER TO RANGE START VALUE
VALU2L   DS    H                        LENGTH OF RANGE START VALUE
VALU2F   DS    XL1                      FLAG
V2FLGBIT EQU   B'10000000'              BIT ON MEANS VALUE PRESENT
VALU2RES DS    XL1                      RESERVED
RANGECHN DS    A                        ADDRESS OF NEXT PDE ON CHAIN
RANGEPLN EQU   *-RANGEPDE               LENGTH OF RANGE PDE

         PRINT NOGEN

         CVT   DSECT=YES,LIST=NO

         IHARB DSECT=YES,LIST=NO,IKJRBPROLOG=NO

         IHAXSB LIST=NO

         END   IKJT9LGZ
