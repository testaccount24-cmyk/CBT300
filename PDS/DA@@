Note about the DA command:   (found an error)

This error has been solved.  Explanation is below.

Date:  December 8, 2013.  13.342

One one z/OS system, I was getting a S0C4 as follows:

IEA995I SYMPTOM DUMP OUTPUT
SYSTEM COMPLETION CODE=0C4  REASON CODE=00000010
 TIME=14.20.13  SEQ=00048  CPU=0000  ASID=004F
 PSW AT TIME OF ERROR  078D0000   802F77B6  ILC 4  INTC 10
   ACTIVE LOAD MODULE           ADDRESS=002F7638  OFFSET=0000017E
   NAME=DA
   DATA AT PSW  002F77B0 - 1F3347F0  C18258A0  80389240
   GR 0: 00000041   1: 0023AED4
      2: 0000000E   3: 0C26C200
      4: 00066F9C   5: 00000002
      6: 802F7990   7: 0023AE40
      8: 16000000   9: 00FB7000
      A: 0C269C00   B: 00FD91B8
      C: 802F7638   D: 0023AE40
      E: 802F7CF8   F: 00000000
 END OF SYMPTOM DUMP
Abend 0C4000 hex occurred processing command 'DA      '.

Explanation and solution:

Address +17E is label LOOP1.  Note the contents of Register 5, which
shows how many times we have left, looping through ASVT entries.
Register 5 contains the value 2, which shows that we are trying to
loop through 2 more ASVT entries, when we have apparently already
run out of ASVT entries to look at.  Hence the S0C4.  This does not
occur on all systems, because sometimes there is data in the storage
just after the end of the ASVT that looks plausible to the DA
program.

The bad code was executed before branching to label LOOP1.  Note
that Register 5, which shows how many address space entries in the
ASVT we still have to go through, shows 2 left.  After label
GETASVT, where we load the value of the number of entries in the
ASVT into R5, we had added 2 to this number.  Looking at storage
seems to indicate that if we don't do this, we will be 2 entries
short from the end of the table.  However, it doesn't work that way.
The reason is that when we started the loop, we have already
positioned ourselves X'210' from the beginning of the ASVT, which
points to the ASVT entry for the *MASTER* address space.  So
therefore, the number of times we loop is correct as is, without
adding the extra number 2 to it.  Leaving off the extra 2 ASVT entry
searches, solves the problem, because then, we don't go off the end
of the ASVT.

