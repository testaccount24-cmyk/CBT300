         MACRO
         TODPRINT &TODADDR,                                            X
               &WORKAREA=,                                             X
               &OUTFORM='DD/MT/YYYY HH:MM:SS',                         X
               &SHIFT=YES,                                             X
               &CAPS=OFF,                                              X
               &PRF=$TOD
         AGO   .X0000
*/********************************************************************/
*/*                                                                  */
*/*  TODPRINT MACRO:                                                 */
*/*  MAKE ANY VALID DATE, PASSED IN TOD-FORMAT, PRINTABLE.           */
*/*                                                                  */
*/*  PARAMETERS:                                                     */
*/*  -----------                                                     */
*/*  FIRST IS POSITIONAL: A FULLWORD OR REGISTER CONTAINING THE      */
*/*                       ADDRESS OF A DOUBLEWORD CONTAINING TOD     */
*/*  DEFAULT:             NONE                                       */
*/*                                                                  */
*/*  WORKAREA=          : A FULLWORD OR REGISTER CONTAINING THE      */
*/*                     : ADDRESS OF A 256-BYTE WORKAREA. THIS PARA- */
*/*                       METER IS MANDATORY.           .            */
*/*  DEFAULT:             NONE                                       */
*/*                                                                  */
*/*  SHIFT=             : OPTIONAL PARAMETER, INDICATES WHETHER THE  */
*/*                       CALCULATED VALUES FOR WHOLEDAY AND MONTH   */
*/*                       ARE SHIFTED (YES) OR NOT (NO)              */
*/*  DEFAULT:             SHIFT=YES                                  */
*/*                                                                  */
*/*  CAPS=              : OPTIONAL PARAMETER, INDICATES WHETHER THE  */
*/*                       DAY- MONTH- AND ALPHA-DAYS SHOULD BE RE-   */
*/*                       TURNED IN MIXED CASE (OFF) OR IN CAPS(ON)  */
*/*  DEFAULT:             CAPS=OFF                                   */
*/*                                                                  */
*/*  PRF=               : OPTIONAL PARAMETER, CONTAINING THE LABEL-  */
*/*                       PREFIX TO BE GENERATED. TODPRINT-LABELS    */
*/*                       ARE UNIQUE AT EVERY CALL (VIA &SYSNDX),    */
*/*                       BUT IF THE DEFAULT SHOULD CONFLICT WITH    */
*/*                       YOUR CONVENTIONS, SET DESIRED VALUE TO     */
*/*                       OVERRIDE.                                  */
*/*  DEFAULT:             PRF=$TOD                                   */
*/*                                                                  */
*/*  OUTFORM=           : DESIRED OUTPUTFORMAT. FOLLOWING PARAMETERS */
*/*                       CAN BE USED IN ANY ORDER                   */
*/*                       YY OR YEAR: 2 OR 4 DIGIT YEAR              */
*/*                       MT,MON OR MONTH: 2 DIGIT, 3 OR 9 CHAR MONTH*/
*/*                       DAY OR WHOLEDAY: 3 OR 9 CHARACTER DAY      */
*/*                       DD OR ANDAY      2 DIGIT OR ALPHANUM (1ST) */
*/*                       JUL              3 DIGIT JULIAN DAY        */
*/*                       HH: 2 DIGIT HOUR                           */
*/*                       MM: 2 DIGIT MINUTES                        */
*/*                       SS: 2 DIGIT SECONDS                        */
*/*                       STAMP(X): DEPTH OF FRACTIONS OF A SECOND,  */
*/*                       FROM 1 (1/10 OF SECONDS) TO 6 (MICROSEC.)  */
*/*  DEFAULT:             OUTFORM='DD/MT/YYYY HH:MM:SS'              */
*/*                                                                  */
*/*  PADDING CHARACTERS CAN BE ENTERED AFTER EACH PART OF DATE       */
*/*                                                                  */
*/*  E.G:  TODPRINT (R2),OUTFORM='WHOLEDAY,DD/MON/YYYY HH:MM:SS',    */
*/*              WORKAREA=@WAREA,SHIFT=YES                           */
*/*  MIGHT RETURN:  FRIDAY,19/DEC/1997 12:00:15                      */
*/*                                                                  */
*/*  REGISTER-CONTENTS AT RETURN:   REG. 15 CONTAINS 0, THE OTHER    */
*/*           REGISTERS SAME AS ON ENTRY                             */
*/*                                                                  */
*/*  WORKAREA-CONTENTS AT RETURN:                                    */
*/*           A HALFWORD CONTAINING THE LENGTH OF THE RESULT WITHOUT */
*/*           ITS OWN LENGTH FOLLOWED BY THE RESULT.                 */
*/*                                                                  */
*/*  THE MACRO TODPRINT IS REENTRANT.                                */
*/*                                                                  */
*/*  C A U T I O N  ||| THIS MACRO CONTAINS LOWERCASE CHARACTERS ||| */
*/*  --------------------------------------------------------------- */
*/*                                                                  */
*/********************************************************************/
.X0000   ANOP                      .SET LOCAL VARIABLES
&A       SETA  &SYSNDX             .LABEL/FIELD NAME INDEX
&LEN     SETA  K'&OUTFORM          .LENGTH OF OUTFORM-PARAMETER
         LCLA  &I                  .CURRENT POSITION IN OUTFORM-PARM
         LCLA  &J                  .COUNTER TO PREVENT DUPLICATE LABELS
&I       SETA  1                   .INITIALIZE OUTFORM-POINTER
&J       SETA  0                   .INITIALIZE DUMMY-COUNTER
&S       SETC  '1'                 .GRANULARITY OF THE STAMP()-PARM
.X0001   ANOP                      .START PARAMETER CHECKS
         AIF   ((K'&PRF GE 1) AND (K'&PRF LE 8)).X0003
         MNOTE 12,'PREFIX ''PRF='' MUST BE BETWEEN 1 AND 8 CHARACTERS IX
               N LENGTH'
         MEXIT                     .TERMINATE MACRO
.X0003   ANOP                      .START PARAMETER CHECKS
         AIF   (T'&WORKAREA NE 'O').X0005     .GOT ADDRESS, PROCESS
         MNOTE 12,'PARAMETER ''WORKAREA='' IS MANDATORY'
         MEXIT                     .TERMINATE MACRO
.X0005   ANOP                      .CHECK WHETHER REG. OR ADDRESS GOT
         AIF   ('&WORKAREA'(1,1) NE '(').X0005A       .NOT IN PARS.
         LR    15,&WORKAREA        .MUST BE REGISTER
         AGO   .X0010              .BUMP OVER LOAD
.X0005A  ANOP                      .NOT A REGISTER, MUST BE AN ADDRESS
         L     15,&WORKAREA        .LOAD A(WORKAREA)
.X0010   ANOP                      .END OF WORKAREA-PARAMETER CHECKS
         PUSH  USING               .SAVE USINGS AROUND MACRO
         USING &PRF._DS10_&A.,15               .ADDRESS PASSED WORKAREA
         XC    &PRF._DS10_&A.,&PRF._DS10_&A    .CLEAR IT OUT FOR USE
         STM   1,5,&PRF._RSA_&A                .STORE USED REGISTERS
         DROP  15                  .DROP DSECT AND ...
         LR    4,15                .RELOAD WITH NEW BASE
.*
         AIF   (T'&TODADDR NE 'O').X0015       .GOT ADDRESS, PROCESS
         MNOTE 12,'PARAMETER 1 (TOD-ADDRESS) IS MANDATORY'
         MEXIT                     .TERMINATE MACRO
.*
.X0015   ANOP                      .CHECK TYPE OF TODADDR
         AIF   ('&TODADDR'(1,1) NE '(').X0015A       .NOT IN PARS.
         LR    5,&TODADDR          .MUST BE REGISTER
         AGO   .X0020              .BUMP OVER LOAD
.X0015A  ANOP                      .ADDRESS PASSED, DO NOT USE LR
         L     5,&TODADDR          .LOAD A(TODCLOCK-DW)
.X0020   ANOP                      .END OF WORKAREA-PARAMETER CHECKS
.*
         AIF   (('&SHIFT' EQ 'YES') OR ('&SHIFT' EQ 'NO')).X0025
         MNOTE 12,' ''SHIFT='' MUST EITHER BE ''YES'' OR ''NO'' '
         MEXIT
.X0025   ANOP                      .END OF "SHIFT=" CHECKING
.*
         AIF   (('&CAPS' EQ 'ON') OR ('&CAPS' EQ 'OFF')).X0030
         MNOTE 12,' ''CAPS='' MUST EITHER BE ''OFF'' OR ''ON'' '
         MEXIT
.X0030   ANOP                      .END OF PARAMETER-CHECKING
.*
         DSECT                     .PLACE DSECT HEREAFTER
&PRF._DS10_&A DSECT                .VARIABLE NAME FOR MULTIPLE CALLS
         DS  0F                    .ALIGN STORAGE
&PRF._LRS_&A DS H                  .LENGTH OF ANSWER
&PRF._RES_&A DS CL132              .RESULT-AREA
&PRF._RSA_&A DS 5F                 .REGISTER-SAVEAREA
&PRF._R14_&A DS F                  .SAVE-AREA FOR R14
&PRF._R1A_&A DS CL16               .RESULT-AREA OF 1ST STCKCONV-CALL
&PRF._R2A_&A DS CL16               .RESULT-AREA OF 2ND STCKCONV-CALL
&PRF._MFL_&A DS CL(&PRF.L_STCK_&A)             .STCKCONV MF=L WORKAREA
&PRF._PWF_&A DS PL4                .WORKFIELD FOR PACKED DATA
&PRF._DW_&A DS D                   .DOUBLE-WORD FOR CVB-INSTRUCTIONS
&PRF._WDIV_&A DS F                 .FOR LEAP YEAR CALCULATION
&PRF._WEDM_&A DS CL8               .WORFIELD FOR THE EDIT-MASK
.*
&PRF.L_DS10_&A EQU 256-(*-&PRF._DS10_&A)       .REMAINING LENGTH OF DS
&PRF._PHOLD_&A DS CL(&PRF.L_DS10_&A)           .PLACEHOLDER TO 256
&SYSECT  CSECT                     .START CSECT HERE
         L     15,=A(&PRF._&A.0010+X'80000000') .SWITCH AMODE TO 31
         BASSM 14,15               .KEEP CALLERS AMODE IN R14
&PRF._&A.0000 DS 0H                .CONSTANTS START HEREAFTER
&PRF._&A.UC    DC XL9'404040404040404040'      .UPPER-CHARACTERS
&PRF._&A.EDM   DC XL8'F020202020202020'        .EDIT-MASK
&PRF._&A.DSF   DC CL28'01st02nd03rd21st22nd23rd31st'   .NON-"TH"-DAYS
&PRF._&A.DTAB DS 0H                .DAY-LENGTH + DAYNAME TABLE
         DC    XL1'06',CL9'Sunday   '
         DC    XL1'06',CL9'Monday   '
         DC    XL1'07',CL9'Tuesday  '
         DC    XL1'09',CL9'Wednesday'
         DC    XL1'08',CL9'Thursday '
         DC    XL1'06',CL9'Friday   '
         DC    XL1'08',CL9'Saturday '
&PRF._&A.MTAB DS 0H                .MONTH-LENGTH + MONTHNAME TABLE
         DC    XL1'07',CL9'January  '
         DC    XL1'08',CL9'February '
         DC    XL1'05',CL9'March    '
         DC    XL1'05',CL9'April    '
         DC    XL1'03',CL9'May      '
         DC    XL1'04',CL9'June     '
         DC    XL1'04',CL9'July     '
         DC    XL1'06',CL9'August   '
         DC    XL1'09',CL9'September'
         DC    XL1'07',CL9'October  '
         DC    XL1'08',CL9'November '
         DC    XL1'08',CL9'December '
.*
&PRF._STCK_&A STCKCONV MF=L        .STCKCONV MF=L
&PRF.L_STCK_&A EQU *-&PRF._STCK_&A .LENGTH OF STCKCONV
.*
&PRF._&A.0010 DS 0H                .NOW AMODE=31 IS ACTIVE
         USING &PRF._DS10_&A.,4    .ADDRESS DSECT + TELL ASSEMBLER
         MVC   &PRF._MFL_&A.(&PRF.L_STCK_&A.),&PRF._STCK_&A .MF=L
         ST    14,&PRF._R14_&A     .SAVE R14 AROUND STCKCONV
.* STCKCONV 1ST RUN TO GET DATEFORM DDMMYYYY
         STCKCONV TIMETYPE=DEC,                .TYPE OF TIME-RESULT    X
               STCKVAL=(5),                    .A(TODCLOCK)            X
               CONVVAL=&PRF._R1A_&A,           .A(RESULT AREA #1)      X
               DATETYPE=DDMMYYYY,              .FORM OF DATE IN RESULT X
               MF=(E,&PRF._MFL_&A)             .USE EXECUTE-FORM
.*
         MVC   &PRF._MFL_&A.(&PRF.L_STCK_&A.),&PRF._STCK_&A
.* STCKCONV 2ND RUN TO GET DATEFORM YYYYDDD
         STCKCONV TIMETYPE=DEC,                .TYPE OF TIME-RESULT    X
               STCKVAL=(5),                    .A(TODCLOCK)            X
               CONVVAL=&PRF._R2A_&A,           .A(RESULT AREA #1)      X
               DATETYPE=YYYYDDD,               .FORM OF DATE IN RESULT X
               MF=(E,&PRF._MFL_&A)             .USE EXECUTE-FORM
.*
&PRF._&A.0100 DS 0H                .START COMPOSING RESULT-STRING
         LA    5,&PRF._RES_&A      .A(RESULT-AREA)
         AIF   ('&OUTFORM'(1,1) NE '''').LUP1  .BUMP IF NOT QUOTED
&LEN     SETA  &LEN-2              .SUBTRACT 2 FOR QUOTES
&I       SETA  &I+1                .START BEHIND LEFT QUOTE
.LUP1    ANOP                      .LOOP THROUGH OUTFORM-STRING
         AIF   (('&OUTFORM'(&I,5) NE 'MONTH') AND ('&OUTFORM'(&I,3) NE X
               'MON')).LUP0020     .IS IT MONTH OR MON?
         XR    2,2                 .YES, CLEAR WORKREG
         MVI   &PRF._DW_&A+7,X'0C'           .MOVE SIGN AT THE END
         MVO   &PRF._DW_&A,&PRF._R1A_&A+9(1) .MAKE MONTH PACKED
         CVB   2,&PRF._DW_&A       .MAKE IT COMPUTABLE
         BCTR  2,0                 .SUBTRACT 1 (MON 1 IS POS 0 IN TAB)
         MH    2,=H'10'            .MULTIPLY WITH LENGTH OF TAB-ENTRY
         LA    3,&PRF._&A.MTAB     .A(START OF MONTH-TABLE)
         AR    2,3                 .COMPUTE ADDRESS OF MONTH IN TABLE
         LA    1,3                 .ASSUME 'MON' NOT MONTH IS REQUESTED
         AIF   ('&OUTFORM'(&I,5) NE 'MONTH').LUP0005  .TRUE BUMP TO EX.
         LA    1,9                 .ASSUME "SHIFT=NO" IS SET
         AIF   ('&SHIFT' EQ 'NO').LUP0005      .TRUE, BUMP OVER EXECUTE
         XR    1,1                 .CLEAR WORKREG
         ICM   1,B'0001',0(2)      .INSERT LENGTH OF MONTHNAME
.LUP0005 ANOP                      .END OF SHIFT NO/YES SPECIFICS
         BCTR  1,0                 .SUBTRACT 1 FOR EXECUTE
         EX    1,&PRF._&A.EX01     .WRITE MONTHNAME INTO RESULT-AREA
         AIF   ('&CAPS' EQ 'OFF').LUP0008    .NO CAPS BUMP OVER EX'UTE
         EX    1,&PRF._&A.OC01     .MAKE MONTHNAME UPPERCASE
.LUP0008 ANOP
         LA    1,1(,1)             .INCREASE WORKREG AFTER EXECUTE
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWERAREA)
         AIF   ('&OUTFORM'(&I,5) NE 'MONTH').LUP0010  .BUMP IF MON
&I       SETA  &I+5                .BUMP BEHIND "MONTH" IN OUTFORM
         AGO   .LUP0015
.LUP0010 ANOP                      .IF MON, NOT MONTH SPECIFIED
&I       SETA  &I+3                .ADD LENGTH OF MON
.LUP0015 ANOP
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0020 ANOP                      .CHECK 2-DIGIT MONTH SPECIFIED
         AIF   ('&OUTFORM'(&I,2) NE 'MT').LUP0030  .IS IT MT ?
         XC    &PRF._PWF_&A.,&PRF._PWF_&A    .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'          .YES, PREPARE PACKED-WA
         MVO   &PRF._PWF_&A,&PRF._R1A_&A+9(1) .MAKE MONTH PACKED
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM .MOVE EDITMASK IN WA
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A .EDIT 2-DIGIT MONTH
         MVC   0(2,5),&PRF._WEDM_&A+6        .WRITE INTO ANSWER-AREA
         LA    1,2                 .LENGTH OF 2-DIGIT MONTH
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWERAREA)
&I       SETA  &I+2                .ADD LENGTH OF MT IN OUTFORM
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0030 ANOP                      .CHECK WHETHER YEAR OR YY SPECIFIED
         AIF   (('&OUTFORM'(&I,4) NE 'YEAR') AND ('&OUTFORM'(&I,2) NE 'X
               YY')).LUP0050       .IS IT YEAR OR YY ?
         XC    &PRF._PWF_&A.,&PRF._PWF_&A    .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'          .YES, INIT PACKED WA
         MVO   &PRF._PWF_&A,&PRF._R1A_&A+10(2) .PACK 4-DIGIT YEAR
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM .INIT EDIT-MASK
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A .EDIT 4-DIGIT YEAR
         AIF   ('&OUTFORM'(&I,4) NE 'YEAR').LUP0040   .BUMP IF JUST YY
         MVC   0(4,5),&PRF._WEDM_&A+4        .MOVE YEAR INTO RESULT
         LA    1,4                 .LENGTH OF YEAR
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWERAREA)
&I       SETA  &I+4                .ADD LENGTH OF YEAR IN OUTFORM
         AGO   .LUP0045            .BUMP OVER YY-SECTION
.LUP0040 ANOP                      .YY SPECIFIED
         MVC   0(2,5),&PRF._WEDM_&A+6        .YEAR+2 IN OUTFORM
         LA    1,2                 .LENGTH OF YY
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWERAREA)
&I       SETA  &I+2                .ADD LENGTH OF YY IN OUTFORM
.LUP0045 ANOP
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0050 ANOP
         AIF   (('&OUTFORM'(&I,2) NE 'DD') AND ('&OUTFORM'(&I,5) NE 'ANX
               DAY')).LUP0060      .DD OR ANDAY REQUESTED ?
&J       SETA  &J+1                .INC. DUMMYCOUNTER FOR MULTIPLE CALL
         XC    &PRF._PWF_&A.,&PRF._PWF_&A .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'       .YES, INIT PACKED WA
         MVO   &PRF._PWF_&A,&PRF._R1A_&A+8(1)     .MAKE DD PACKED
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM     .PREPARE FOR EDIT
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A     .EDIT DD
         MVC   0(2,5),&PRF._WEDM_&A+6             .MOVE INTO RESULTAREA
         AIF   ('&OUTFORM'(&I,5) NE 'ANDAY').LUP0055  .ANDAY REQ'ED ?
         LA    1,&PRF._&A.DSF      .YES, COMPUTE APPENDIX
         LA    2,7                 .NUMBER OF NON-"TH"-DAYS
&PRF._&A.LUP&J DS 0H               .3D-LABEL FOR MULTIPLE CALLS/MACRO
         CLC   0(2,5),0(1)         .DO WE HAVE A "SPECIAL-APPENDIX" ?
         BE    &PRF._&A.012&J      .YES, WRITE IT THEREAFTER
         LA    1,4(,1)             .NO ADDRESS NEXT SPECIAL APPENDIX
         BCT   2,&PRF._&A.LUP&J    .RETRY
         MVC   2(2,5),=CL2'th'     .NOT A SPECIAL APPENDIX, USE "th"
         B     &PRF._&A.013&J      .BUMP OVER SPECIAL APPENDIX
&PRF._&A.012&J DS 0H
         MVC   2(2,5),2(1)         .MOVE "st", "nd" OR "rd" THEREAFTER
&PRF._&A.013&J DS 0H
         CLI   0(5),C'0'           .IS ANDAY > 10 ?
         BNE   &PRF._&A.015&J      .NO, GO AHEAD
         MVI   0(5),C' '           .YES, REMOVE LEADING ZERO OF ANDAY
&PRF._&A.015&J DS 0H
         AIF   ('&CAPS' EQ 'OFF').LUP0053    .NO CAPS BUMP OVER EX'UTE
         OC    2(2,5),&PRF._&A.UC            .MAKE DAY-APPENDIX UPPER
.LUP0053 ANOP                      .DD SPECIFIED
         LA    1,4                 .LENGTH OF ANDAY IN RESULTAREA
         AR    5,1                 .A(NEXT FREE SLOT IN RESULTAREA)
&I       SETA  &I+5                .LENGTH OF ANDAY IN OUTFORM
         AGO   .LUP0058            .BUMP OVER DD-SECTION
.LUP0055 ANOP                      .DD SPECIFIED
         LA    1,2                 .LENGTH OF DD IN RESULTAREA
         AR    5,1                 .A(NEXT FREE SLOT IN RESULTAREA)
&I       SETA  &I+2                .LENGTH OF DD IN OUTFORM
.LUP0058 ANOP
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0060 ANOP
         AIF   (('&OUTFORM'(&I,8) NE 'WHOLEDAY') AND ('&OUTFORM'(&I,3) X
               NE 'DAY')).LUP0070  .WHOLEDAY OR DAY SPECIFIED ?
         XC    &PRF._DW_&A.,&PRF._DW_&A      .CLEAR OUT WORK-DOUBLEWORD
         MVI   &PRF._DW_&A+7,X'0C'           .PACK IT
         MVO   &PRF._DW_&A,&PRF._R1A_&A+10(2) .MOVE YEAR THERE
         XR    1,1                 .CLEAR OUT WORKREG # 1
         CVB   1,&PRF._DW_&A       .MAKE YEAR HEX + COMPUTABLE
         BCTR  1,0                 .SUBTRACT 1 FOR CURRENT YEAR
         XR    2,2                 .CLEAR OUT WORKREG # 2
         ST    1,&PRF._WDIV_&A     .STORE R1 AROUND DIVISION
         XR    0,0                 .CLEAR REMAINDER
         D     0,=F'4'             .DIVIDE BY 4
         AR    2,1                 .ADD #OF LEAP YEARS W/O SPECIALS
         L     1,&PRF._WDIV_&A     .RELOAD "LAST" YEAR
         XR    0,0                 .CLEAR REMAINDER
         D     0,=F'100'           .DIVIDE BY 100 (NO LEAP-YEARS)
         SR    2,1                 .SUBTRACT /100 YEARS FROM TOTAL
         XR    0,0                 .CLEAR REMAINDER
         L     1,&PRF._WDIV_&A     .RELOAD "LAST" YEAR
         D     0,=F'400'           .DIVIDE BY 400 (IF 400, LEAPYEAR)
         AR    2,1                 .ADD THEM to TOTAL #OF LEAPYEARS
.* END OF LEAP-YEAR CALCULATION:
         L     1,&PRF._WDIV_&A     .RELOAD "LAST" YEAR
         MH    1,=H'365'           .365 DAYS * (YEAR-1)
         AR    1,2                 .ADD # OF LEAP-YEARS
         XC    &PRF._DW_&A.,&PRF._DW_&A      .CLEAR OUT WORK-DOUBLEWORD
         MVI   &PRF._DW_&A+7,X'0C'           .MOVE SIGN AT THE END
         MVO   &PRF._DW_&A,&PRF._R2A_&A+10(2) .MAKE DDD PACKED
         NI    &PRF._DW_&A+5,X'F0'           .REMOVE LAST DIGIT OF YEAR
         XR    3,3                 .CLEAR BEFORE CVB
         ICM   3,15,&PRF._DW_&A+4  .INSERT PACKED DEC. DAYS OF YEAR
         CVB   3,&PRF._DW_&A       .CONVERT THEM FOR DIVISION
         AR    1,3                 .ADD DAY OF YEAR TO 31.12.YYYY-1
         XR    0,0                 .CLEAR R0 FOR DIVISION
         D     0,=F'7'             .DIVIDE BY # OF DAYS/WEEK
         LA    2,&PRF._&A.DTAB     .REMAINDER IS OFFSET IN DAY-TABLE
         MH    0,=H'10'            .LENGTH OF A DAY-ENTRY
         AR    2,0                 .A(CURRENT ENTRY IN DAYTAB)
         AIF   ('&OUTFORM'(&I,3) EQ 'DAY').LUP0065  .3-CHAR FORM, BUMP
         LA    1,9                 .ASSUME SHIFT=NO SPECIFIED
         AIF   ('&SHIFT' EQ 'NO').LUP0062    .BINGO, WRITE RESULT
         XR    1,1                 .CLEAR WORKREG
         ICM   1,B'0001',0(2)      .INSERT LENGTH OF CURRENT DAY
.LUP0062 ANOP
         BCTR  1,0                 .SUBTRACT 1 FOR EXECUTE
         EX    1,&PRF._&A.EX01     .WRITE WHOLEDAY INTO ANSWERAREA
         AIF   ('&CAPS' EQ 'OFF').LUP0064    .NO CAPS BUMP OVER EX'UTE
         EX    1,&PRF._&A.OC01     .MAKE DAYNAME UPPERCASE
.LUP0064 ANOP
         LA    1,1(,1)             .RELOAD ORIGINAL LENGTH
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWER-AREA)
&I       SETA  &I+8                .LENGTH WHOLEDAY IN OUTFORM
         AGO   .LUP0068            .BUMP OVER DAY-SECTION
.LUP0065 ANOP                      .JUST DAY SPECIFIED, LENGTH IS 3
         LA    1,2                 .3-1 FOR EXECUTE
         EX    1,&PRF._&A.EX01     .WRITE DAY INTO ANSWER-AREA
         AIF   ('&CAPS' EQ 'OFF').LUP0066    .NO CAPS BUMP OVER EX'UTE
         EX    1,&PRF._&A.OC01     .MAKE DAYNAME UPPERCASE
.LUP0066 ANOP
         LA    1,1(,1)             .RELOAD ORIGINAL LENGTH
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWER-AREA)
&I       SETA  &I+3                .LENGTH DAY IN OUTFORM
.LUP0068 ANOP
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0070 ANOP
         AIF   ('&OUTFORM'(&I,3) NE 'JUL').LUP0080   .JULIAN DAY
         XC    &PRF._PWF_&A.,&PRF._PWF_&A    .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'          .INITIALIZE IT
         MVO   &PRF._PWF_&A,&PRF._R2A_&A+10(2) .PACK YDDD
         NI    &PRF._PWF_&A+1,X'F0'          .REMOVE LAST DIGIT OF YEAR
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM .INIT EDIT-MASK
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A .EDIT JULIAN DAYS
         MVC   0(3,5),&PRF._WEDM_&A+5        .WRITE DDD IN RESULTAREA
         LA    1,3                 .LENGTH OF JUL IN RESULTAREA
         AR    5,1                 .A(NEXT FREE SLOT IN ANSWER-AREA)
&I       SETA  &I+3                .LENGTH JUL IN OUTFORM
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.LUP0080 ANOP
         AIF   (('&OUTFORM'(&I,2) NE 'HH') AND ('&OUTFORM'(&I,2) NE 'MMX
               ') AND ('&OUTFORM'(&I,2) NE 'SS')).LUP0110
         XC    &PRF._PWF_&A.,&PRF._PWF_&A  .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'            .INITIALIZE WORKAREA
         MVO   &PRF._PWF_&A,&PRF._R1A_&A.(3)   .MAKE HHMMSS PACKED
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM  .INIT EDIT-MASK
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A  .EDIT HHMMSS
         AIF   ('&OUTFORM'(&I,2) NE 'HH').LUP0090  .IS IT HH ?
         MVC   0(2,5),&PRF._WEDM_&A+2          .YES, MOVE HH IN RESULT
         AGO   .LUP0105                        .BUMP OVER MM OR SS
.LUP0090 ANOP
         AIF   ('&OUTFORM'(&I,2) NE 'MM').LUP0100  .IS IT MM ?
         MVC   0(2,5),&PRF._WEDM_&A+4          .YES, MOVE MM IN RESULT
         AGO   .LUP0105                        .BUMP OVER SS
.LUP0100 ANOP
         MVC   0(2,5),&PRF._WEDM_&A+6          .MUST BE SS, MOVE IT
.LUP0105 ANOP
         LA    1,2                 .LENGTH OF RESULT
         AR    5,1                 .A(NEXT FREE SLOT IN RESULT-AREA
&I       SETA  &I+2                .LENGTH HH OR MM OR SS IN OUTFORM
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.LUP0110 ANOP
         AIF   ('&OUTFORM'(&I,6) NE 'STAMP(').LUP0120  .IS IT STAMP ?
         AIF   ('&OUTFORM'(&I+7,1) NE ')').LUP0115     .VALUE > 10 ?
&S       SETC  '&OUTFORM'(&I+6,1)            .NO, SAVE PASSED VALUE
         AIF   (('&S' LT '1') OR ('&S' GT '6')).LUP0115  .BAD VALUE ?
         XC    &PRF._PWF_&A.,&PRF._PWF_&A    .CLEAR OUT PACKED WORKAREA
         MVI   &PRF._PWF_&A+3,X'0C'          .INIT PACKED WORKFIELD
         MVO   &PRF._PWF_&A,&PRF._R1A_&A.+3(3) .PACK TIMESTAMP
         MVC   &PRF._WEDM_&A.(8),&PRF._&A.EDM .INIT EDIT-AREA
         ED    &PRF._WEDM_&A.(8),&PRF._PWF_&A .EDIT TIMESTAMP
         LA    1,&S                .GRANULARITY OF TIMESTAMP
         BCTR  1,0                 .SUBTRACT 1 FOR EXECUTE
         EX    1,&PRF._&A.EX02     .WRITE INTO ANSWERAREA
         LA    1,1(,1)             .RELOAD ORIGINAL GRANULARITY
         AR    5,1                 .A(NEXT FREE SLOT IN RESULT-AREA
&I       SETA  &I+8                .LENGTH OF STAMP(X) IN OUTFORM
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.LUP0115 ANOP                      .INVALID STAMP-VALUE FOUND
         MNOTE 12,'STAMP MUST BE A VALUE BETWEEN 1 AND 6'
         MEXIT                     .ISSUE ERROR-MSG AND LEAVE MACRO
.LUP0120 ANOP                      .NO DATE OR TIME VALUE, MUST BE PAD
&S       SETC  '&OUTFORM'(&I,1)    .EXTRACT PADDING CHARACTER
         MVI   0(5),C'&S'          .WRITE PADDING-CHARACTER INTO RESULT
         LA    1,1                 .LENGTH OF PADDING-CHAR
         AR    5,1                 .A(NEXT FREE SLOT IN RESULT-AREA
&I       SETA  &I+1                .LENGTH OF STAMP(X) IN OUTFORM
         AIF   (&I LE &LEN).LUP1   .END OF OUTFORM REACHED ?
         AGO   .ENDLUP1            .YES, LEAVE OUTFORM-LOOP
.*
.ENDLUP1 ANOP
         LA    1,&PRF._RES_&A
         SR    5,1
         STH   5,&PRF._LRS_&A
         LA    1,&PRF._DS10_&A
         L     14,&PRF._R14_&A
         LM    1,5,&PRF._RSA_&A
         B     &PRF._&A.9900
.*
&PRF._&A.9000 DS 0H
         XR    15,15                     .RC: 0; EXIT
&PRF._&A.9900 DS 0H
         DROP  4
         AH    14,=Y(&PRF._&A.9999-&PRF._&A.0000)
         BSM   0,14                      .RESTORE CALLERS AMODE
.*
         USING &PRF._DS10_&A.,4
&PRF._&A.EX01 MVC 0(0,5),1(2)
&PRF._&A.OC01 OC 0(0,5),&PRF._&A.UC      .MAKE UPPERCASE
&PRF._&A.EX02 MVC 0(0,5),&PRF._WEDM_&A+2
         LTORG
.*
&PRF._&A.9999 DS 0H
         POP   USING               .RESTORE USINGS AFTER MACRO
         MEND
