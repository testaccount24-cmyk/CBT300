*          DATA SET TSOSCRATCH AT LEVEL 001 AS OF 12/03/79
 TITLE 'S C R A T C H   ---   S C R A T C H   D A T A S E T'
*---------------------------------------------------------------------*
*                                                                     *
*   SCRATCH IS A TSO COMMAND PROCESSOR WHICH SCRATCHES A DATASET      *
*      OR LIST OF DATASETS, WITHOUT REFERENCE TO THE CATALOG, ON      *
*      A DESIGNATED VOLUME (SYSTEM DADSM SCRATCH FUNCTION).  THE      *
*      OPTION TO OVERRIDE AN EXPIRATION DATE IS PROVIDED.             *
*                                                                     *
*   SCRATCH IS INVOKED AS FOLLOWS :                                   *
*                                                                     *
*      SCRATCH  |  SCR                                                *
*                    "DSNAME | ("DSNAME" ... )                        *
*                    VOLUME ("VOLID")                                 *
*                    UNIT ("UNITNAME")  |  DEVTYPE ("HEX DIGITS")     *
*                                                                     *
*   SCRATCH USES THE FOLLOWING SERVICE ROUTINES AND SYSTEM FUNCTIONS  *
*                                                                     *
*      IKJPARS  -- TSO COMMAND PARAMETER PARSE ROUTINE                *
*      IKJEFF18 -- TSO DYNAMIC ALLOCATION ERROR DIAGNOSIS             *
*      IKJEFF19 -- TSO GENERAL COMMAND SYSTEM ERROR DIAGNOSIS         *
*      SOFDA08  -- MMSC DATASET ACCESS AUTHORIZATION EXIT             *
*      GETMAIN, FREEMAIN, LINK, SCRATCH, AND CAMLST SYSTEM MACROS     *
*      CPPL, PSCB, ECT, UPT, DAPB08 SYSTEM MAPPING MACROS             *
*      PPL, DAPL, CAMLST, AND DSNAME AND IDENT PDE IMPLICIT MAPPING   *
*                                                                     *
*   UPDATED AUG 5 2017                                                *
*     REPLACED LOAD OF DEVNAMET WITH BUILT-IN DEVNAMES TABLE          *
*     BYPASSED LINKS TO UNAVAILABLE 'SECDAIRC' AND 'CVSFMSG' MODULES  *
*      USING AGO AND ANOP. THEY WERE PROBABLY LOCAL SITE MODULES.     *
*     USE UPTPREFX INSTEAD OF PSCBUSER TO PREFIX DSN'S.               *
*     BUILD ERROR MESSAGES FOR RETURN CODES FROM SCRATCH MACRO        *
*      WHICH WAS APPARENTLY WHAT THE MISSING CVSFMSG DID.             *
*     ADD A PUTLINE ROUTINE FOR ERROR MESSAGES FROM SCRATCH MACRO.    *
*     NOT A CHANGE BUT A NOTE:                                        *
*     THE PARSE IKJIDENT MACRO FOR VOLID DOES NOT SPECIFY THE 'LIST'  *
*     ATTRIBUTE, NOR DOES THE PROGRAM LOGIC HANDLE MORE THAN ONE      *
*     VOLUME EVEN IF THERE WAS A 'LIST' ATTRIBUTE, SO ONLY ONE        *
*     VOLUME CAN BE SPECIFIED. THE USE OF 'VOLUME(S)' IS MISLEADING.  *
*   UPDATED AUG 12 2017                                               *
*     SHOW A MESSAGE AFTER SUCCESSFUL SCRATCH, UNLESS 'NOMSG'.        *
*   ON SYSTEMS THAT HAVE SYSTEM MANAGED STORAGE,                      *
*   STILL NEEDS TO DETECT IF THE VOLUME IS SMS-MANAGED OR NOT         *
*   AND NOT ISSUE THE SCRATCH MACRO IF IT IS SMS-MANAGED.             *
*   IF THE SPECIFIED VOLUME IS SMS-MANAGED THEN THE SCRATCH MACRO     *
*   WILL SCRATCH -- AND UNCATLOG -- THE DATA SET EVEN IF IT IS ON     *
*   A DIFFERENT VOLUME IN SMS THAN THE SPECIFIED VOLUME.              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
SCRATCH  CSECT
         SPACE 1
         USING DSAWRK,R10
         USING SCRATCH,R12
         USING UPT,R3
         USING PSCB,R4
         USING ECT,R5
         USING PDL,R2
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   PERFORM STANDARD REENTRANT PROLOGUE - GET WORK AREA AND SET UP    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
*;       JVDENTER BASE=(R12),DSA=(DSAEND-DSAWRK),VERSION=&SYSPARM
         USING *,R12
         SAVE  (14,12),,*
         LR    R12,15
         LR    2,13
         LA    3,(DSAEND-DSAWRK)
         GETMAIN R,LV=(3)
         ST    3,0(,1)
         ST    13,4(,1)            OLD ADDR IN NEW AREA
         LR    13,1
         ST    1,8(,2)             NEW ADDR IN OLD AREA
         LM    14,04,12(2)
         SPACE
         LM    R2,R5,0(R1)         CBUF,UPT,PSCB,ECT
         LR    R10,R13
         L     R6,PCLA
         ST    R12,UWA
         XC    ECB,ECB
         LA    R15,WKIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT-CPPL(R1)
         MVC   IOPLECT(4),CPPLECT-CPPL(R1)
         LA    R0,ECB
         ST    R0,IOPLECB
         XC    ECB,ECB
         LA    R0,WKPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   PARSE COMMAND PARAMETERS AND INITIALIZE FOR SCRATCHING LOOP       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         LINK  EP=IKJPARS,DCB=0,SF=(E,LINK),                           +
               VL=1,MF=(E,PPL),                                        +
               PARAM=(UPT,ECT,ECB,(6),ANS,(2),SSA)
         SPACE 1
         ST    R15,PARC
         LTR   R15,R15
         BNZ   PARSFAIL
         L     R2,ANS              FOR USING PDL
         CL    R2,NULL
         BE    PARSFAIL
         SPACE 1
         LA    R6,DSNAME
*;       LA    R9,DAPB
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   CONSTRUCT VOLUME LIST FROM COMMAND PARAMETERS AND DEVICE NAMES    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         LH    R14,VOLID+4
         L     R15,VOLID+0
         BCTR  R14,0
         MVC   VOLWVSN,DSBLANK
         MVC   VOLWVSN(*-*),0(R15)
         EX    R14,*-6
         LA    R15,1
         STH   R15,VOLWCNT
         SPACE 1
         CLI   DEVICE+1,1
         BE    DSLOOP
         L     R15,DEVTYPE+0
         LH    R14,DEVTYPE+4
         TR    0(*-*,R15),TRHEX
         EX    R14,*-6
         PACK  DWD,0(*-*,R15)
         EX    R14,*-6
         XR    R0,R0
         ICM   R0,B'1111',DWD+3
         STCM  R0,B'1111',VOLWDEVT
         B     DSLOOP
         SPACE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   IF A UNIT NAME IS GIVEN, LOOK UP DEVICE TYPE IN NAME TABLE.       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
UNITCHK  EQU   *
         SPACE 1
         SAVE  (14,12),,UNITCHK
         LR    R2,R1
         LR    R11,R15
         LM    R9,R10,0(R1)
         L     R12,UWA
         SPACE 1
         L     R15,0(R9)
         LH    R14,4(R9)
         BCTR  R14,0
         MVC   UNITWRK,DSBLANK
         MVC   UNITWRK(*-*),0(R15)
         EX    R14,*-6
         SPACE 1
*;       LOAD  EP=DEVNAMET
         LA    R0,DEVNAMES
         SPACE 1
         LR    R15,R0
         L     R14,0(R15)
         LA    R1,4(R15)
         SPACE 1
UNITLOOP EQU   *
         CLC   UNITWRK,0(R1)
         BE    UNITHIT
         LA    R1,12(R1)
         BCT   R14,UNITLOOP
         EJECT
UNITMISS EQU   *
         LA    R11,4
         B     UNITRTRN
         SPACE 1
UNITHIT  EQU   *
         MVC   VOLWDEVT,8(R1)
         XR    R11,R11
         TM    VOLWDEVT+2,X'A0'
         BZ    UNITMISS
         SPACE 1
UNITRTRN EQU   *
         SPACE 1
*;       DELETE EP=DEVNAMET
         SPACE 1
         LR     R15,R11
         RETURN (14,12),,RC=(15)
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   FOR EACH DATASET SPECIFIED, BUILD DAPB AND VALIDATE REQUEST       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
DSLOOP   EQU   *
         SPACE 1
         AGO   .SKIP1
         MVC   DAPB,DAP8LST
         MVC   DSNVALUE,DSBLANK
         LA    R15,DSNVLEN
         ST    R15,DA08PDSN
         SPACE 1
*;       DA08BLD DSNPDE,VOLID,DISP=(NEW,KEEP,KEEP)
         SPACE 1
ALLOC    EQU   *
         LINK  EP=SECDAIRC,DCB=0,SF=(E,LINK),                          X
               VL=1,MF=(E,DAPL),                                       X
               PARAM=(UPT,ECT,ECB,PSCB,DAPB)
         SPACE 1
         ST    R15,DARC
         LTR   R15,R15
         BNZ   AUTHFAIL
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   IF ACCESS TO DATASET IS AUTHORIZED, ISSUE SCRATCH FOR DSNAME      *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         MVC   DSNWKA(44),DSNVALUE
         TM    DA08CTL,DA08UID
         BZ    CAMBLD
         XR    R15,R15
         IC    R15,PSCBUSRL
         MVC   DSNVALUE(*-*),PSCBUSER
         EX    R15,*-6
         LR    R14,R15
         AH    R14,DSNVLEN
         LA    R14,1(R14)
         STH   R14,DSNVLEN
         LA    R15,DSNVALUE(R15)
         MVI   0(R15),C'.'
         LA    R14,DSNVALUE+L'DSNVALUE-2
         SLR   R14,R15
         MVC   1(*-*,R15),DSNWKA
         EX    R14,*-6
.SKIP1   ANOP
*---------------------------------------------------------------------*
*                                                                     *
*   QUALIFY DSN IF NOT IN QUOTES                                      *
*                                                                     *
*---------------------------------------------------------------------*
         MVC   DSNVALUE(44+9),DSBLANK
         TM    6(R6),X'80'         IS DSN SPECIFIED OR JUST (MEMBER)
         BO    OKDSN
         LA    R1,NODMSG
         LA    R0,L'NODMSG
         BAL   R14,PUTLINE
         B     DSNEXT
OKDSN    TM    14(R6),X'80'        IF MEMBER IS SPECIFIED
         BZ    OKNOMEM               IT SHOULDN'T BE
         LA    R1,MEMMSG
         LA    R0,L'MEMMSG
         BAL   R14,PUTLINE
         B     DSNEXT
OKNOMEM  L     R1,0(,R6)           POINT TO DSN
         LH    R14,4(,R6)          GET DSN LENGTH
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   DSNVALUE(0),0(R1)
         EX    R14,*-6             MOVE DSN
         TM    6(R6),X'40'         IF DSN IS IN QUOTES
         BO    CAMBLD                 IGNORE PREFIX
         SR    R14,R14
         IC    R14,UPTPREFL
         LTR   R14,R14             TEST FOR PROFILE NOPREFIX
         BZ    CAMBLD
         MVC   DSNWKA(44),DSNVALUE SAVE DSN
         LA    R15,UPTPREFX
         CLI   UPTPREFX,C'>'       TEST FOR 8-CHARACTER PREFIX Z/OS 2.3
         BNE   NOTPRF8
*        IC    R14,UPTPRF8L
         IC    R14,UPTPREFL+18     AKA UPTPRF8L
*        LA    R15,UPTPREF8
         LA    R15,UPTPREFX+17     AKA UPTPREF8
NOTPRF8  EQU   *
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   DSNVALUE(0),0(R15)  MOVE PREFIX
         EX    R14,*-6             MOVE PREFIX
         LA    R15,DSNVALUE+1(R14) POINT PAST PREFIX
         MVI   0(R15),C'.'         APPEND DOT
         MVC   1(44,R15),DSNWKA    APPEND UNQUOTED DSN
         CLI   DSNVALUE+44,C' '    IF NAME LONGER THAN 44
         BE    CAMBLD
         MVC   WKMSG(26),=C'DSNAME IS LONGER THAN 44: '
         MVC   WKMSG+26(53),DSNVALUE
         LA    R1,WKMSG
         LA    R0,79
         BAL   R14,PUTLINE
         B     DSNEXT
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*   ISSUE SCRATCH FOR DSNAME                                          *
*                                                                     *
*---------------------------------------------------------------------*
CAMBLD   MVC   CAMLST,CAMSCRNV
         LA    R15,DSNVALUE
         ST    R15,CAMDSN
         LA    R15,VOLWKA
         ST    R15,CAMVOL
         XC    CAMSER,CAMSER
         CLI   PURGE+1,1
         BNH   SCRTCH
         MVC   CAMLST,CAMSCRCV
*;       LA    R15,VOLSER
*;       ST    R15,CAMSER
         EJECT
SCRTCH   SR    R0,R0
         SCRATCH CAMLST
         SPACE 1
         LTR   R15,R15
         BNZ   CATFAIL
         CLI   MSGKW+1,2            IF NOMSG                      .NEW.
         BE    DSNEXT                 SKIP MESSAGE                .NEW.
         MVC   WKMSG(44),DSNVALUE                                 .NEW.
         LA    R15,WKMSG+43                                       .NEW.
TRAIL1   CLI   0(R15),C' '                                        .NEW.
         BNE   TRAIL2                                             .NEW.
         BCT   R15,TRAIL1                                         .NEW.
TRAIL2   MVC   1(21,R15),=C' SCRATCHED ON VOLUME '                .NEW.
         MVC   22(6,R15),VOLWVSN                                  .NEW.
         LA    R15,28(,R15)                                       .NEW.
         LA    R1,WKMSG                                           .NEW.
         LR    R0,R15                                             .NEW.
         SR    R0,R1                                              .NEW.
         BAL   R14,PUTLINE                                        .NEW.
         SPACE 1
DSNEXT   EQU   *
         CLC   24(4,R6),NULL       IF THAT WAS THE LAST DSN
         BE    DONE                  WE ARE DONE
         L     R6,24(,R6)          POINT TO NEXT DSN
         B     DSLOOP
         SPACE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   ABNORMAL SERVICE ROUTINE (DAIR AND PARS) TERMINATION PROCESSING   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
CATFAIL  EQU   *
         CH    R15,H08                                            .NEW.
         BNE   CF2                                                .NEW.
         CLI   VOLWSEQ+1,1                                        .NEW.
         BNE   CF2                                                .NEW.
         MVC   WKMSG(23),=C'NOT IN VTOC ON XXXXXX: '              .NEW.
         MVC   WKMSG+15(6),VOLWVSN                                .NEW.
         MVC   WKMSG+23(44),DSNVALUE                              .NEW.
         LA    R1,WKMSG                                           .NEW.
         LA    R0,67                                              .NEW.
         BAL   R14,PUTLINE                                        .NEW.
         B     DONE                                               .NEW.
CF2      CH    R15,=H'4'                                          .NEW.
         BNE   CF3                                                .NEW.
NOTMOUNT MVC   WKMSG(25),=C'VOLUME XXXXXX NOT MOUNTED'            .NEW.
         MVC   WKMSG+7(6),VOLWVSN                                 .NEW.
         LA    R1,WKMSG                                           .NEW.
         LA    R0,25                                              .NEW.
         BAL   R14,PUTLINE                                        .NEW.
         B     DONE                                               .NEW.
CF3      ST    R15,WKDBL                                          .NEW.
         ST    R0,WKDBL+4                                         .NEW.
         LA    R15,WKMSG                                          .NEW.
         MVC   0(13,R15),=C'RETURN CODE: '                        .NEW.
         LA    R15,13(,R15)                                       .NEW.
         LA    R1,WKDBL                                           .NEW.
         LA    R0,1                                               .NEW.
         BAL   R14,TOHEX4                                         .NEW.
         MVC   0(6,R15),=C'REG0: '                                .NEW.
         LA    R15,6(,R15)                                        .NEW.
         LA    R0,1                                               .NEW.
         BAL   R14,TOHEX4                                         .NEW.
         MVC   0(12,R15),=C'VOL STATUS: '                         .NEW.
         LA    R15,12(,R15)                                       .NEW.
         LA    R1,VOLWSEQ          VOL STATUS CODE                .NEW.
         LA    R0,2                                               .NEW.
         BAL   R14,TOHEX1                                         .NEW.
         LA    R1,WKMSG                                           .NEW.
         LR    R0,R15                                             .NEW.
         SR    R0,R1               MSG LENGTH                     .NEW.
         BAL   R14,PUTLINE                                        .NEW.
         B     DONE                                               .NEW.
         AGO   .SKIP2
         ST    R15,RCFAIL
         XC    SCFAIL,SCFAIL
         CH    R15,H08
         BNE   CFAIL
         MVC   SCFAIL+3(1),VOLWSEQ+1
         SPACE 1
CFAIL    LINK  EP=CVSFMSG,DCB=0,SF=(E,LINK),                           +
               MF=(E,FAIL),                                            +
               PARAM=(UPT,PSCB,ECT,ECB,F03,RCFAIL,SCFAIL)
         B     DSNEXT
         EJECT
AUTHFAIL EQU   *
         LINK  EP=IKJEFF18,DCB=0,SF=(E,LINK),                          +
               MF=(E,FAIL),                                            +
               PARAM=(DAPL,DARC,ZERO,H01)
         B     DSNEXT
.SKIP2   ANOP
TOHEX1   MVC   1(1,R15),0(R1)
         UNPK  0(3,R15),1(2,R15)
         TR    0(2,R15),HEXTBL-240
         LA    R15,2(,R15)
         LA    R1,1(,R1)
         BCT   R0,TOHEX1
         MVI   0(R15),C' '
         BR    R14
         SPACE
TOHEX4   MVC   1(4,R15),0(R1)
         UNPK  0(9,R15),1(5,R15)
         TR    0(8,R15),HEXTBL-240
         MVI   8(R15),C' '
         LA    R15,9(,R15)
         LA    R1,4(,R1)
         BCT   R0,TOHEX4
         BR    R14
         SPACE
PUTLINE  STM   R14,R1,WKPUTL
         XC    WKSEG1(4),WKSEG1
         MVC   WKPTPB(12),MFLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,WKSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   WKSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,WKIOPL
         SPACE
         PUTLINE PARM=WKPTPB,OUTPUT=(WKSEG1,DATA),MF=(E,(1))
         SPACE
         LM    R14,R1,WKPUTL
         BR    R14
         SPACE
         EJECT
PARSFAIL EQU   *
         LINK  EP=IKJEFF19,DCB=0,SF=(E,LINK),                          +
               MF=(E,FAIL),PARAM=(0,PARC,ZERO,H21)
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   WHEN ALL DATASETS HAVE BEEN PROCESSED, FREE PDL AND WORK AREAS    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
DONE     EQU   *
         IKJRLSA ANS
         SPACE 1
         SR    R15,R15
*;       JVDLEAVE
         LH    0,2(,13)
         LR    1,13
         L     13,4(,13)
         LR    2,15
         FREEMAIN R,LV=(0),A=(1)
         LR    15,2
         RETURN (14,12),RC=(15)
         SPACE 2
         PRINT NOGEN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   PARSE CONTROL CSECT AND PARSE DESCRIPTOR LIST DSECT DEFINITIONS   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
SCRPCL   IKJPARM DSECT=PDL
         SPACE 2
DSNAME   IKJPOSIT DSNAME,LIST,                                         +
               PROMPT='DSNAME(S)+',                                    +
               HELP='NAME(S) OF DATA SET(S) TO BE SCRATCHED'
         SPACE 2
MSGKW    IKJKEYWD DEFAULT='MSG'
         IKJNAME 'MSG'
         IKJNAME 'NOMSG'
         SPACE 2
VOL      IKJKEYWD DEFAULT='VOLUME'
         SPACE 1
         IKJNAME 'VOLUME',SUBFLD=VOLIDS
         SPACE 2
DEVICE   IKJKEYWD DEFAULT='UNITNAME'
         SPACE 1
         IKJNAME 'UNITNAME',SUBFLD=UNITS
         IKJNAME 'DEVTYPE',SUBFLD=DEVTS
         SPACE 2
PURGE    IKJKEYWD DEFAULT='NOPURGE'
         SPACE 1
         IKJNAME 'NOPURGE'
         IKJNAME 'PURGE'
         IKJNAME 'OVRD'
         EJECT
VOLIDS   IKJSUBF
         SPACE 1
VOLID    IKJIDENT 'VOLID',MAXLNTH=6,FIRST=ANY,OTHER=ANY,               +
               PROMPT='VOLID+',                                        +
               HELP='ID OF VOLUME(S) ON WHICH DATASET(S) RESIDE'
         SPACE 1
UNITS    IKJSUBF
         SPACE 1
UNIT     IKJIDENT 'UNIT NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,           +
               PROMPT='UNIT NAME+',                                    +
               VALIDCK=UNITCHK,                                        +
               HELP='NAME OF UNIT ON WHICH DATASET(S) RESIDE'
         SPACE 1
DEVTS    IKJSUBF
         SPACE 1
DEVTYPE  IKJIDENT 'DEVTYPE',MAXLNTH=8,FIRST=ALPHANUM,OTHER=ALPHANUM,   +
               PROMPT='DEVTYPE+',                                      +
               HELP='HEXADECIMAL DIGITS FOR DEVICE TYPE DATA'
         SPACE 1
         SPACE 1
         IKJENDP
         SPACE 2
         PRINT GEN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   DECLARE ALL CONSTANTS, LITERALS, WORK AREAS, AND CONTROL BLOCKS   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
PCLA     DC    A(SCRPCL)
NULL     DC    0A(0),X'FF',AL3(0)
ZERO     DC    A(0)
F03      DC    F'3'
H01      DC    H'1'
H08      DC    H'8'
H21      DC    H'21'
         SPACE 1
DEVNAMES DC    F'6' NUMBER OF UNIT NAMES
         DC    CL8'3390    ',X'3010200F'
         DC    CL8'3380    ',X'3010200E'
         DC    CL8'3375    ',X'3010200C'
         DC    CL8'3350    ',X'3050200B'
         DC    CL8'3330-1  ',X'3050200D'
         DC    CL8'3330    ',X'30502009'
TRHEX    DC    256AL1(*-TRHEX)
         ORG   TRHEX+X'C1'
         DC    X'FAFBFCFDFEFF'
         ORG   TRHEX+X'FA'
         DC    C'ABCDEF'
         PRINT DATA
         SPACE 1
*; SCRERR DC   X'0018800000380000000000000000',2CL8' ',CL2' '
*;        DC   X'0400',CL8' '
*; DAP8LST  DC    X'0008',BL2'0',XL2'0',XL2'0',AL4(0)
*;       DC    3CL8' ',4F'0',2CL8' '
*;       DC    AL1(DA08OLD),AL1(DA08KEEP),AL1(DA08KEEP)
*;       DC    BL1'0',XL3'0',BL1'0',CL8' '
DSBLANK  DC    CL44' ',CL9' '
NODMSG   DC    C'DSN NOT SPECIFIED - JUST A MEMBER NAME'
MEMMSG   DC    C'MEMBER NAME SHOULD NOT BE SPECIFIED'
         EJECT
CAMSCRCV CAMLST    SCRATCH,*-*,,*-*,,OVRD      NAME,,VOLLIST,,OV
         SPACE 1
CAMSCRNV CAMLST    SCRATCH,*-*,,*-*            NAME,,VOLLIST
         SPACE 1
HEXTBL   DC    C'0123456789ABCDEF'
MFLPTPB  PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
PATCH    DC    32S(*)
         SPACE 1
         LTORG
         DC    0D'0'
         SPACE
         IKJUPT
         SPACE
         IKJPSCB
         SPACE
         IKJECT
         SPACE
         IKJCPPL
         IKJIOPL
         EJECT
         SPACE 3
*        JVDEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         PRINT GEN
         EJECT
DSAWRK   DSECT
         SPACE 1
SSA      DS    18F
TIOTA    DS    A
ANS      DS    A
ECB      DS    A
WKPUTL   DS    4A
WKIOPL   DS    4A
WKPTPB   DS    3A
WKDBL    DS    D
WKSEG1   DS    2H,CL256
WKMSG    DS    CL80
UCRETN   DS    F
UWA      DS    A
DWD      DS    D
RCFAIL   DS    F
SCFAIL   DS    F
         SPACE 1
VOLWKA   DS    0D
VOLWCNT  DS    H
VOLWNTRY DS    0XL12
VOLWDEVT DS    XL4
VOLWVSN  DS    CL6
VOLWSEQ  DS    H
         SPACE 1
UNITWRK  DS    CL8
DSNWKA   DS    CL44
DSAPATCH DC    8S(*)
DARC     DS    F
PARC     DS    F
DVTWKA   DS    5F
FAIL     DS    8F
BTRALC   DS    F
CAMLST   DS    F
CAMDSN   DS    A
CAMSER   DS    A
CAMVOL   DS    A
CAMTTR   DS    A
         EJECT
PPL      CALL  ,(UPT,ECT,ECB,PCLA,ANS,CPPL,UWA),MF=L
*; DAPL     CALL  ,(UPT,ECT,ECB,PSCB,DAPB),MF=L
*; EXTRACT  EXTRACT  TIOTA,FIELDS=TIOT,MF=L
LINK     LINK     SF=L
         SPACE 1
*; DAPB     DS    XL(DA08END-DAPB08)
*; DSNVLEN  DS    H
DSNVALUE DS    CL44,CL9 ROOM FOR 8-BYTE PREFIX, DOT, DSN
*; VOLSER   DS   CL6
*; CUU      DS   CL3
         SPACE 1
DSAEND   DS    0D
         END   SCRATCH
