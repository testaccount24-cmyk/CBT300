         TITLE 'SYSTEM CONFIGURATION DISPLAY'
*---------------------------------------------------------------------*
*                                                                     *
*        SYSTEM IS THE OS/MVS VERSION OF THE SYSTEM CONFIG DISPLAY    *
*        DISPLAY  COMMAND.  IT SHOWS A TSO USER THE OPERATING         *
*        SYSTEM, RELEASE, CPU MODEL, SERIAL NUMBER(S), AND MAIN       *
*        STORAGE SIZE, AND DATE.                                      *
*                                                                     *
*        AUTHOR: UNKNOWN                                              *
*                                                                     *
*                                                                     *
* CHNGE LOG: 13JUN91-UPDATED TO 31BIT MODE, PREP FOR ESA. CHANGES     *
*                    ARE TOO NUMEROUS TO MARK. THIS NEEDS A MAJOR     *
*                    OVERHAUL TO MAKE IT READY FOR ESA.  JIM MARSHALL *
*            30SEP91-SAYS IF SYSTEM IS RUNNING AS A GUEST OF VM  JDM1 *
*            25MAY92-TELL HOW MANY ENGINES YOU ARE USING AND          *
*                    WHETHER YOU ARE RUNNING IN PR/SM PARITION   JDM2 *
*            29MAY92-FIXED IPL DATE                              JDM3 *
*---------------------------------------------------------------------*
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3                   DSECT FOR IEFUCBOB
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                  DSECT FOR CVT
R11      EQU   11
R12      EQU   12                  BASE REG
R13      EQU   13                  DSECT FOR DSAWRK
R14      EQU   14
R15      EQU   15
SP000    EQU   0
         SPACE
SYSTEM   AMODE 31
SYSTEM   RMODE ANY
SYSTEM   CSECT
         SPACE
         SAVE  (14,12),,SYSTEM_&SYSDATE
         LR    R12,R15
         USING SYSTEM,R12
         GETMAIN RU,LV=WORKSIZE,SP=SP000,LOC=BELOW
         USING DSAWRK,R1
         ST    R13,SSA+4
         ST    R1,8(,R13)
         LR    R13,R1
         DROP  R1
         USING DSAWRK,R13
         SPACE
         L     R10,CVTPTR
         USING CVT,R10
         L     R2,CVTSMCA          FIND SMCA                     JDM3
         USING SMCABASE,R2         GET ADDRESSABILITY            JDM3
         L     R3,CVTSYSAD         UCB ADDR FOR SYSRES
         USING UCBOB,R3
*        LA    R5,0(,R10)
*        S     R5,F8
         L     R5,X'8C'(,R10)      ECVT
         MVC   BUFFER(BUFEND-BUFFER),MASK
         MVC   BUFFER(6),X'1F0'(R5)     Z/OS
         MVC   BUFFER+6(1),513(R5)   VERSION
         MVI   BUFFER+7,C'.'
         MVC   BUFFER+8(2),514(R5)   RELEASE
*        MVC   BRLSE,4(R5)
*        MVC   BLEVL,6(R5)
         MVI   BMODL,C'-'
         SPACE
         L     R9,CVTEORM          GET REAL HIGH STORAGE
         SRA   R9,10
         LA    R9,1(R9)
         XR    R8,R8               ZERO R8
         D     R8,F1024            WANT MEGABYTES
         CVD   R9,DWD
         ED    BCORE,DWD+5
         MVC   BIPLV,UCBVOLI       MOVE VOLSER FROM UCB
         LA    R3,SMCAIDTE         POINT TO IPL DATE             JDM3
         MVC   BDATE,JULPATT                                     JDM3
         ED    BDATE,1(R3)                                       JDM3
         DROP  R2                                                JDM3
         L     R4,CVTPCCAT         GET PHYSCIAL CCA VECTOR TABLE
         USING PCCAVT,R4
         SPACE 1                                                 JDM2
*----------------------------------------------------------------JDM2-*
*        COUNT HOW MANY ENGINES WE ARE USING                     JDM2
*----------------------------------------------------------------JDM2-*
         SPACE 1                                                 JDM2
         LA    R3,16               LOOP THROUGH 16 ENTRIES       JDM2
         LR    R5,R4               GET FIRST ADDRESS             JDM2
         ZAP   CPUNUM,=P'0'        ZERO CTER                     JDM2
CNTCPU   EQU   *                                                 JDM2
         L     R2,0(,R5)                                         JDM2
         LTR   R2,R2               IS IT ZERO ?                  JDM2
         BZ    CNTEND                                            JDM2
         AP    CPUNUM,=P'1'        BUMP THE COUNT                JDM2
CNTEND   EQU   *                                                 JDM2
         LA    R5,4(R5)            MOVE ALONG                    JDM2
         BCT   R3,CNTCPU                                         JDM2
         SPACE 1                                                 JDM2
         L     R5,0(R4)            UNIPROCESSOR ONLY !!!
         DROP  R4
         USING PCCA,R5
         MVC   BSNUM,PCCACPID+2    MOVE IN PCCACPID
         MVC   BMODL(4),PCCACPID+8 MOVE IN MODEL NUMBER
         BAL   R11,TPUT            WRITE THE LINE
         BAL   R11,TPUT            PUT OUT BLANK LINE
         BAL   R11,TPUT            PUT OUT BLANK LINE
         SPACE
*---------------------------------------------------------------------*
*        FIND OUT WHAT OPERATING SYSTEM WE ARE RUNNING
*---------------------------------------------------------------------*
         SPACE
         TM    CVTDCB,CVT4MS1      ARE WE RUNNING OS/VS2 ?
         BNO   S1
         MVC   BUFFER(L'MSG1),MSG1
         BAL   R11,TPUT
S1       EQU   *
         TM    CVTDCB,CVT6DAT      DAT PRESENT ?
         BNO   S2
         MVC   BUFFER(L'AND),AND
         BAL   R11,TPUT
         MVC   BUFFER(L'MSG2),MSG2
         BAL   R11,TPUT
S2       EQU   *
         TM    CVTDCB,CVTMVS2      MULTIPLE MEMORY OPTION ?
         BNO   S3
         MVC   BUFFER(L'AND),AND
         BAL   R11,TPUT
         MVC   BUFFER(L'MSG3),MSG3
         BAL   R11,TPUT
S3       EQU   *
         TM    CVTDCB,CVT6DAT      XA MODE     ?
         BNO   S4
         MVC   BUFFER(L'AND),AND
         BAL   R11,TPUT
         MVC   BUFFER(L'MSG4),MSG4
         BAL   R11,TPUT
S4       EQU   *
         CLI   PCCACPID+1,C'F'     GUEST OF VM ??                JDM1
         DROP  R5                                                JDM1
         BNE   S5                                                JDM1
         MVC   BUFFER(L'AND),AND                                 JDM1
         BAL   R11,TPUT                                          JDM1
         MVC   BUFFER(L'MSG5),MSG5 TELL THE USER                 JDM1
         BAL   R11,TPUT                                          JDM1
S5       EQU   *                                                 JDM1
         SPACE 1                                                 JDM2
*----------------------------------------------------------------JDM2-*
*        TELL USER HOW MANY ENGINES ARE FIRING                   JDM2
*----------------------------------------------------------------JDM2-*
         SPACE 1                                                 JDM2
         MVC   BUFFER(L'AND),AND                                 JDM2
         BAL   R11,TPUT                                          JDM2
         MVC   BUFFER(MSG7L),MSG7      PUT IN MSG                JDM2
         LA    R15,BUFFER+MSG7NUML                               JDM2
         ED    0(4,R15),CPUNUM                                   JDM2
         BAL   R11,TPUT                                          JDM2
         LR    R1,R13
         L     R13,SSA+4
         FREEMAIN RU,LV=WORKSIZE,A=(R1),SP=SP000
         RETURN (14,12),RC=0
TPUT     EQU   *
         LA    R7,BUFL
         APUT  BUFFER,(R7)
         MVC   BUFFER(BUFL),BLANKS
         BR    R11
         SPACE
*---------------------------------------------------------------------*
*        DATA AREAS                                                   *
*---------------------------------------------------------------------*
F1024    DC    F'1024'
VSMASK   DC    F'2'
F8       DC    F'8'
MASK     DC    C'MVS R03.0A  Model-XXXX  #60116'
         DC    X'402020202120',C'M  '
MASKC    DC    C'IPL''D FROM DLIB36 ON 76.079'
         ORG   MASKC+L'MASKC-6
         DC    X'2120',C'.',X'202020'
BLANKS   DC    CL80' '
MSG1     DC    C'SYSTEM IS RUNNING OS/VS2'
MSG2     DC    C'DAT IS ON FOR THE CPU   '
MSG3     DC    C'MULTIPLE MEMORY OPT OF OS/VS2 PRESENT'
MSG4     DC    C'S/370-XA MODE EXECUTION '
MSG5     DC    C'SYSTEM IS RUNNING AS A VM GUEST'                JDM1
MSG6     DC    C'SYSTEM IS RUNNING IN A PR/SM PARITION'          JDM2
MSG7     EQU   *                                                 JDM2
         DC    C'SYSTEM IS PROCESSING WITH'                      JDM2
MSG7NUML EQU   *-MSG7                                            JDM2
MSG7NUM  DC    X'40202020'                                       JDM2
         DC    C' ENGINES'                                       JDM2
MSG7L    EQU   *-MSG7                                            JDM2
AND      DC    C'       AND '
JULPATT  DC    XL7'4020204B202020' EDIT PATTERN FOR IPL DATE     JDM3
         LTORG
         EJECT
DSAWRK   DSECT
SSA      DS    18F
BUFFER   EQU   *
BTYPE    DS    CL5
BRLSE    DS    CL2
         DS    C'.'
BLEVL    DS    CL2
         DS    C'  S/370-'
BMODL    DS    CL4
         DS    C'  '
BSNUM    DS    CL6
BCORE    DS    ZL6
         DS    C'K  IPL''D FROM '
BIPLV    DS    CL6
         DS    C' ON '
BDATE    DS    C' YY.DDD'                                      JDM3
BUFEND   EQU   *
BUFL     EQU   *-BUFFER
DWD      DS    D
CPUNUM   DS    PL2                                             JDM2
MSGAREA  DS    CL50                                            JDM2
DSAEND   EQU   *
WORKSIZE EQU   DSAEND-DSAWRK
         SPACE
CVT      DSECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IEFUCBOB LIST=YES
         SPACE
         IHAPCCAT DSECT=YES
         SPACE
         IHAPCCA  DSECT=YES
         SPACE
         IEESMCA                                                 JDM3
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
