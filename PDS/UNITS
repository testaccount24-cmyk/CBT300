         TITLE '       U N I T S   '
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA.
*        DATE WRITTEN. MAY 05 1976
*        DATE UPDATED. JAN. 10 2017 TESTED ON Z/OS 2.2
*        DATE UPDATED. MAR. 28 1989 BY M.KARLIN (TESTED 3.1.0E)
*                                     8/2/92    (TESTED 4.1.0 )
*        ATTRIBUTES. RE-ENTRANT.
*            THIS TSO COMMAND DISPLAYS THE UNIT NAMES IN THE
*            DEVICE NAME TABLE, AND THE CHANNEL-UNIT-ADDRESSES
*            ASSOCIATED WITH EACH UNIT NAME.
*            29AUG79 - MASK LENGTH COMPUTED INSTEAD OF CONSTANT.
*       22APR90 - MVS/ESA SEE SPL: SYSTEM MODIFICATION
*                 UNIT VERIFICATION PROGRAM IEFEB4UV
*       09JAN17 - FIX BUG: SINCE 1990 UPDATE FOR ESA, NAMES WITH JUST
*                 ONE LINE OF UCB'S WERE NOT SHOWN. THE LAST LINE OF
*                 UCB'S FOR EACH NAME WAS NOT SHOWN. IN OTHER WORDS,
*                 THE LAST OR ONLY LINE FOR A NAME WAS NOT SHOWN.
*                 FIXED BY CHANGING A BRANCH AT UCBLOOP
*                 TO GO TO NAMEOUT INSTEAD OF NEXTNAME.
*                 FIX BUG: WAS ASSUMING IEFEB4UW RETURNS NORMAL RC 0.
*                 AND ABENDING WHEN IT DID NOT.
*                 IT NOW CHECKS FOR BAD RETURN CODE FROM IEFEB4UV
*                 AND SHOWS THE RETURN CODE NEXT TO THE NAME.
*                 IT WAS GETTING AN UNDOCUMENTED RC 36 FROM IEFEB4UW
*                 WHEN REQUESTING UCB'S FOR A FEW UNIT NAMES.
*                 THE LINK TO CLRSCRN WHICH WAS ADDED IN 1990 IS NOW
*                 DONE ONLY IF THE NEW 'CLEAR' KEYWORD IS SPECIFIED.
*                 STILL DOES NOT SHOW UCB'S ABOVE THE LINE, OR
*                 4-DIGIT UCB'S, AS THEY ARE NOT RETURNED BY IEFEB4UV.
*       10JAN17 - REPLACE LINKS TO IEFEB4UV WITH EDTINFO MACROS
*       10JAN17 - REPLACE EDTINFO RTNUCBA WITH EDTINFO RTNDEVN
*                 SO NOW UNITS ABOVE THE LINE AND 4-DIGIT UNITS AND
*                 DYNAMIC UNITS ARE SHOWN. THE UCBTYP IS NO LONGER
*                 SHOWN, AS RTNDEVN DOES NOT PROVIDE THE UCB ADDRESS.
*       10JAN17 - ADD UCBSCAN AND SHOW UCBTYP AS BEFORE.
         PRINT NOGEN
UNITS    CSECT
UNITS    AMODE 31               @MK
UNITS    RMODE 24               @MK
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'UNITS'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)   SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
PROCEED  EQU   *
*-       LINK  EP=CLRSCRN           -(09JAN17)
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
************************************************************
*        SET UP PPL FOR PARSE                              *
************************************************************
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(UNITSPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15
************************************************************
*        CALL THE PARSE SERVICE ROUTINE                    *
************************************************************
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,X'020C'(,R15)   CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT L     R3,MYANS
         USING IKJPARMD,R3
         CLI   CLEARKW+1,1         (09JAN17)
         BNE   NOCLS               (09JAN17)
         LINK  EP=CLRSCRX          (09JAN17)
NOCLS    EQU  *                    (09JAN17)
*****************************************************************
*        USE EDTINFO TO GET A LIST OF UNIT NAMES FOR DEV CLASS  *
*****************************************************************
         LA    R1,DEVCLASS         GET DEVICE TABLE ADDR
         ST    R1,DEVADDR          STORE IT
DEVCLSLP LR    R8,R1               POINT R8 TO DEV CLASS
         LA    R1,EDTINFW
         PRINT GEN
         EDTINFO RTNNAMD,NAMELIST=NAMELIST,DEVCLASS=0(R8),MF=(E,(1))
*              IF THE 2 WORDS POINTED TO BY NAMELIST ARE 8 AND 0
*              IT MEANS THERE ARE NO NAMES IN THE DEV CLASS.
         PRINT NOGEN
         L     R4,NAMELIST       GET UNIT NAME LIST PTR
         L     R1,0(R4)          GET UNIT NAME SP & LIST SIZE @MK
         ST    R1,UNTNAMSZ       SAVE FOR FREEMAIN            @MK
         ST    R4,UNTNAMSZ+4     SAVE FOR FREEMAIN
         ICM   R1,15,4(R4)       GET UNT NAME CNT             @MK
         BZ    FREETBL           NO MORE UNITS OF THIS CLASS  @MK
         ST    R1,CTRNAME         SAVE                        @MK
         LA    R4,8(,R4)         POINT TO FIRST UNIT NAME     @MK
************************************************************    @MK
*        SCAN THRU DEVICE NAME TABLE                       *    @MK
************************************************************    @MK
NAMELOOP EQU   *
         ST    R1,CTRNAME
         MVI   MYMSG,C' '
         MVC   MYMSG+1(MYMSGL-1),MYMSG
         MVI   MYMSGEND,X'FF'
         MVC   MYMSG(8),0(R4)
         CLI   NAMEKW+1,1          'NAMES' SPECIFIED
         BE    NAMEOUT             YES, NO MASK PROCESSING
         LA    R7,MYMSGCUU
************************************                            @MK
*        GET LIST OF UNIT ADDRESSES                             @MK
************************************                            @MK
         PRINT GEN
         LA    R15,DEVNAREA
         ST    R15,DEVNLIST
         LA    R0,24               2 WORDS + 4 4-BYTE ENTRIES
         ST    R0,0(,R15)          SAVE SIZE
         LA    R0,R4               4 4-BYTE ENTRIES
         ST    R0,4(,R15)          SAVE COUNT
         SR    R0,R0               INDICATE NO GETMAIN
         ST    R0,DEVNFREE
         LA    R1,EDTINFW
*        EDTINFO RTNDEVN,DEVNLIST=DEVNLIST,UNITNAME=0(R4),MF=(E,(1))
         EDTINFO RTNDEVN,DEVNLIST=DEVNLIST,UNITNAME=0(R4),             +
               DYNAMIC=YES,LOC=ANY,RANGE=ALL,MF=(E,(1))
         PRINT GEN
         LTR   R15,R15
         BZ    DEVNOK
         C     R15,=F'4'
         BNE   NOT4
         C     R0,=F'3'            NO UNITS FOR THIS NAME
         BE    NAMEOUT             JUST SHOW THE NAME
NOT4     C     R15,=F'8'
         BNE   NAMERC
         C     R0,=F'4'            CALLER DID NOT SUPPLY SUFFICIENT STG
         BNE   NAMERC
         B     RETRY
DEVNOK   L     R6,DEVNLIST         POINT TO FIRST DEVNUM
         L     R1,0(,R6)           GET DEVN LIST SIZE
         L     R1,4(,R6)           GET DEVN COUNT
         ST    R1,UCBCTR           SAVE
         LA    R6,8(R6)            POINT TO FIRST DEVN
UCBLOOP  ICM   R1,15,UCBCTR        IF NO DEVN'S LEFT
         BZ    NAMEOUT               WRITE FINAL OR ONLY LINE THIS NAME
         BCTR  R1,0
         ST    R1,UCBCTR
         MVC   UCDEVE(4),0(R6)     COPY EBCDIC DEVN
         LA    R1,MYMSGCUU
         CR    R7,R1               IF FIRST DEV ON THE LINE
         BNE   NOT1ST
         BAL   R14,UCBSCAN         FIND UCB FOR THIS DEVN
         MVC   MYMSG+9(9),UCDEVX
NOT1ST   CLI   0(R6),C'0'          IF 1ST OF 4 BYTES IS '0'
         BNE   *+8                   THEN
         MVI   0(R6),C' '            MAKE IT BLANK
         MVC   DEVNUM,0(R6)        GET EBCDIC UNIT ADDRESS
         CLC   0(4,R7),=C'    '    ANY ROOM LEFT?  R7=A(MYMSGCUU)
         BNE   CONTINUE            NO - BRANCH
         CLC   MYMSGCUU(2),=C'  '  FIRST CUU?
         BE    FSTCUU              YES - BRANCH
         CLC   MYMSGCUU(3),DEVNUM  NO - SAME CU AS FIRST?  @MK
         BNE   CONTINUE            NO - NEW LINE
FSTCUU   EQU   *
         MVC   0(4,R7),DEVNUM      MOVE 4-DIGIT CUU
         LA    R7,5(,R7)           NEXT SLOT                    @MK
         LA    R6,4(,R6)           NEXT UCB                     @MK
         B     UCBLOOP             GET NEXT UCB                 @MK
CONTINUE STM   R14,R1,SAVEBITS
         LA    R1,MYMSG
         LA    R0,MYMSGL
         BAL   R14,PUTLINE
         LM    R14,R1,SAVEBITS
         MVI   MYMSG,C' '
         MVC   MYMSG+1(MYMSGL-1),MYMSG
         LA    R7,MYMSGCUU
         BAL   R14,UCBSCAN         REDO UCBSCAN FOR NEW LINE
         MVC   MYMSG+9(9),UCDEVX
         B     FSTCUU
RETRY    EQU   *
*        LA    R1,=C'RETRY'
*        LA    R0,5
*        BAL   R14,PUTLINE
         L     R0,DEVNAREA+4       GET NUMBER OF 4-BYTE ENTRIES NEEDED
         SLL   R0,2                MULTIPLY BY 4
         A     R0,=F'8'            ADD 8
         ST    R0,DEVNFREE         SAVE SIZE
         GETMAIN R,LV=(0)
         ST    R1,DEVNFREE+4       SAVE ADDRESS
         L     R0,DEVNFREE         GET SIZE OF AREA
         ST    R0,0(,R1)           STORE SIZE IN 1ST WORD
         L     R0,DEVNAREA+4       GET NUMBER OF ENTRIES
         ST    R0,4(,R1)           STORE COUNT IN 2ND WORD
         ST    R1,DEVNLIST         STORE ADDESS IN DEVNLIST
         LA    R1,EDTINFW
         EDTINFO RTNDEVN,DEVNLIST=DEVNLIST,UNITNAME=0(R4),             +
               DYNAMIC=YES,LOC=ANY,RANGE=ALL,MF=(E,(1))
         LTR   R15,R15
         BZ    DEVNOK
NAMERC   MVC   MYMSG+9(3),=C'RC='
         CVD   R15,DOUBLE          RETURN CODE
         OI    DOUBLE+7,X'0F'
         UNPK  MYMSG+12(5),DOUBLE+5(3)
         CVD   R0,DOUBLE           REASON CODE
         OI    DOUBLE+7,X'0F'
         UNPK  MYMSG+18(5),DOUBLE+5(3)
         LA    R1,MYMSG
         LA    R0,23
         BAL   R14,PUTMSG
         LA    R4,8(,R4)
         B     SKIPFREE
NAMEOUT  LA    R1,MYMSG
         LA    R0,MYMSGL
         BAL   R14,PUTLINE
NEXTNAME LA    R4,8(,R4)          @MK- ESA  NEXT UNIT NAME IN LIST
         CLI   NAMEKW+1,1          'NAMES' SPECIFIED
         BE    SKIPFREE            YES, NO FREEMAIN
         LM    R0,R1,DEVNFREE
         LTR   R0,R0
         BZ    SKIPFREE
         FREEMAIN R,LV=(0),A=(1)   FREE THE DEVN LIST
SKIPFREE L     R1,CTRNAME
         BCT   R1,NAMELOOP
FREETBL  LM    R0,R1,UNTNAMSZ
         FREEMAIN R,LV=(0),A=(1)          FREE THE UNIT NAME LIST
         L     R1,DEVADDR          GET NEXT DEV CLASS
         LA    R1,1(R1)
         CLI   0(R1),X'FF'
         BE    EXIT0               NO MORE DEVICE CLASSES
         ST    R1,DEVADDR          SAVE
         B     DEVCLSLP            LOOP
         SPACE
         PRINT GEN
UCBSCAN  ST    R14,DOUBLE
*         CONVERT EBCDIC HEX CHARS IN UCDEVE TO BINARY HALFWORD UCDEVN
         LA    R1,UCWORK
         MVC   0(4,R1),UCDEVE      COPY EBCDIC DEVN
         MVC   4(4,R1),UCDEVE      COPY EBCDIC DEVN AGAIN
         TR    0(4,R1),BINTRAN1-X'C1' LEFT NIBBLES
         TR    4(4,R1),BINTRAN2-X'C1' RIGHT NIBBLES
         LA    R0,2                TWO PAIRS OF HEX DIGITS
         SR    R14,R14
         SR    R15,R15
BINLOOP  SLL   R14,8               SHIFT LEFT 1 BYTE
         IC    R14,0(,R1)          LEFT NIBBLE
         IC    R15,5(,R1)          RIGHT NIBBLE
         OR    R14,R15             COMBINE NIBBLES
         LA    R1,2(,R1)           POINT TO NEXT PAIR
         BCT   R0,BINLOOP          LOOP UNTIL 4 BYTES DONE
         STH   R14,UCDEVN          STORE RESULT
         XC    UCWORK(100),UCWORK
         LA    R1,UCBSCANW
         UCBSCAN COPY,WORKAREA=UCWORK,UCBAREA=UCCOPY,DEVN=UCDEVN,      +
               DYNAMIC=YES,RANGE=ALL,DEVCLASS=ALL,MF=(E,(1))
         LA    R1,UCCOPY
         XC    UCTYP,UCTYP
         LTR   R15,R15
         BNZ   USCANX
         CLC   UCDEVN,UCBCHAN-UCBOB(R1)  VERIFY WE GOT THE CORRECT UCB
         BNE   USCANX
         MVC   UCTYP,UCBTYP-UCBOB(R1)    SAVE UCBTYP
USCANX   LA    R1,UCTYP
         LA    R0,4
         LA    R15,UCDEVX
         BAL   R14,HEX
         L     R14,DOUBLE
         BR    R14
         PRINT NOGEN
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTRAN-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTRAN  DC    C'0123456789ABCDEF' TRANSLATE TABLE
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         LM    R14,R1,PUTLINS
         BR    R14
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),MF=(E,MYIOPL)
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
EXIT0    SR    15,15
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(13)
         L     14,12(,13)
         BR    14
************************************************************
*        CONSTANTS                                         *
************************************************************
DEVCLASS DC    X'04081020404180FF'  04=CHAR READ,08=UNIT REC,10=DISPLAY
*                             20=DASD,40=COMMUN,41=CHAN-TO-CHAN,80=TAPE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
BINTRAN1 DC    X'A0B0C0D0E0F0',41X'00',X'00102030405060708090'
BINTRAN2 DC    X'0A0B0C0D0E0F',41X'00',X'00010203040506070809'
************************************************************
*        PARSE PCL                                         *
************************************************************
UNITSPCL IKJPARM
NAMEKW   IKJKEYWD
         IKJNAME 'NAMES'
CLEARKW  IKJKEYWD
         IKJNAME 'CLEAR'
         IKJENDP
************************************************************
*        DSECTS                                            *
************************************************************
@DATA    DSECT
         DS    18F
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
CTRNAME  DS    F
UCBCTR   DS    F
SAVEBITS DS    4F
SAVEUCB  DS    F
NAMELIST DS    F
UCBALIST DS    F
DEVNLIST DS    F
DEVNAREA DS    6F
DEVNFREE DS    2F
*DVCLASS DS    C
         EDTINFO MF=(L,EDTINFW)
EDTINFL  EQU   *-EDTINFW
         UCBSCAN MF=(L,UCBSCANW)
UCBSCANL EQU   *-UCBSCANW
DOUBLE   DS    D
UCWORK   DS    25F
UCCOPY   DS    12F
UCDEVE   DS    F
UCDEVN   DS    H
UCDEVX   DS    CL9
UCTYP    DS    F
MYMSG    DS    0CL80
         DS    CL8
         DS    C
         DS    CL8
         DS    C
MYMSGCUU DS    8CL5
MYMSGL   EQU   *-MYMSG
MYMSGEND DS    CL8
************* @MK @MK @MK *******************************
DEVNUM   DS    F          UCBNAME                               @MK
UCBLSTSZ DS    2F         UCB LIST SP AND SIZE AND ADDRESS      @MK
UNTNAMSZ DS    2F  UNIT NAME LIST SP AND SIZE AND ADDRESS      @MK
DEVADDR  DS    A   ADDRESS OF DEV CLASS TABLE                  @MK
************* @MK @MK @MK *******************************
@DATAL   EQU   *-@DATA
         IKJCPPL
         IKJIOPL
         IKJPPL
         IKJECT
         DSECT
         IEFUCBOB
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
