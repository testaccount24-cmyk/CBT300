LISTAX   TITLE 'LISTAX --- LISTS ATTRIBUTES OF ALL ALLOCATED DATASETS'
* ------------------------------------------------------------------- *
*   LISTAX WAS WRITTEN BY        BOB JUCH                             *
*                                 POSTAL DATA CENTER                  *
*                                 850 CHERRY AVE.                     *
*                                 SAN BRUNO CA. 94097                 *
*                                 415 876-9176                        *
*                                                                     *
*   UPDATED:  01/06/2013 BY SAM GOLOB                                 *
*         MADE THE DISPLAY NEATER.                                    *
*         ADDED A STANDARD SAVE AREA.                                 *
*         CONVERTED TO PUTLINE OUTPUT INSTEAD OF TPUT.                *
*         MADE AMODE 31 TO BE ABLE TO GET TO ALL THE CONTROL BLOCKS.  *
*         NOT APF-AUTHORIZED.                                         *
*         NOT RE-ENTRANT.                                             *
*         CHANGE DLTE TO DELE, FOR DELETE. I THINK IT'S CLEARER.      *
*         MADE SURE COMMAS ARE INSERTED FOR DISP=(DISP1,DISP2,DISP3)  *
*         USED IBM MACRO YREGS FOR REGISTER EQUATES.                  *
*         TESTED ON Z/OS 1.12, 1.13.                                  *
*         REPLACED:  LABEL  EQU  *  WITH LABEL  DS  0H  (SAFER)       *
* ------------------------------------------------------------------- *
         EJECT
* ------------------------------------------------------------------- *
*)F FUNCTION:
*         THE LISTAX COMMAND LISTS ALL ALLOCATED DATASETS
*         IN THE FOLLOWING FORMAT:
*
*              ***  LISTAX - VERSION 1.1  ***
*         DDNAME   DISPOSITIONS ORG  DATASET NAME
*         ------   ------------ --- -------------------------
*         XXXXXXXX XXX XXXX XXXX XX XXXXXXXXXXXXXXXXXXXX
*
*   LISTAX FUNCTIONALITY IS VERY SIMILAR TO ISRDDN UNDER ISPF, AND
*   LISTAX SHOWS THE THIRD DATASET DISPOSITION, BUT YOU CAN'T
*   MANIPULATE THE DATASETS DIRECTLY, AS YOU CAN DO UNDER ISRDDN.
*   NEVERTHELESS, LISTAX WORKS WITHOUT ISPF, AND ISRDDN DOES NOT.
*
*)X SYNTAX:
*         LISTAX
*)O
* ------------------------------------------------------------------- *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         EJECT
LISTAX   CSECT
LISTAX   AMODE 31
LISTAX   RMODE 24
         B     BEGINN-*(,R15)      EYECATCHER
         DC    CL7'LISTAX '
         DC    C'VERSION 1.1 '
         DC    C'&SYSDATE '
         DC    C'&SYSTIME '
BEGINN   DS    0H
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R10,R15             COPY BASE.
         USING LISTAX,R10          (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R13,8(,R14)         CHAIN ...
         ST    R14,SAVE+4          ... SAVE AREAS.
         APUT  HEADTITL,L'HEADTITL PRINT HEADERS
         APUT  HEADER,L'HEADER
         APUT  HEADERU,L'HEADERU
         MVI   OUTLINE-1,X'40'     INITIALIZE OUTPUT LINE
         MVC   OUTLINE,OUTLINE-1
         SLR   R3,R3               CLEAR FOR COUNTER
TOP      LA    R1,S99RBPTR         POINT TO REQUEST BLOCK
         MVC   DDNAME(10),FILLDDN
         MVC   MEMBER(10),FILLDDN
         MVC   DSNAME(46),FILLDSN
         AH    R3,=H'1'            ADD FOR REQUEST NUMBER
         STH   R3,RELNO            PUT IT IN TEXT UNIT
SVC99    DYNALLOC                  GO DO IT
MOVES    DS    0H
         LR    R1,R4
         MVC   OUTDDN,DDNAME+2     MOVE DDNAME TO OUTPUT LINE
         CLI   DSTYPE,X'00'        NORMAL DATASET ?
         BE    MOVEDSN
         CLI   DSTYPE,X'40'        ALLOC TO TERM ?
         BNE   *+16
         MVI   OUTDSN,C'*'
         LA    R0,27               SET LINE LENGTH TO 27
         B     CHKSTAT
         MVC   OUTDSN(8),=C'NULLFILE'
         LA    R0,34               SET LINE LENGTH TO 34
         B     CHKSTAT
MOVEDSN  MVC   OUTDSN,DSNAME+2     MOVE DSNAME
         MVC   OUTMEM,MEMBER+2     MOVE MEMBER NAME
         LA    0,79                SET LINE LENGTH TO 79
CHKSTAT  DS    0H
         CLI   STATUS,X'08'        SEE IF SHR
         BNE   *+14
         MVC   OUTSTA,=C'SHR'
         B     CHKNDISP
         CLI   STATUS,X'01'        SEE IF OLD
         BNE   *+14
         MVC   OUTSTA,=C'OLD'
         B     CHKNDISP
         CLI   STATUS,X'04'        SEE IF NEW
         BNE   *+14
         MVC   OUTSTA,=C'NEW'
         B     CHKNDISP
         CLI   STATUS,X'02'        SEE IF MOD
         BNE   *+14
         MVC   OUTSTA,=C'MOD'
         B     CHKNDISP
         MVC   OUTSTA,=C'???'      NO STAT ?
CHKNDISP DS    0H
         CLI   NDISP,X'08'         SEE IF KEEP
         BNE   *+14
         MVC   OUTNDS,=C'KEEP'
         B     CHKCDISP
         CLI   NDISP,X'02'         SEE IF CATLG
         BNE   *+14
         MVC   OUTNDS,=C'CTLG'
         B     CHKCDISP
         CLI   NDISP,X'04'         SEE IF DELETE
         BNE   *+14
         MVC   OUTNDS,=C'DELE'
         B     CHKCDISP
         CLI   NDISP,X'01'         SEE IF UNCATLG
         BNE   *+14
         MVC   OUTNDS,=C'UCAT'
         B     CHKCDISP
         CLI   NDISP,X'10'         SEE IF PASS
         BNE   *+14
         MVC   OUTNDS,=C'PASS'
         B     CHKCDISP
         MVC   OUTNDS,=C'????'     NO DISP
CHKCDISP DS    0H
         CLI   CDISP,X'08'         SEE IF KEEP
         BNE   *+14
         MVC   OUTCDS,=C'KEEP'
         B     PUTCOMMA
         CLI   CDISP,X'02'         SEE IF CATLG
         BNE   *+14
         MVC   OUTCDS,=C'CTLG'
         B     PUTCOMMA
         CLI   CDISP,X'04'         SEE IF DELETE
         BNE   *+14
         MVC   OUTCDS,=C'DELE'
         B     PUTCOMMA
         CLI   CDISP,X'01'         SEE IF UNCATLG
         BNE   *+14
         MVC   OUTCDS,=C'UCAT'
         B     PUTCOMMA
         CLI   CDISP,X'10'         SEE IF PASS
         BNE   *+14
         MVC   OUTCDS,=C'PASS'
         B     PUTCOMMA
         MVC   OUTCDS,=CL4' '      NO DISP
         B     PUT1COMM            NO SECOND COMMA
PUTCOMMA DS    0H                  PUT 2 COMMAS   (E.G. NEW,KEEP,DELE)
         MVI   OUT1COM,C','
         MVI   OUT2COM,C','
         B     CHKDSORG
PUT1COMM DS    0H                  ONLY 1 COMMA   (E.G. SHR,KEEP)
         MVI   OUT1COM,C','
CHKDSORG DS    0H
         TM    DSORG,X'40'         SEE IF PS
         BZ    *+14
         MVC   OUTORG,=C'PS'
         B     PUTLINE
         TM    DSORG,X'02'         SEE IF PO
         BZ    *+14
         MVC   OUTORG,=C'PO'
         B     PUTLINE
         TM    DSORG+1,X'08'       SEE IF VSAM
         BZ    *+14
         MVC   OUTORG,=C'VS'
         B     PUTLINE
         TM    DSORG,X'20'         SEE IF DA
         BZ    *+14
         MVC   OUTORG,=C'DA'
         B     PUTLINE
         TM    DSORG,X'80'         SEE IF ISAM
         BZ    *+14
         MVC   OUTORG,=C'IS'
         B     PUTLINE
         TM    DSORG,X'10'         SEE IF CX
         BZ    *+14
         MVC   OUTORG,=C'CX'
         B     PUTLINE
         TM    DSORG,X'08'         SEE IF CQ
         BZ    *+14
         MVC   OUTORG,=C'CQ'
         B     PUTLINE
         TM    DSORG,X'04'         SEE IF MQ
         BZ    *+14
         MVC   OUTORG,=C'MQ'
         B     PUTLINE
         TM    DSORG+1,X'80'       SEE IF GS
         BZ    *+14
         MVC   OUTORG,=C'GS'
         B     PUTLINE
         TM    DSORG+1,X'40'       SEE IF TX
         BZ    *+14
         MVC   OUTORG,=C'TX'
         B     PUTLINE
         TM    DSORG+1,X'20'       SEE IF TQ
         BZ    *+14
         MVC   OUTORG,=C'TQ'
         B     PUTLINE
         TM    DSORG,X'04'         SEE IF TR
         BZ    *+14
         MVC   OUTORG,=C'TR'
         B     PUTLINE
         MVC   OUTORG,=C'**'       UNDETERMINED
PUTLINE  DS    0H
         APUT  OUTLINE,79
         MVI   OUTLINE-1,X'40'
         MVC   OUTLINE,OUTLINE-1
         TM    LASTENT,X'80'       WAS THIS LAST ENTRY
         BZ    TOP
RETURN   DS    0H
         L     R13,SAVE+4             E
         LM    R14,R12,12(R13)          X
         SR    R15,R15                    I
         BR    R14                          T
         EJECT
SAVE     DS    9D
HEADTITL DC    C'     ***  LISTAX - VERSION 1.1  *** '
HEADER   DC    C'DDNAME   DISPOSITIONS ORG  DATASET NAME               X
                               MEMBER'
HEADERU  DC    C'------   ------------ --- -------------------------   X
                               ------'
BLANK    DC    C' '
         SPACE
FILLDDN  DC    H'8',CL8' '
FILLDSN  DC    H'44',CL44' '
         SPACE
         DS    0F
S99RBPTR DC    X'80',AL3(S99RB)
         SPACE
S99RB    DS    0F
S99RBLN  DC    X'14'
S99VERB  DC    X'07'
S99FLAG1 DC    H'0'
S99ERROR DC    X'0000'
S99INFO  DC    X'0000'
S99TXTPP DC    A(S99TUPL)
S99RSVD  DC    F'0'
S99FLAG2 DC    F'0'
         SPACE
S99TUPL  DS    0F
S99TUP04 DC    A(S99TUN04)
S99TUP05 DC    A(S99TUN05)
S99TUP06 DC    A(S99TUN06)
S99TUP07 DC    A(S99TUN07)
S99TUP08 DC    A(S99TUN08)
S99TUP09 DC    A(S99TUN09)
S99TUP10 DC    A(S99TUN10)
S99TUP12 DC    A(S99TUN12)
S99TUP13 DC    A(S99TUN13)
S99TUP14 DC    A(S99TUN14)
S99TUP15 DC    X'80',AL3(S99TUN15)
         SPACE
S99TUN04 DC    H'4',H'1'
DDNAME   DC    H'8',CL8' '
S99TUN05 DC    H'5',H'1'
DSNAME   DC    H'44',CL44' '
S99TUN06 DC    H'6',H'1'
MEMBER   DC    H'8',CL8' '
S99TUN07 DC    H'7',H'1',H'1'
STATUS   DC    X'00'
S99TUN08 DC    H'8',H'1',H'1'
NDISP    DC    X'00'
S99TUN09 DC    H'9',H'1',H'1'
CDISP    DC    X'00'
S99TUN10 DC    H'10',H'1',H'2'
DSORG    DC    X'0000'
S99TUN12 DC    H'12',H'1',H'1'
ATTRIB   DC    X'00'
S99TUN13 DC    H'13',H'1',H'1'
LASTENT  DC    X'00'
S99TUN14 DC    H'14',H'1',H'1'
DSTYPE   DC    X'00'
S99TUN15 DC    H'15',H'1',H'2'
RELNO    DC    H'0'
         SPACE
         DC    C' '
OUTLINE  DS    0CL79               OUTPUT LINE
OUTDDN   DC    CL8' '
         DC    C' '
OUTSTA   DC    CL3' '
OUT1COM  DC    C','
OUTNDS   DC    CL4' '
OUT2COM  DC    C','
OUTCDS   DC    CL4' '
         DC    C' '
OUTORG   DC    CL2' '
         DC    C' '
OUTDSN   DC    CL44' '
*        DC    C' '
OUTMEM   DC    CL8' '
         SPACE
         LTORG
         YREGS
         END   LISTAX
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   DS    0H
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
