         TITLE 'DISPLAY APF AUTHORIZED LIST FROM THE SYSTEM'
*---------------------------------------------------------------------*
*       THIS COMMAND WAS CODED FROM AN IDEA TAKEN FROM THE 'NASPA'    *
*       (NATIONAL SYSTEMS PROGRAMMER ASSOCIATION) "TECHNICAL          *
*       SUPPORT" MAGAZINE. REX HOUCHINS  PUBLISHED THE BARE BONES     *
*       CODE TO DO ALL THIS FROM AN IDEA TAKEN FROM A PREVIOUS        *
*       SUGGESTION IN TECH SUPPORT. ADDED ALL THE REST TO GET IT      *
*       REENTRANT, USE DSECTS, ADD SECURITY (DON'T WANT AVERAGE       *
*       USER LOOKING AT THIS LIST), AND ALL AROUND DOCUMENT THE       *
*       CODE.                                                         *
*                                                                     *
*       NOTE, USE OF THIS ROUTINE IS LIMITED TO THOSE USERS WITH      *
*       OPERATOR AUTHORITY                                            *
*                                                                     *
*       JIM MARSHALL, CAPT, USAF (RET)                                *
*                                                                     *
* INSTALLED:  13 JUN 88                                               *
*                                                                     *
* CHANGE LOG: 10JUN91 - RUNNING IN 31BIT MODE NOW                JDM1 *
*             03JAN13 - CHECK FOR DYNAMIC APF LIST               UPD  *
*             08JAN13 - CONVERT TO PUTLINE OUTPUT                SBG  *
*                       ADD UNDERLINE FOR TITLE                       *
*---------------------------------------------------------------------*
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SP000    EQU   0                                                 JDM1
         TITLE 'DAPF -- DISPLAY AUTHORIZED LIBRARIES'
DAPF     CSECT
DAPF     AMODE 31
DAPF     RMODE ANY                                               JDM1
         SAVE  (14,12),,DAPF_&SYSDATE &SYSTIME
         LR    R12,R15
         USING DAPF,R12
         GETMAIN RU,LV=WORKSIZE,SP=SP000,LOC=BELOW               JDM1
         USING WORKAREA,R1
         ST    R13,SAVE+4
         ST    R1,8(R13)
         LR    R13,R1
         DROP  R1
         USING WORKAREA,R13
         SPACE
*-------------------------------------------------------------------*
*        NOW WE MUST SETUP PGM FOR RENTRACY
*-------------------------------------------------------------------*
         SPACE
         MVC   OUTREC(L'OUTREC),BLANKS
         MVC   FULLWORD(4),=F'0'
         MVC   NUM(2),=PL2'1'
         L     R2,CVTPTR          GET ADDR OF CVT
         USING CVTDSECT,R2        SETUP CVT BASE
         SPACE
*-------------------------------------------------------------------*
*        NOW WE DO SO CONTROL BLOCK CHAINING TO SEE IF THE USER
*        HAS TSO OPERATOR AUTHORITY.
*-------------------------------------------------------------------*
         SPACE
         L     R1,16              GET CVT POINTER
         L     R1,0(R1)           OLD/NEW POINTER
         L     R1,4(R1)           OUR TCB POINTER
         L     R15,12(R1)         OUR TIOT POINTER
         L     R1,180(R1)         JSCB POINTER TCBJSCB
         L     R1,264(R1)         PSCB POINTER JSCBPSCB
         TM    16(R1),X'80'       DO WE HAVE OPER ABILITY?
         BO    CONTINUE           YES, CONTINUE
         SPACE
*-------------------------------------------------------------------*
*        IF NOT, TELL USER OF FACT AND RETURN EARLY, OTHERWISE
*        CONTINUE PROCESSING.
*-------------------------------------------------------------------*
         SPACE
NOTAUTH  EQU   *
         MVC   OUTREC(L'LLINE),LLINE                             JDM1
         APUT  OUTREC,L'LLINE     MSG- NOT AUTH USER             JDM1
         B     EXIT               EXIT
         SPACE
*--------------------------------------------------------------------*
*        NOW WE PROCESS THE LIST
*--------------------------------------------------------------------*
         SPACE
CONTINUE EQU   *
         APUT  HEADER,L'HEADER                                   JDM1
         MVC   OUTREC(45),BLANKS
         APUT  HEADERU,L'HEADERU
         SPACE
         L     R3,X'1E4'(,R2)     CVTAUTHL (BYPASS DSECT FOR NOW)
         C     R3,=A(X'7FFFF001')
         BE    DYN1
         LTR   R4,R4
         BZ    DYN1
         MVC   FULLWORD,=XL4'0'   MOVE TO 1ST DSN
         MVC   FULLWORD+3(1),1(R3)  GET NUM OF ENTRIES
         L     R4,FULLWORD        R4 = ENTRY CT
         A     R3,F2
LOOP     EQU   *
         UNPK  OUTSEQ,NUM         LOOP ENTRY
         OI    OUTSEQ+1,X'F0'
         AP    NUM,=P'1'
         MVC   OUTVOL(6),1(R3)
         MVI   OUTDSN,C' '
         MVC   OUTDSN+1(43),OUTDSN
         MVC   FULLWORD(4),=XL4'0'
         MVC   FULLWORD+3(1),0(R3)
         L     R5,FULLWORD
         SH    R5,=H'7'
         EX    R5,MOVE
         APUT  OUTREC,L'OUTREC
         LA    R3,8(R5,R3)
         BCT   R4,LOOP
         B     EXIT
         SPACE
*--------------------------------------------------------------------*
*        PROCESS DYNAMIC LIST
*--------------------------------------------------------------------*
         SPACE
DYN1     LA    R3,=A(ANSAPFL) POINT TO A WORD CONTAINING THE LENGTH
         CSVAPF REQUEST=LIST,ANSAREA=ANSAPF,ANSLEN=(R3),MF=(E,MFLAPF)
         LTR   R15,R15
         BNZ   DYN8
         LA    R3,ANSAPF
         L     R4,APFH#REC-APFHDR(,R3)  R4 = ENTRY CT
         A     R3,APFHOFF-APFHDR(,R3)
DYN2     CP    NUM,=P'99'
         BNH   DYN3
         UNPK  OUTSEQ-1(3),NUM    UNPACK 3 DIGITS IF > 99
         B     DYN4
DYN3     UNPK  OUTSEQ,NUM         LOOP ENTRY
DYN4     OI    OUTSEQ+1,X'F0'
         AP    NUM,=P'1'
         MVC   OUTVOL(6),APFEVOLUME-APFE(R3)
         MVI   OUTDSN,C' '
         MVC   OUTDSN+1(43),OUTDSN
         SR    R5,R5
         IC    R5,APFEDSLEN-APFE(,R3)
         BCTR  R5,0
         EX    R5,MOVEDSN
         APUT  OUTREC,L'OUTREC
         AH    R3,APFELEN-APFE(,R3) POINT R3 TO NET APFE
         BCT   R4,DYN2             LOOP
         B     EXIT
DYN8     C     R0,=A(X'00000403')
         BNE   DYN9
         MVC   OUTREC(21),=C'MORE THAN 500 ENTRIES'
         APUT  OUTREC,21
         B     EXIT
DYN9     MVC   OUTREC(13),=C'CSVAPF ERROR '
         ST    R0,FULLWORD
         UNPK  OUTREC+13(9),FULLWORD(5)
         TR    OUTREC+13(8),HEXLIST-240
         APUT  OUTREC,21
         SPACE
*--------------------------------------------------------------------*
*        NOW WE CLEANUP AFTER OURSELVES AND GO HOME.
*--------------------------------------------------------------------*
         SPACE
EXIT     EQU   *
         LR    R1,R13
         L     R13,SAVE+4
         FREEMAIN RU,LV=WORKSIZE,A=(R1),SP=SP000
         RETURN (14,12),RC=0
         SPACE
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
         SPACE
F2       DC    F'2'
HEADER   DC    CL45'                DISPLAY APFLIST'
HEADERU  DC    CL45'                ------- -------'
BLANKS   DC    CL45' '
LLINE    DC    CL40'USER NOT AUTHORIZED'
HEXLIST  DC    C'0123456789ABCDEF'
         DS    0H
MOVE     MVC   OUTDSN(1),7(R3)
MOVEDSN  MVC   OUTDSN(1),APFEDSNAME-APFE(R3)
         SPACE
         LTORG
         SPACE
         DS    0F
         PRINT ON
WORKAREA DSECT
SAVE     DS    18F
NUM      DS    PL2
FULLWORD DS    F
OUTREC   DS    0CL70
         DS    CL10
OUTSEQ   DS    CL2
         DS    CL4
OUTVOL   DS    CL6
         DS    CL4
OUTDSN   DS    CL44
MFLAPF   CSVAPF MF=(L,MFL)
ANSAPF   DS    0D,(APFHDR_LEN)X,500XL(APFE_LEN)  ROOM FOR 500 RESULTS
ANSAPFL  EQU   *-ANSAPF
         DS    0D
WORKSIZE EQU   *-WORKAREA                                        JDM1
         SPACE
CVTDSECT DSECT
         CVT   DSECT=YES,LIST=YES,TSO=YES
         CSVAPFAA
         SPACE
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
