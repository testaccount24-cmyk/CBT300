         TITLE '     T S O   C O M M A N D   -   D D I S K   '
**********************************************************
*                                                        *
*           P.R.C. TSO COMMAND 'DDISK'                   *
*                                                        *
**********************************************************
         YREGS
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
DDISK    CSECT
         PRINT GEN
         SAVE  (14,12),,*
         LR    12,15
         USING DDISK,12
         LA    11,SAVE2
         ST    11,8(13)
         ST    13,4(11)
         LR    13,11
*        OPEN  (PRINT,(OUTPUT))
         L     6,16
         L     6,X'C4'(6)
*        MVC   HDR1+35(1),16(6)
*        MVC   HDR1+27(9),=CL9'MODEL 158'
*        PUT   PRINT,HDR1
         APUT  HDR1+1,23
         CALL  DATEV,(MDY,HMS)
*        PUT   PRINT,HDR5
*        PUT   PRINT,HDR3
         APUT  HDR5+1,23
         APUT  HDR3+1,31
         L     R2,16          A(CVT)
         TM    CVTDCB-CVTMAP(R2),X'80'       XA OR LATER, CVTMVSE
         BZ    UCBNOTXA                       NO, BRANCH
         SR    R2,R2               INDICATE XA
         XC    DEVWORK(100),DEVWORK
NXTXA    DC    0H'0'
         UCBSCAN COPY,WORKAREA=DEVWORK,DEVCLASS=DASD,RANGE=ALL,        X
               DEVNCHAR=DEVNCHAR,UCBAREA=DEVAREA,DYNAMIC=YES
         LTR   15,15
         BNZ   FINIS
         LA    R5,DEVAREA
         TM    3(R5),X'80'                    UCBSTAT,UCBONLI
         BZ    NXTXA                          BRANCH IF NOT ONLINE
         B     HAVEUCB
UCBNOTXA L     6,40(6)        POINTER TO UCB ADDR TABLE
NXTUCB   LH    5,0(6)         GET UCB ADDRESS
         LTR   5,5            IS THIS A HOLE IN THE UCB TABLE
         BZ    UCBHOLE        YES
         CH    5,=X'FFFF'     ANY MORE UCB'S
         BE    FINIS          NO - THAT'S ALL FOLKS
         CLI   18(5),X'20'    IS IT DIRECT ACCESS STORAGE
         BNE   UCBHOLE        NO
HAVEUCB  SR    4,4            ZERO THE REGISTER
         IC    4,19(5)        GET THE UNIT TYPE
         MH    4,=H'6'
         LA    4,UNITTYPE(4)  ADDRESS IN TABLE
         MVC   PRUNIT,0(4)    MOVE UNIT TYPE TO PRINT LINE
         CLC   PRADDR(2),13(5)
         BE    *+8
         MVI   LINE,C'0'
         MVI   PRADDR-1,C' '
         MVC   PRADDR,13(5)   MOVE UNIT ADDRESS TO PRINT LINE
         CLI   DEVNCHAR,C' '  IF UNIT ADDRESS IS 4 CHARACTERS
         BE    NOT4
         CLI   DEVNCHAR,C'0'
         BE    NOT4
         MVC   PRADDR-1(4),DEVNCHAR MOVE 4-CHARACTER UNIT ADDRESS
NOT4     DC    0H'0'
         MVC   PRSER,28(5)    MOVE VOLUME SERIAL TO PRINT LINE
         CLC   PRSER,ZEROES
         BE    UCBHOLE
         LTR   R2,R2          IF XA THEN SKIP SAVING ADDRESS FOR SORT
         BZ    FULL             AS SORT IS NOT USED ANYWAY
         SR    7,7
COMPLIST CH    7,LCT
         BNL   ADDLIST
         CH    5,LIST(7)
         BE    UCBHOLE
         LA    7,2(7)
         B     COMPLIST
ADDLIST  LH    7,LCT
         CH    7,LMAX
         BNL   FULL
         STH   5,LIST(7)
         LA    7,2(7)
         STH   7,LCT
FULL     EQU   *
*        PUT   PRINT,LINE     OUTPUT
         APUT  LINE+1,31
         MVI   LINE,C' '
UCBHOLE  LTR   2,2            IF XA
         BZ    NXTXA          GET NEXT UCB
         LA    6,2(6)         INCREMENT POINTER
         B     NXTUCB         GET NEXT UCB
FINIS    EQU   *
         B     NOSORT     FORGET THE SORT  (NOW REALLY!)    CCITSO
         MVI   LINE,C' '
*         SORT THE DISKS BY VOLUME SERIAL AND PRINT THEM
         SR    3,3
SORTLOOP LH    4,LIST(3)
         LR    5,3
INLOOP   LH    6,LIST(5)
         CLC   28(6,4),28(6)     COMPARE VOL SER
         BNP   NOSWITCH
         STH   4,LIST(5)
         STH   6,LIST(3)
         LR    4,6
NOSWITCH LA    5,2(5)
         CH    5,LCT
         BL    INLOOP
         LA    3,2(3)
         CH    3,LCT
         BL    SORTLOOP
         LA    2,2
SPACE    EQU   *
*        PUT   PRINT,HDR4
         BCT   2,SPACE
*        PUT   PRINT,HDR2
*        PUT   PRINT,HDR3
         SR    3,3
PR2LOOP  SR    4,4
         LH    5,LIST(3)
         IC    4,19(5)
         SLA   4,2
         LA    4,UNITTYPE(4)
         MVC   PRUNIT,0(4)    MOVE UNIT TYPE TO PRINT LINE
         MVC   PRADDR,13(5)   MOVE UNIT ADDRESS TO PRINT LINE
         MVC   PRSER,28(5)    MOVE VOLUME SERIAL TO PRINT LINE
*        PUT   PRINT,LINE
         LA    3,2(3)
         CH    3,LCT
         BL    PR2LOOP
NOSORT   EQU   *                                             CCITSO
*        CLOSE PRINT
         L    13,4(13)
         SR    15,15
         RETURN (14,12),T,RC=(15)
* PRINT  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,
*              RECFM=FBA,LRECL=121,BLKSIZE=968
LINE     DC    CL4' '
PRSER    DC    CL6' '
         DC    CL6' '
PRADDR   DC    CL3' '
         DC    CL6' '
PRUNIT   DC    CL6' '
BLANK    DC    CL90' '
UNITTYPE DC    CL6'    '      00
         DC    CL6'2311'      01
         DC    CL6'2301'      02
         DC    CL6'2303'      03
         DC    CL6'2302'      04
         DC    CL6'2321'      05
         DC    CL6'2305-1'    06
         DC    CL6'2305-2'    07
         DC    CL6'2314'      08
         DC    CL6'3330'      09
         DC    CL6'3340'      0A
         DC    CL6'3350'      0B
         DC    CL6'3375'      0C
         DC    CL6'333011'    0D
         DC    CL6'3380'      0E
         DC    CL6'3390'      0F
HDR1     DC    CL121'1  DIRECT ACCESS VOLUMES - MACHINE '
HDR2     DC    CL121'1  ALPHABETICAL LISTING'
HDR3     DC    CL121'0  VOL SER     ADDR      UNIT'
HDR4     DC    CL121'0'
         DS    0F
HDR5     DC    CL4' '
MDY      DS    CL8
         DC    CL4' '
HMS      DS    CL8
         DC    CL100' '
DEVAREA  DC    0D'0',12F'0'
DEVWORK  DC    0D'0',25F'0'
DEVNCHAR DC    CL4' '
ZEROES   DC    2F'0'
LCT      DC    H'0'
LMAX     DC    H'2000'
LIST     DS    1000H
SAVE2    DC    18F'0'
         DS    H
         LTORG
       TITLE   'DATEV - A ROUTINE TO GET THE DATE AND TIME'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*       THIS SUBROUTINE OUTPUTS DATE AND TIME OF DAY WHEN             *
*       CALLED BY THE STATEMENT                                       *
*                                                                     *
*            DATEV (MDY,HMS)                                          *
*                                                                     *
*            MDY - THE FIRST OUTPUT ARGUMENT CONTAINING DATE IN       *
*                   MM/DD/YY FORMAT, WHERE                            *
*                        MM - MONTH OF THE YEAR (2 DECIMAL DIGITS)    *
*                        DD - DAY OF THE MONTH                        *
*                        YY - LAST TWO DIGITS OF THE YEAR             *
*                                                                     *
*            HMS - THE SECOND OUTPUT ARGUMENT CONTAINING TIME IN      *
*                   HH.MM.SS FORMAT, WHERE                            *
*                        HH - HOUR OF THE DAY (2 DECIMAL DIGITS)      *
*                        MM - MINUTES                                 *
*                        SS - SECONDS                                 *
*                                                                     *
*       NOTE - ARGUMENTS MUST EACH BE ABLE TO CONTAIN 8 CHARACTERS    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE  5
DATEV    CSECT
         USING  *,15
         SAVE   (14,12)
       LR    4,1                       ARGLIST ADDRS NOW IN R4
         LA     12,SAVE
         ST     13,4(12)
         ST     12,8(13)
         LR     13,12
         LR     12,15
         DROP   15
         USING  DATEV,12
         TIME  DEC                      MACRO-INST GIVES DATE IN REG1,
*                                       TIME IN REGO FORMATTED 00YYDDDC
*                                       AND HHMMSSTH RESPECTIVELY
         LM     2,3,0(4)                SAVE ARGS
         ST    0,TIMET
         OI    TIMET+3,X'0F'            INSERT DECIMAL SIGN
         MVC   WKAREA(9),PTTRN          SET UP FOR EDITING
         ED    WKAREA(9),TIMET
         MVC   0(8,3),WKAREA+1          SEND TIME TO CALLER
         ST    1,TIMET
         MVO   TEMP,TIMET+1(1)          PREPARE FOR CONVERSION
         OI    TEMP+7,X'0F'             INSERT SIGN
         UNPK  DATEN+6(2),TEMP+6(2)     FORMAT YY IN DATEN
         CVB    9,TEMP                  CONVERT YY TO BINARY
         STC    9,YEAR
         TM    YEAR,X'03'               LEAP YEAR
         BC      5,*+10                 NO
         MVC   TABLE+4,=H'29'           MODIFY TABLE
         MVC   TEMP,=D'0'               ZERO TEMP
         MVC   TEMP+6(2),TIMET+2        PREPARE TO CONVERT DDD
         CVB   11,TEMP                  CONVERT DDD TO BINARY
         LA    10,2                     INITIALIZE INDEX REG OF TABLE
LOOPDATE SH    11,TABLE(10)             SUBTRACT DAYS OF MONTH(INDEXED)
         BC    12,CHECK                 RESULT ZRO OR NEGATIVE
         LA    10,2(0,10)               INCREMENT INDEX BY 2
         CH    10,=H'26'                ERROR
         BC    12,LOOPDATE              NO
         B     DATERROR
CHECK    AH    11,TABLE(10)
         CVD   11,TEMP                  DD NOW IN PACKED DECIMAL
         OI    TEMP+7,X'0F'             INSERT SIGN
         UNPK  DATEN+3(2),TEMP+6(2)     DD IN BCD - PLACE IN DATEN
         SRA   10,1                     MONTH NOW IN REG 10
         CVD   10,TEMP                  CONVERT MONTH TO PACKED DECIMAL
         OI    TEMP+7,X'0F'             INSERT SIGN
         UNPK    DATEN(2),TEMP+6(2)     MM IN BCD - PLACE IN DATEN
         MVC   0(8,2),DATEN             SEND DATE TO CALLER
         B     RESTORE
DATERROR MVC   DATEN(8),=C'ER/R0/R '
RESTORE  L      13,4(13)
         MVI   12(13),X'FF'
         RETURN (14,12)
         LTORG
*
TEMP     DS    D
TIMET    DS    F
TABLE    DS    H
         DC    H'31'
         DC    H'28'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
SAVE     DS     18F
WKAREA   DS    CL9
PTTRN    DC    X'4021214B21214B2121'
DATEN    DC    C'  /  /  '
         DS     C
YEAR     DS    C
*        CVT   DSECT=YES
CVTPTR   EQU   16
CVT      DSECT
CVTMAP   EQU   *
         ORG   CVT+116
CVTDCB   DS    XL1
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
