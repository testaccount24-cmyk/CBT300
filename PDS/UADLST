         TITLE   'U A D L I S T'
*--------------------------------------------------------------------*
*
*        U A D L I S T
*
*        UADLST IS DESIGNED TO READ SYS1.UADS AND PRINT THE
*        FOLLOWING:
*        USERID, PASSWORD, ACCT INFO, LOGON PROCS, UNIT, PCF DATA,
*        AND ATTRIBUTES SUCH AS OPER, ACCT, JCL, MOUNT, AND CONS.
*
*        UADLST HANDLES 6 OR 7 CHARACTER USERIDS
*        UADLST HANDLES MULTIPLE LOGON PROCS
*        UADLST DOES PRINT THE PASSWORD
*
*        WRITTEN BY CAPT PAUL E. SCHAFER
*        AIR FORCE DATA SERVICES CENTER, PENTAGON, WASHINGTON, D.C.
*
*        LAST UPDATE BY AUTHOR  APRIL 1982 TO DOCUMENT AND ADD
*        CODE TO PRINT ATTRIBUTES.
*
*        UPDATED BY ME, JIM MARSHALL, AUGUST 1993.  DID A MAJOR
*        REWRITE ON PREMISE THERE MAY BE MULTIPLE PASSWORDS,
*        MULTIPLE ACCOUNT CODES, AND MULTIPLE LOGON PROCS. PLUS
*        I CHANGED THE WAY TO HOW END-OF-CHAINS ARE FOUND.  WITHOUT
*        PAUL'S MODEL OF HOW TO BEGIN, I WOULD HAVE PROBABLY TAKEN
*        A DIFFERENT APPROACH TO GETTING A LIST OF UADS.
*
*        UPDATED JANUARY 2013 TO HANDLE ABSENT PASSWORD, ABSENT ACCOUNT
*        UPDATED JANUARY 2013 TO HANDLE VERY SHORT USERIDS.
*
*        CONVERTED TO A TSO COMMAND.  MARCH 28, 2013.
*
*        YOU CAN CONTROL WHICH COPY OF UADS YOU WANT WITH
*        THE FOLLOWING ALLOCATION:
*
*        ALLOC F(UADS) DA('SYS1.UADS') SH REUSE
*
*        THE FOLLOWING ARE THE UADS POINTER ARRANGEMENTS AS CAN BE
*        FOUND IN GY28-6771-1, IBM S/360 OS TSO COMMAND PROCESSOR
*        PLM  VOLUME 1  ACCOUNT IF YOU CARE TO DIG.
*
*          HEADER BLOCK
*     *----------------------------------*
* + 4 * USERID                           *
* +16 * USER ATTRIBUTES (SYS)            *
* +18 * USER ATTRIBUTES (INSTALLATION)   *
* +24 * OFFSET FROM ANCHOR TO PASSWD BLK *
*     *----------------------------------*
*
*         PASSWORD OFFSET BLOCK
*     *--------------------------------------*
*  +0 * OFFSET TO NEXT PASSWORD OFFSET BLOCK *
*  +4 * PTR ACCOUNT NUMBER OFFSET BLOCK      *
*  +8 * PTR PASSWORD DATA BLOCK              *
*     *--------------------------------------*
*
*                              PASSWORD DATA BLOCK
*                           *------------------------*
*                        +0 *  # OF REF              *
*                        +4 *  PASSWORD  (8 BYTES)   *
*                           *------------------------*
*
*         ACCOUNT OFFSET BLOCK
*     *----------------------------------*
*  +0 * OFFSET TO NEXT ACCT OFFSET BLOCK *
*  +4 * OFFSET TO PROC NAME OFFSET BLOCK *
*  +8 * OFFSET TO ACCT DATA BLOCK        *
*     *----------------------------------*
*
*                            ACCOUNT NUMBER DATA BLK
*                           *-----------------------*
*                        +0 * # OF REF              *
*                       +44 * LENGTH OF ACCOUNT #   *
*                       +45 * ACCOUNT NUMBER        *
*                           *-----------------------*
*
*     PROCEDURE NAME OFFSET BLOCK
*     *--------------------------------*
*  +0 * OFFSET TO NEXT PROC OFFSET BLK *
*  +8 * OFFSET TO PROC DATA BLOCK      *
*     *--------------------------------*
*
*                              PROCEDURE DATA BLOCK
*                           *----------------------------*
*                        +0 * # OF REF                   *
*                        +4 * LOGON PROC NAME (8 BYTES)  *
*                       +16 * UNIT NAME (8 BYTES)        *
*                           *----------------------------*
*
*------------------------------------------------------------------*
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         SPACE
R0       EQU   0             WORK REGISTER
R1       EQU   1             WORK REGISTER
R2       EQU   2             ADDR: DSECT, ANCHOR ADDR OF ENTRY
R3       EQU   3             ADDR: DSECT, CURRENT PASSWD OFFSET BLK
R4       EQU   4             ADDR: DSECT, CURRENT ACCT OFFSET BLK
R5       EQU   5             ADDR: DSECT, CURRENT PROC OFFSET BLK
R6       EQU   6             ADDR: DSECT, CURRENT PROC DATA BLK
R7       EQU   7             DIRECTORY SEARCHING
R8       EQU   8             DIRECTORY SEARCHING
R9       EQU   9             DIRECTORY SEARCHING
R10      EQU   10            ADDR: DCB DSECT
R11      EQU   11            AVAILABLE
R12      EQU   12            BASE REGISTER
R13      EQU   13            POINTER MY SAVE AREA
R14      EQU   14
R15      EQU   15            WORK REGISTER
SP000    EQU   0
         SPACE
UADLST   AMODE 24
UADLST   RMODE 24
UADLST   CSECT
         PRINT ON,GEN
         SPACE
         SAVE  (14,12),,UADLST_&SYSDATE._&SYSTIME
         LR    R12,R15
         USING UADLST,R12         .
         ST    R13,SAVE+4          .    SAVE LOGIC
         LA    R8,SAVE            .
         ST    R8,8(R13)         .
         LR    R13,R8           .
         SPACE
         LA    R10,UADSPO
         USING IHADCB,R10
         SPACE
*------------------------------------------------------------------*
*        O P E N   D A T A   S E T S
*------------------------------------------------------------------*
         SPACE
         OPEN  (UADSPS,,UADSPO)
         SPACE
         TM    UADSPS+48,X'10'    DCBOFLGS,DCBOFOPN               .NEW.
         BNO   NOUADS                                             .NEW.
         TM    UADSPO+48,X'10'    DCBOFLGS,DCBOFOPN               .NEW.
         BNO   NOUADS                                             .NEW.
*        TM    LISTDCB+48,X'10'   DCBOFLGS,DCBOFOPN               .NEW.
*        BNO   EOJ                                                .NEW.
         SPACE
         LH    R0,DCBBLKSI        LOAD UADS BLOCKSIZE
         STH   R0,BLKSIZE         SAVE THE GOTTEN LENGTH
         DROP  R10
         GETMAIN RU,LV=(0),SP=SP000,LOC=BELOW
         LR    R2,R1              SAVE ADDR OF STORAGE AREA
         USING DHED,R2            ADDRESSABULITY TO HEADER BLK
         SPACE
*------------------------------------------------------------------*
*        R E A D   T H E   D I R E C T O R Y
*------------------------------------------------------------------*
         SPACE
READDIR  DS    0H
         READ  DECB,SF,UADSPS,DIR,256
         CHECK DECB
         LA    R8,DIR              PT TO DIRECTORY
         LH    R7,0(R8)            LENGTH OF DIRECTORY USED
         BCTR  R7,0                SUBTRACT 1
         BCTR  R7,0                SUBTRACT 1 MORE FOR REAL LENGTH
         LA    R8,2(R8)            POINT TO A REAL PART OF DIR
         XR    R9,R9
         SPACE
DIRLOOP  DS    0H
         CLC   0(4,R8),=XL8'FFFFFFFFFFFFFFFF'   END OF DIRECTORY?
         BE    EOJ
         MVC   TTRC(4),8(R8)       SAVE TTR OF MEMBER
         MVI   TTRC+3,X'00'
         POINT UADSPO,TTRC
         SPACE
*------------------------------------------------------------------*
*        LOOP1:  USERID,  PASSWORD,  ACCOUNT NUMBER,  LOGON PROC.
*        R E A D   T H E   M E M B E R
*------------------------------------------------------------------*
         SPACE
         READ  PDSECB,SF,UADSPO,(2)
         CHECK PDSECB
         SPACE
         LA    R15,7(,R8)          POINT TO 8TH CHAR OF MEMBER    .NE4.
MEMBLP   CLI   0(R15),C' '         TRAILING BLANK?                .NE4.
         BNE   MEMBLC              NO, FOUND LAST CHAR            .NE4.
         BCT   R15,MEMBLP          POINT TO PRECEDING AND LOOP    .NE4.
*              NOTE - THE BCT WILL ALWAYS BRANCH                  .NE4.
MEMBLC   CLI   0(R15),C'0'         IS LAST CHAR '0'?              .NE4
         BH    CONTDIR             IGNORE IF 1 THRU 9             .NE4
         BL    INVALIM             ISSUE MESSAGE IF LESS THAN 0   .NE4
         LR    R15,R2              SAVE R2 ACROSS TRT             .NE4
         TRT   UADSUSER,ALPHANUM   CHECK USER NAME FOR VALIDITY   .NE4.
         LR    R2,R15              RESTORE R2                     .NE4.
         BNZ   INVALID             BRANCH IF TRT FOUND BAD CHAR   .NE4.
         CLI   UADSBN01,0          CHECK RESERVED FLAGS           .NE4.
         BNE   INVALID                                            .NE4.
         CLI   UADSUSER+07,C'1'    8TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+07,C' '    8TH CHAR OF MEMBER END IN ' '?
         BNE   CONT7
         SPACE
         CLI   UADSUSER+06,C'1'    7TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+06,C' '    7TH CHAR OF MEMBER END IN ' '?
         BNE   CONT6
         SPACE
         CLI   UADSUSER+5,C'1'     6TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+5,C' '     6TH CHAR OF MEMBER END IN ' '?
         BNE   CONT5
         SPACE
         CLI   UADSUSER+4,C'1'     5TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+4,C' '     5TH CHAR OF MEMBER END IN ' '?
         BNE   CONT4
         SPACE
         CLI   UADSUSER+3,C'1'     4TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+3,C' '     4TH CHAR OF MEMBER END IN ' '?
         BNE   CONT3
         SPACE
         CLI   UADSUSER+2,C'1'     3RD CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+2,C' '     3RD CHAR OF MEMBER END IN ' '?
         BNE   CONT2
         SPACE
         CLI   UADSUSER+1,C'1'     2ND CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   UADSUSER+1,C' '     2ND CHAR OF MEMBER END IN ' '?
         BNE   CONT1
         SPACE
         B     CONT1               ASSUME 1 CHAR ID, CRAZY BUT YOU'VE
*                                  ALREADY TESTED THE POSSIBILITIES.
         SPACE
INVALIM  MVC   OUTRECD(80),HEX40   BLANK OUT ENTIRE LINE          .NE4.
         MVC   OUTRECD+10(28),=C'NOT A VALID UADS MEMBER NAME'    .NE4.
         B     INVALIP                                            .NE4.
INVALID  MVC   OUTRECD(80),HEX40   BLANK OUT ENTIRE LINE          .NE4.
         MVC   OUTRECD+10(23),=C'NOT A VALID UADS RECORD'         .NE4.
INVALIP  MVC   USID(8),0(R8)       COPY MEMBER NAME               .NE4.
*        PUT   LISTDCB,OUTRECD     PUT OUT RECORD NOW             .NE4.
         APUT  OUTRECD,80
         B     CONTDIR                                            .NE4.
         SPACE
CONT7    DS    0H
         LA    R15,7               TSO ID IS 7 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT6    DS    0H
         LA    R15,6               TSO ID IS 6 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT5    DS    0H
         LA    R15,5               TSO ID IS 5 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT4    DS    0H
         LA    R15,4               TSO ID IS 4 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT3    DS    0H
         LA    R15,3               TSO ID IS 3 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT2    DS    0H
         LA    R15,2               TSO ID IS 2 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT1    DS    0H
         LA    R15,1               TSO ID IS 1 CHARACTERS LONG
         ST    R15,IDLEN           SAVE IT FOR MOVE
         B     CONT                MOVE RIGHT ALONG
CONT     DS    0H
         MVC   ACCT#(9),HEX40      BLANK OUT ACCT FIELD
         SPACE
*------------------------------------------------------------------*
*        S T A R T   B Y   G E T T I N G   U S E R I D
*------------------------------------------------------------------*
         SPACE
         MVC   USID(8),HEX40       BLANK OUT TSO ID FIELD
         L     R15,IDLEN           GET THE LENGTH
         BCTR  R15,0               SUB 1 FOR EXECUTE
         EX    R15,MOVEID          SAVE THE USERID
         EX    R15,COMPID          COMPARE USERID TO MEMBER       .NE3.
         BNE   USERMIS             BRANCH IF DIFFERENT            .NE3.
         LA    R14,1(R15,R8)       POINT TO TRAILING '0' IN MEMBR .NE3.
         CLI   0(R14),C'0'         DOES MEMBER = USER + '0'?      .NE3.
         BNE   USERMIS             NO, BRANCH                     .NE3.
         CLI   IDLEN+3,7           IS THERE ROOM FOR A BLANK?     .NE3.
         BE    USEROK              NO, BRANCH                     .NE3.
         CLI   1(R14),C' '         IS THERE A BLANK AFTER '0'?    .NE3.
         BE    USEROK              YES, BRANCH                    .NE3.
USERMIS  MVI   USID+8,C'+'         INDICATE MISMATCH              .NE3.
         MVC   USID(8),0(R8)       REPLACE USID WITH MEMBER       .NE3
         LA    R15,USID+7          POINT TO 8TH CHAR              .NE3.
USERLP   CLI   0(R15),C' '         TRAILING BLANK?                .NE3.
         BNE   USERLC              NO, FOUND LAST CHAR            .NE3.
         BCT   R15,USERLP          POINT TO PRECEDING AND LOOP    .NE3.
*              NOTE - THE BCT WILL ALWAYS BRANCH                  .NE3.
USERLC   CLI   0(R15),C'0'         IS LAST CHAR '0'?              .NE3
         BE    USEREZ              YES, GO ERASE THE '0'          .NE3
         MVI   USID+8,C'-'         INDICATE MEMBER HAS NO '0'     .NE3
         B     USEROK                                             .NE3
USEREZ   MVI   0(R15),C' '         ERASE THE '0'                  .NE3
USEROK   EQU   *                                                  .NE3
         SPACE
*------------------------------------------------------------------*
*        U S E R   A T T R I B U T E S   (SYS)
*------------------------------------------------------------------*
ATTRIBS  DS    0H
         MVC   AUTHB(4),UADSATTR   SAVE AUTHORIZATIONS
         TM    UADSATTR,USATR00    OPER?
         BNO   TESTACCT
         MVC   OPER(4),=CL4'OPER'
TESTACCT DS    0H
         TM    UADSATTR,USATR01    ACCT?
         BNO   TESTJCL
         MVC   ACCOUNT(4),=CL4'ACCT'
TESTJCL  DS    0H
         TM    UADSATTR,USATR02    JCL?
         BNO   TESTMOUN
         MVC   JCL(3),=CL3'JCL'
TESTMOUN DS    0H
         TM    UADSATTR,USATR03       MOUNT?
         BNO   TESTCONS
         MVC   MOUNT(5),=CL5'MOUNT'
TESTCONS DS    0H
         TM    UADSATTR,USATR06       CONSOLE?
         BNO   DOPCF
         MVC   CONSOLE(4),=CL4'CONS'
         SPACE
*------------------------------------------------------------------*
*        U S E R   A T T R I B U T E S   (INSTALLATION)
*        P R O C E S S   P C F   D A T A
*------------------------------------------------------------------*
         SPACE
DOPCF    DS    0H
         MVC   COMMON(4),=C'0000'   RESET THE ENTRY
         MVN   DATA(1),18(R2)     .
         PACK  18(1,R2),18(1,R2)   .
         MVN   COMMON(1),18(R2)     .  FOR PCF DATA
         MVN   VOL2(1),19(R2)       .
         PACK  19(1,R2),19(1,R2)   .
         MVN   VOL1(1),19(R2)     .
         SPACE
*------------------------------------------------------------------*
*        LOCATE AND RETRIEVE PASSWORD FROM ITS CHAIN
*------------------------------------------------------------------*
         SPACE
         L     R1,UADSPWD1         OFFSET TO PSWD OFFSET BLOCK
         CH    R1,BLKSIZE                                         .NE2.
         BL    OKPWD1                                             .NE2.
         CVD   R1,DOUBLE                                          .NE2.
         OI    DOUBLE+7,X'0F'                                     .NE2.
         MVC   PASSWORD(8),=C'(+NNNNN)'                           .NE2.
         UNPK  PASSWORD+2(5),DOUBLE+5(3)                          .NE2.
         LH    R1,UADSBLNG  GET ORIGINAL BLOCK SIZE               .NE2.
         CVD   R1,DOUBLE                                          .NE2.
         OI    DOUBLE+7,X'0F'                                     .NE2.
         MVC   ACCT#(8),=C'(*NNNNN)'                              .NE2.
         UNPK  ACCT#+2(5),DOUBLE+5(3)                             .NE2.
         LH    R1,BLKSIZE   GET CURRENT BLOCK SIZE                .NE2.
         CVD   R1,DOUBLE                                          .NE2.
         OI    DOUBLE+7,X'0F'                                     .NE2.
         MVC   PROC(8),=C'(=NNNNN)'                               .NE2.
         UNPK  PROC+2(5),DOUBLE+5(3)                              .NE2.
*        PUT   LISTDCB,OUTRECD     PUT OUT RECORD NOW             .NE2.
         APUT  OUTRECD,80
         B     CONTDIR                                            .NE2.
OKPWD1   DS    0H                                                 .NE2.
         LR    R3,R2               SET UP FOR ADDITION
         AR    R3,R1               GET ADDR OF PW OFFSET BLK
         USING DPOB,R3
         SPACE
PW       DS    0H
         L     R1,UADSPDAT         GET OFFSET OF PASSWORD
         LTR   R1,R1                                              .NEW.
         BNZ   PW2                                                .NEW.
         MVC   PASSWORD(8),=CL8'(*)'                              .NEW.
         B     PW3                                                .NEW.
PW2      DS    0H                                                 .NEW.
         AR    R1,R2               COMPUTE FROM ANCHOR
         USING DPOBD,R1            ADDRESSABILITY TO PW DATA BLK
         MVC   PASSWORD(8),UADSPPWD   MOVE IT INTO THE PRINT LINE
         DROP  R1
PW3      DS    0H                                                 .NEW.
         SPACE
*------------------------------------------------------------------*
*        LOCATE AND RETRIEVE ACCOUNT NUMBER FROM ITS CHAIN
*------------------------------------------------------------------*
         SPACE
         L     R4,UADSPSUB         GET OFFSET TO ACCT OFFSET BLK
         AR    R4,R2               COMPUTE ADDR FROM ANCHOR
         USING DNOB,R4             ADDRESSABILITY TO ACCT OFFSET BLK
         SPACE
ACCT     DS    0H
         L     R1,UADSADAT         GET OFFSET TO ACCT DATA BLK
         AR    R1,R2               COMPUTE ADDR FROM ANCHOR
         USING DNOBD,R1            ADDRESSABILITY TO ACCT DATA BLK
         MVC   ACCT#(8),HEX40      BLANK OUT FIELD FIRST
         L     R15,UADSALEN        GET LENGTH ACCT # - IN LEFT BYTE
         SRL   R15,24              SHIFT OVER 3 BYTES
         LTR   R15,R15                                            .NEW.
         BNZ   AC2                                                .NEW.
         MVC   ACCT#(3),=CL8'(*)'                                 .NEW.
         B     ACCTC                                              .NEW.
AC2      DS    0H                                                 .NEW.
         BCTR  R15,0               SUB 1 PRIOR TO EXECUTE
         EX    R15,MOVE            MOVE IN ACCOUNT NUMBER
         B     ACCTC
         SPACE
MOVE     MVC   ACCT#(*-*),UADSANUM   MOVE ACCOUNT FIELD
         DROP  R1
         SPACE
ACCTC    DS    0H
         L     R5,UADSASUB         GET OFFSET TO PROC NAME OFFSET BLK
         AR    R5,R2
         USING DROB,R5             ADDRESSABILITY TO PROC OFFSET BLK
         SPACE
NEXTPROC DS    0H
         L     R6,UADSRDAT         GET OFFSET TO PROC DATA BLK
         AR    R6,R2               COMPUTE ADDR FROM ANCHOR
         USING DROBD,R6            ADDRESSABILITY TO PROC DATA BLK
         MVC   PROC(8),UADSRNAM    SAVE LOGON PROC
         MVC   UNIT(8),UADSUNAM    SAVE UNIT NAME FOR THIS PROC
         SPACE
*        PUT   LISTDCB,OUTRECD     PUT OUT RECORD NOW
         APUT  OUTRECD,80
         SPACE
         TM    UADSRFLG,FLGR01     LAST OFFSET, PROC OFFSET BLK?
         BO    NEXTACCT            BUMP UP ONE LEVEL
         L     R6,UADSRNEX-1       GET OFFSET NEXT PROC OFFSET BLK
         AR    R6,R2               COMPUTE ADDR FROM ANCHOR
         LR    R5,R6               REENTER LOOP FOR NEXT PROC
         B     NEXTPROC
         SPACE
*------------------------------------------------------------------*
*        BUMP UP 1 LEVEL IN LOOP TO FIND NEXT ACCT NUMBER
*------------------------------------------------------------------*
         SPACE
NEXTACCT DS    0H
         TM    UADSAFLG,AFLG01     LAST OFFSET?
         BO    NEXTPW              BUMP UP NEXT LEVEL
         SPACE
         L     R1,UADSANEX-1
         AR    R1,R2               COMPUTE ADDR FROM ANCHOR
         LR    R4,R1               REENTER LOOP FOR NEXT PW
         B     ACCT
         SPACE
*------------------------------------------------------------------*
*        BUMP UP 1 LEVEL IN LOOP TO FIND NEXT PASSWORD
*------------------------------------------------------------------*
         SPACE
NEXTPW   DS    0H
         TM    UADSPFLG,PFLG01     LAST OFFSET?
         BO    CONTDIR             GET NEXT ENTRY IN DIR
         L     R1,UADSPNEX-1       GET OFFSET TO NEXT PW OFFSET BLK
         AR    R1,R2               COMPUTE ADDR FROM ANCHOR
         LR    R3,R1               REENTER LOOP FOR NEXT PW
         B     PW
         SPACE
*------------------------------------------------------------------*
*        CONTINUE DIRECTORY SEARCH
*------------------------------------------------------------------*
         SPACE
CONTDIR  DS    0H
         MVC   OUTRECD(80),HEX40   BLANK OUT ENTIRE LINE
         IC    R9,11(R8)           PICK UP INDICATORS
         LA    R8,12(R8)           POINT TO USER DATA
         SH    R7,=H'12'           DECREMENT AMT USABLE DIR LEFT
         SLL   R9,27               KILL HI ORDER BIT OF IND
         SRL   R9,26               MOVE BACK AND *2 FOR HALFWORDS
         AR    R8,R9               UPDATE DIRECTORY POINTER
         SR    R7,R9               DECREMENT AMT LEFT COUNTER
         BNP   READDIR
         B     DIRLOOP
         SPACE
*------------------------------------------------------------------*
*        LETS CLOSE UP AND GO HOME
*------------------------------------------------------------------*
         SPACE
EOJ      DS    0H
         CLOSE (UADSPS,,UADSPO)
         LR    R1,R2               GET THE ADDRESS
         LH    R0,BLKSIZE          GET THE LENGTH
         FREEMAIN RU,LV=(0),A=(R1),SP=SP000
         L     R13,SAVE+4
         RETURN (14,12),RC=0
         SPACE
*------------------------------------------------------------------*
*        UADS DD WAS NOT PRE-ALLOCATED
*------------------------------------------------------------------*
NOUADS   DS    0H
         APUT  NOUAMSGN,L'NOUAMSGN
         APUT  NOUAMSG,L'NOUAMSG
         B     EOJ
NOUAMSGN DC    C'  YOU NEED TO ALLOCATE DD NAME UADS:   '
NOUAMSG  DC    C'ALLOC F(UADS) DA(''SYS1.UADS'') SH REUSE '
*------------------------------------------------------------------*
*        S Y N A D   E X I T
*------------------------------------------------------------------*
         SPACE
ERROREND DS    0H
         LA    R15,2008
         ABEND (15),DUMP
         SPACE
MOVEID   MVC   USID(*-*),UADSUSER  MOVE USER ID
COMPID   CLC   USID(*-*),0(R8)     COMPARE USER ID TO MEMBER      .NE2.
         EJECT
*------------------------------------------------------------------*
*        S T O R A G E   A N D   C O N S T A N T S
*------------------------------------------------------------------*
IDLEN    DS    F                   USER ID LENGTH
TTRC     DS    F
SAVE     DS    18F                 SAVE AREA
DIR      DS    0D,256X
BLKSIZE  DS    H                   SYS1.UADS BLOCK SIZE
HEX40    DC    CL80' '             BLANKS
AUTHB    DS    F                   BITS FOR AUTHORIZATIONS
DOUBLE   DS    D                                                  .NE2.
         SPACE
OUTRECD  DS    0CL80               OUTPUT RECORD
USID     DC    CL7' '              01-07
         DC    CL3' '              08-10
PASSWORD DC    CL8' '              11-18
         DC    CL2' '              19-20
ACCT#    DC    CL8' '              21-28
         DC    CL2' '              29-30
PROC     DC    CL8' '              31-38
         DC    CL2' '              39-40
UNIT     DC    CL8' '              41-48
         DC    CL2' '              49-50
COMMON   DC    B'11110000'         51
DATA     DC    B'11110000'         52
VOL1     DC    B'11110000'         53
VOL2     DC    B'11110000'         54
         DC    CL1' '              55
OPER     DC    CL4' '              56-59
         DC    CL1' '              60
ACCOUNT  DC    CL4' '              61-64
         DC    CL1' '              65
JCL      DC    CL3' '              66-68
         DC    CL1' '              69
MOUNT    DC    CL5' '              70-74
         DC    CL1' '              75
CONSOLE  DC    CL4' '              76-79
         DC    CL1' '              80
         SPACE
*------------------------------------------------------------------*
*        D C B   D E F I N I T I O N S
*------------------------------------------------------------------*
         SPACE
UADSPS   DCB   MACRF=R,DSORG=PS,DDNAME=UADS,EODAD=EOJ,RECFM=U
         SPACE
UADSPO   DCB   MACRF=R,DSORG=PO,DDNAME=UADS,SYNAD=ERROREND
         SPACE
         LTORG
ALPHANUM DC    0D'0'                                              .NE4.
         DC    64X'01',X'00'    BLANK AT X'40'                    .NE4.
         DC    26X'01',X'00'    41 TO 5A, THEN 5B IS $            .NE4.
         DC    31X'01',2X'00'   5C TO 7A, THEN 7B AND 7C, # AND @ .NE4.
         DC    68X'01'          7D TO C0                          .NE4.
         DC    9X'00',7X'01',9X'00',8X'01',8X'00',6X'01' A THRU Z .NE4.
         DC    10X'00',6X'01'   0 THRU 9                          .NE4.
ALPHALEN EQU   *-ALPHANUM       SHOULD BE 256                     .NE4.
         SPACE
         DCBD  DSORG=PO,DEVD=DA
         SPACE
         EJECT
         PRINT OFF
*          %GOTO  UADGO;
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       I K J E F U A D
*                UADS STRUCTURE MAPPING MACR0
*
*    USE OF THE COMPILE VARIABLES MAKES POSSIBLE THE SELECTIVE
*    INCLUSION OF THE INDIVIDUAL AREAS OF MAPPING
*
* STATUS -- CHANGE LEVEL --   02-000               12-15-1972
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*
*    ERRORS IN THIS MACRO HAVE BEEN FIXED BY:
*       BILL GODFREY, PLANNING RESEARCH CORPORATION
*       PRC COMPUTER CENTER INC, MCLEAN VA.
*       JANUARY 30 1976 & MAY 6 1981
*    THE ERRORS FIXED:
*       (1) THE 'AIF' STATEMENTS DID NOT HAVE THE
*           FIRST VARIABLE NAME IN APOSTROPHES. (APAR # Z07502).
*           EXAMPLE     AIF (&ALL EQ 'ALL').HDR1
*       (2) IN THE HEADER BLOCK, THE FIELD 'UADSUSER'
*           WAS DEFINED AS 0CL8, WHICH CAUSED THE SUBSEQUENT
*           FIELDS TO BE DEFINED WITH IMPROPER OFFSETS.
*           IT IS NOW CHANGED FROM 0CL8 TO CL8 TO AGREE
*           WITH THE PLS CODE.  (APAR # OZ35503).
*       (3) IN THE ACCOUNT NUMBER DATA BLOCK, THE TWO
*           COMMENT CARDS FOLLOWING THE CARD DEFINING THE
*           FIELD 'UADSANUM' DID NOT HAVE AN ASTERISK IN
*           COLUMN 1, THUS CAUSING ASSEMBLY ERROR
*           MSG IFO054 INVALID OPERATION CODE.
*       (4) THE SETC STATEMENT - THERE IS ONLY ONE - WAS FLAGGED
*           WITH ASSEMBLY MSG IFO031 NAME INCONSISTENT WITH TYPE.
*           (OR ASSEMBLER H MSG IEV124 ILLEGAL USE OF PARAMETER).
*           IT IS ONLY EXECUTED IF OPERANDS ARE NOT PROPERLY
*           SPECIFIED ANYWAY. IT IS COMMENTED OUT. (APAR # OZ35503).
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*%UADGO:     ;
*        %GOTO ACTMC1;                                               /*
         MACRO
         IKJEFUAD  &DSPL,&ALL,&HDR,&POB,&AOB,&ROB,&PDB,&ADB,&RDB,      S
               &FSQ,&GNL
         SPACE 1
         AIF   ('&ALL' EQ 'ALL').HDR1   CHK TO DO ALL
         AIF   ('&HDR' EQ 'HDR').HDR1   CHK TO DO HEADER BLOCK
         AIF   ('&GNL' EQ 'GNL').GOB1   CHK TO DO GENERAL OFFSET
         AIF   ('&POB' EQ 'POB').POB1   CHK TO DO PASSWD OFFSET
         AIF   ('&AOB' EQ 'AOB').AOB1   CHK TO DO ACCTNM OFFSET
         AIF   ('&ROB' EQ 'ROB').ROB1   CHK TO DO PROCNAME OFFSET
         AIF   ('&PDB' EQ 'PDB').PDB1   CHK TO DO PASSWD DATA
         AIF   ('&ADB' EQ 'ADB').ADB1   CHK TO DO ACCTNM DATA
         AIF   ('&RDB' EQ 'RDB').RDB1   CHK TO DO PROCNAME DATA
         AIF   ('&FSQ' EQ 'FSQ').FSQ1   CHK TO DO FREE SPACE ELEMENT
.*&ALL   SETC  'ALL'
         SPACE 1
.HDR1    ANOP
         AIF   ('&DSPL' NE 'DSPL').HDRA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                     H E A D E R   B L O C K                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I---------------------I---------------------I         *
*          0    I UADSBLNG            I UADSFSQP            I         *
*               I---------------------I---------------------I         *
*          4    I UADSUSER                                  I         *
*               I                                           I         *
*               I---------------------I---------------------I         *
*          12   I UADSBN01            I UADSMAXC            I         *
*               I---------------------I---------------------I         *
*          16   I UADSATTR            I UADSINST            I         *
*               I---------------------I---------------------I         *
*          20   I UADSUPTP                                  I         *
*               I-------------------------------------------I         *
*          24   I UADSPWD1                                  I         *
*               I-------------------------------------------I         *
*          28   I UADSPERP                                  I         *
*               I-------------------------------------------I         *
*          32   I UADSDEST                                  I         *
*               I                                           I         *
*               I-------------------------------------------I         *
*          40   I RESERVED                                  I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.HDRA    ANOP
         SPACE 1
DHED     DSECT ,HEDBPTR
         SPACE 1
         DS    0F                      ALIGN TO WORD BOUNDARY
UADSMHDR DS    0CL16                   COMMON HEADER AREA
UADSBLNG DS    AL2                     BLOCK LENGTH
UADSFSQP DS    AL2                     OFFSET TO INITIAL FSQE (FREE
**                                     ..SPACE QUEUE ELEMENT)
UADSUSER DS    CL8                     USERID
UADSBN01 DS    0BL2                    FLAGS
         DS    BL1                     FIRST BYTE OF FLAGS -- RESERVED
         DS    BL1                     SECOND BYTE OF FLAGS
UADSNUSP EQU   X'80'                   ..0 -- NO NON-USABLE SPACE
**                                     ..1 -- ONLY NON-USABLE SPACE
**                                     .......EXISTS IN THIS BLOCK
UADSEXPF EQU   X'40'                   ..0 -- OLD FORMAT UADS
**                                     ..1 -- NEW EXPANDED FORMAT UADS
**                                     .......EXISTS IN THIS BLOCK
UADSMAXC DS    AL2                     MAXIMUM CORE SIZE ALLOTTABLE
**                                     ..TO THIS USER
UADSATTR DS    0BL2                    SYSTEM ATTRIBUTES OF USERID
         DS    BL1                     FIRST BYTE OF IBM FLAGS
USATR00  EQU   X'80'                   ..0 -- NO OPERATOR CAPABILITY
**                                     ..1 -- OPERATOR CAPABILITY
USATR01  EQU   X'40'                   ..0 -- NO ACCOUNT CAPABILITY
**                                     ..1 -- ACCOUNT CAPABILITY
USATR02  EQU   X'20'                   ..0 -- NO JCL CAPABILITY
**                                     ..1 -- JCL CAPABILITY
USATR03  EQU   X'10'                   ..0 -- NO MOUNT CAPABILITY
**                                     ..1 -- MOUNT CAPABILITY
USATR04  EQU   X'04'                   ..0 -- EDIT RECOVER CAPABILITY
**                                     ..1 -- NO RECOVER CAPABILITY
USATR06  EQU   X'01'                   ..0 -- NO CONSOLE AUTHORITY
**                                     ..1 -- CONSOLE AUTHORITY
**                                     FLAGS 6 THROUGH 15 ARE
**                                     ..RESERVED FOR IBM USE
         DS    BL1                     SECOND BYTE OF FLAGS, 8 -- 15
         SPACE 1
UADSINST DS    BL2                     FOR INSTALLATION USE
UADSUPTP DS    AL4                     OFFSET TO CURRENT UPT
UADSPWD1 DS    AL4                     OFFSET TO FIRST PASSWORD OFFSET
UADSPERP DS    AL4                     OFFSET TO PERFORMANCE GROUP
UADSDEST DS    CL8                     DESTINATION
UADSSUBH DS    CL1                     HOLD CLASS                 .ADD.
UADSSUBC DS    CL1                     JOB CLASS                  .ADD.
UADSSUBM DS    CL1                     MESSAGE CLASS              .ADD.
UADSSOUT DS    CL1                     SYSOUT CLASS               .ADD.
         DS    CL20                    RESERVED                   .CHG.
         SPACE 1
         SPACE 1
         SPACE 1
         AIF   ('&ALL' EQ 'ALL').GOB1   CHK TO DO ALL
         AIF   ('&GNL' NE 'GNL').DOPOB  CHK TO DO GENERAL OFFSET
.GOB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').GOBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*             G E N E R A L   O F F S E T   B L O C K                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSNNFL I UADSNNEX                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSNSUB                                  I         *
*               I-------------------------------------------I         *
*          8    I UADSNDAT                                  I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.GOBA    ANOP
         SPACE 1
UADSNODE DSECT ,UADSNPTR
         SPACE 1
UADSNNFL DS    BL1                    GENERAL OFFSET BLOCK
**                                     ..INDICATORS
UADSNFLG EQU   X'80'                   ..0 -- CONTINUE CHAINING
**                                     ..1 -- LAST OFFSET BLOCK FOR
**                                     .......THIS OFFSET CHAIN
**                                     .. FLAGS 1 THRU 7 ARE RESERVED
UADSNNEX DS    AL3                    OFFSET TO NEXT OFFSET BLOCK
UADSNSUB DS    AL4                    OFFSET TO ASSOCIATED OFFSET
UADSNDAT DS    AL4                    OFFSET TO DATA BLOCK
         SPACE 1
.DOPOB   ANOP
         AIF   ('&ALL' EQ 'ALL').POB1   CHK TO DO ALL
         AIF   ('&POB' NE 'POB').DOAOB  CHK TO DO PASSWORD OFFSET
.POB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').POBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*            P A S S W O R D   O F F S E T   B L O C K                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSPFLG I UADSPNEX                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSPSUB                                  I         *
*               I-------------------------------------------I         *
*          8    I UADSPDAT                                  I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.POBA    ANOP
         SPACE 1
DPOB     DSECT ,DPOBPTR
         SPACE 1
UADSPFLG DS    BL1                     PASSWORD BLOCK INDICATORS
PFLG01   EQU   X'80'                   ..0 -- CONTINUE CHAINING
**                                     ..1 -- LAST PASSWORD FOR THIS
**                                     .......USERID
**                                     ..FLAGS 1 THRU 7 ARE RESERVED
UADSPNEX DS    AL3                     OFFSET TO NEXT PASSWD OFFSET
**                                     ..BLOCK
UADSPSUB DS    AL4                     OFFSET TO ASSOCIATED ACCOUNT
**                                     ..NUMBER OFFSET BLOCK
UADSPDAT DS    AL4                     OFFSET TO PASSWORD DATA BLOCK
         SPACE 1
.DOAOB   ANOP
         AIF   ('&ALL' EQ 'ALL').AOB1   CHK TO DO ALL
         AIF   ('&AOB' NE 'AOB').DOROB  CHK TO DO ACCT NO. OFFSET
.AOB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').AOBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   A C C O U N T   N U M B E R                       *
*                     O F F S E T   B L O C K                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSAFLG I UADSANEX                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSASUB                                  I         *
*               I-------------------------------------------I         *
*          8    I UADSADAT                                  I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.AOBA    ANOP
         SPACE 1
DNOB     DSECT ,DNOBPTR
         SPACE 1
UADSAFLG DS    BL1                    ACCOUNT NUMBER OFFSET BLOCK
**                                     ..INDICATORS
AFLG01   EQU   X'80'                   ..0 -- CONTINUE CHAINING
**                                     ..1 -- LAST ACCOUNT NUMBER FOR
**                                     .......THIS PASSWORD CHAIN
**                                     .. FLAGS 1 THRU 7 ARE RESERVED
UADSANEX DS    AL3                     OFFSET TO NEXT ACCOUNT NUMBER
**                                     ..OFFSET BLOCK
UADSASUB DS    AL4                     OFFSET TO ASSOCIATED PROCNAME
**                                     ..OFFSET BLOCK
UADSADAT DS    AL4                     OFFSET TO ACCOUNT NUMBER DATA
**                                     ..BLOCK
         SPACE 1
.DOROB   ANOP
         AIF   ('&ALL' EQ 'ALL').ROB1   CHK TO DO ALL
         AIF   ('&ROB' NE 'ROB').DOPDB  CHK TO DO PROCNAME OFFSET
.ROB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').ROBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   P R O C E D U R E   N A M E                       *
*                     O F F S E T   B L O C K                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSRFLG I UADSRNEX                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSRSUB                                  I         *
*               I-------------------------------------------I         *
*          8    I UADSRDAT                                  I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.ROBA    ANOP
         SPACE 1
DROB     DSECT ,DROBPTR
         SPACE 1
UADSRFLG DS    BL1                     PROCNAME OFFSET BLOCK
**                                     ..INDICATORS
FLGR01   EQU   X'80'                   ..0 -- CONTINUE CHAINING
**                                     ..1 -- LAST PROCNAME FOR THIS
**                                     .......ACCOUNT NUMBER
**                                     ..FLAGS 1 THRU 7 ARE RESERVED
UADSRNEX DS    AL3                     OFFSET TO NEXT PROCNAME
**                                     ..OFFSET BLOCK
UADSRSUB DS    AL4                     RESERVED BY ACCOUNT
UADSRDAT DS    AL4                     OFFSET TO PROCNAME DATA BLOCK
         SPACE 1
.DOPDB   ANOP
         AIF   ('&ALL' EQ 'ALL').PDB1   CHK TO DO ALL
         AIF   ('&PDB' NE 'PDB').DOADB  CHK TO DO PASSWORD DATA
.PDB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').PDBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*              P A S S W O R D   D A T A   B L O C K                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSPCTR I RESERVED                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSPPWD                                  I         *
*               I                                           I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.PDBA    ANOP
         SPACE 1
DPOBD    DSECT ,UADSPPTR
         SPACE 1
UADSPCTR DS    AL1                     COUNT OF REFERENCES TO THIS
**                                     ..DATA BLOCK
         DS    XL3                     RESERVED FOR ACCOUNT
UADSPPWD DS    CL8                     PASSWORD
         SPACE 1
.DOADB   ANOP
         AIF   ('&ALL' EQ 'ALL').ADB1   CHK TO DO ALL
         AIF   ('&ADB' NE 'ADB').DORDB  CHK TO DO ACCT NO. DATA
.ADB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').ADBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   A C C O U N T   N U M B E R                       *
*                      D A T A     B L O C K                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSACTR I RESERVED                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSADRF (40 BYTES)                       I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I                                           I         *
*               I----------I--------------------------------I         *
*          44   I UADSALEN I UADSANUM (MAX OF 40 BYTES)     I         *
*               I----------I                                I         *
*               =                                           =         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.ADBA    ANOP
         SPACE 1
DNOBD    DSECT ,UADSAPTR
         SPACE 1
UADSACTR DS    AL1                     COUNT OF REFERENCES TO THIS
**                                     ..DATA BLOCK
         DS    XL3                     RESERVED FOR ACCOUNT
UADSADRF DS    CL40                    DRIVER DATA FIELD
UADSALEN DS    AL1                     LENGTH OF FOLLOWING ACCOUNT
**                                     ..NUMBER DATA FIELD
UADSANUM DS    CL40                    ACCT NMBR DATA FIELD
*                                      ..NOTE -- USE SPECIFIC
*                                      .....LENGTH REFERENCES
         SPACE 1
.DORDB   ANOP
         AIF   ('&ALL' EQ 'ALL').RDB1   CHK TO DO ALL
         AIF   ('&RDB' NE 'RDB').DOFSQ  CHK TO DO PROCNAME DATA
.RDB1    ANOP
         AIF   ('&DSPL' NE 'DSPL').RDBA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   P R O C E D U R E   N A M E                       *
*                      D A T A     B L O C K                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I----------I--------------------------------I         *
*          0    I UADSRCTR I RESERVED                       I         *
*               I----------I--------------------------------I         *
*          4    I UADSRNAM                                  I         *
*               I                                           I         *
*               I----------I----------I---------------------I         *
*          12   I RESERVED            I UADSRSIZ            I         *
*               I----------I----------I---------------------I         *
*          16   I UADSUNAM                                  I         *
*               I                                           I         *
*               I-------------------------------------------I         *
*                                                                     *
         SPACE 1
.RDBA    ANOP
         SPACE 1
DROBD    DSECT ,UADSRPTR
         SPACE 1
UADSRCTR DS    AL1                     COUNT OF REFERENCES TO THIS
**                                     DATA BLOCK
         DS    XL3                     RESERVED FOR ACCOUNT
UADSRNAM DS    CL8                     LOGON PROCEDURE NAME
         DS    XL2                     RESERVED
UADSRSIZ DS    AL2                     REGION SIZE SPECIFIED IN THE
**                                     ..NAMED PROCEDURE
UADSUNAM DS    CL8                     ESOTERIC GROUP UNIT NAME
         SPACE 1
.DOFSQ   ANOP
         AIF   ('&ALL' EQ 'ALL').FSQ1   CHK TO DO ALL
         AIF   ('&FSQ' NE 'FSQ').DONE   CHK TO DO FSQE DATA
.FSQ1    ANOP
         AIF   ('&DSPL' NE 'DSPL').FSQEA CHK TO DISPLAY FORMAT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                F R E E   S P A C E   Q U E U E                      *
*                         E L E M E N T                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*               I---------------------I---------------------I         *
*          0    I FSQELNTH            I FSQENEXT            I         *
*               I---------------------I---------------------I         *
*                                                                     *
         SPACE 1
.FSQEA   ANOP
         SPACE 1
UADSFSQE DSECT ,FSQEPTR
         SPACE 1
FSQELNTH DS    AL2                     LENGTH OF FREE SPACE AREA
FSQENEXT DS    AL2                     OFFSET TO NEXT FSQE
.DONE    ANOP
         MEND  , */
         PRINT ON,GEN
         IKJEFUAD  DSPL,ALL
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
